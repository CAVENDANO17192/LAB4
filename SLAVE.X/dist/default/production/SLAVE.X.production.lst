

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Feb 19 22:37:21 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	intentry,global,class=CODE,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.10
    16                           ; Generated 31/07/2019 GMT
    17                           ; 
    18                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F887 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  008F                     	;# 
    94  0090                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0094                     	;# 
   101  0095                     	;# 
   102  0096                     	;# 
   103  0097                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009E                     	;# 
   111  009F                     	;# 
   112  0105                     	;# 
   113  0107                     	;# 
   114  0108                     	;# 
   115  0109                     	;# 
   116  010C                     	;# 
   117  010C                     	;# 
   118  010D                     	;# 
   119  010E                     	;# 
   120  010F                     	;# 
   121  0185                     	;# 
   122  0187                     	;# 
   123  0188                     	;# 
   124  0189                     	;# 
   125  018C                     	;# 
   126  018D                     	;# 
   127  0000                     	;# 
   128  0001                     	;# 
   129  0002                     	;# 
   130  0003                     	;# 
   131  0004                     	;# 
   132  0005                     	;# 
   133  0006                     	;# 
   134  0007                     	;# 
   135  0008                     	;# 
   136  0009                     	;# 
   137  000A                     	;# 
   138  000B                     	;# 
   139  000C                     	;# 
   140  000D                     	;# 
   141  000E                     	;# 
   142  000E                     	;# 
   143  000F                     	;# 
   144  0010                     	;# 
   145  0011                     	;# 
   146  0012                     	;# 
   147  0013                     	;# 
   148  0014                     	;# 
   149  0015                     	;# 
   150  0015                     	;# 
   151  0016                     	;# 
   152  0017                     	;# 
   153  0018                     	;# 
   154  0019                     	;# 
   155  001A                     	;# 
   156  001B                     	;# 
   157  001B                     	;# 
   158  001C                     	;# 
   159  001D                     	;# 
   160  001E                     	;# 
   161  001F                     	;# 
   162  0081                     	;# 
   163  0085                     	;# 
   164  0086                     	;# 
   165  0087                     	;# 
   166  0088                     	;# 
   167  0089                     	;# 
   168  008C                     	;# 
   169  008D                     	;# 
   170  008E                     	;# 
   171  008F                     	;# 
   172  0090                     	;# 
   173  0091                     	;# 
   174  0092                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0094                     	;# 
   179  0095                     	;# 
   180  0096                     	;# 
   181  0097                     	;# 
   182  0098                     	;# 
   183  0099                     	;# 
   184  009A                     	;# 
   185  009B                     	;# 
   186  009C                     	;# 
   187  009D                     	;# 
   188  009E                     	;# 
   189  009F                     	;# 
   190  0105                     	;# 
   191  0107                     	;# 
   192  0108                     	;# 
   193  0109                     	;# 
   194  010C                     	;# 
   195  010C                     	;# 
   196  010D                     	;# 
   197  010E                     	;# 
   198  010F                     	;# 
   199  0185                     	;# 
   200  0187                     	;# 
   201  0188                     	;# 
   202  0189                     	;# 
   203  018C                     	;# 
   204  018D                     	;# 
   205  001E                     _ADRESH	set	30
   206  000B                     _INTCONbits	set	11
   207  0014                     _SSPCONbits	set	20
   208  001F                     _ADCON0bits	set	31
   209  0009                     _PORTE	set	9
   210  0008                     _PORTD	set	8
   211  0007                     _PORTC	set	7
   212  0005                     _PORTA	set	5
   213  0006                     _PORTB	set	6
   214  0013                     _SSPBUF	set	19
   215  000C                     _PIR1bits	set	12
   216  008C                     _PIE1bits	set	140
   217  009F                     _ADCON1bits	set	159
   218  0089                     _TRISE	set	137
   219  0088                     _TRISD	set	136
   220  0087                     _TRISC	set	135
   221  0086                     _TRISB	set	134
   222  0085                     _TRISA	set	133
   223  008F                     _OSCCONbits	set	143
   224  0094                     _SSPSTATbits	set	148
   225  04A0                     _BF	set	1184
   226  0189                     _ANSELH	set	393
   227  0188                     _ANSEL	set	392
   228                           
   229                           ; #config settings
   230  0000                     
   231                           	psect	cinit
   232  000F                     start_initialization:	
   233  000F                     __initialization:	
   234                           
   235                           ; Clear objects allocated to COMMON
   236  000F  01F0               	clrf	__pbssCOMMON& (0+127)
   237  0010  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   238  0011  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   239  0012  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   240  0013                     end_of_initialization:	
   241                           ;End of C runtime variable initialization code
   242                           
   243  0013                     __end_of__initialization:	
   244  0013  0183               	clrf	3
   245  0014  120A  118A  2817   	ljmp	_main	;jump to C main() function
   246                           
   247                           	psect	bssCOMMON
   248  0070                     __pbssCOMMON:	
   249  0070                     _DATA:	
   250  0070                     	ds	1
   251  0071                     _y:	
   252  0071                     	ds	1
   253  0072                     _z:	
   254  0072                     	ds	1
   255  0073                     _x:	
   256  0073                     	ds	1
   257                           
   258                           	psect	cstackCOMMON
   259  0074                     __pcstackCOMMON:	
   260  0074                     ?_MESSAGE:	
   261  0074                     ??_MESSAGE:	
   262                           ; 1 bytes @ 0x0
   263                           
   264  0074                     ?_LOOP:	
   265                           ; 1 bytes @ 0x0
   266                           
   267  0074                     ?_ANALOGICO:	
   268                           ; 1 bytes @ 0x0
   269                           
   270  0074                     ?_ISR:	
   271                           ; 1 bytes @ 0x0
   272                           
   273  0074                     ??_ISR:	
   274                           ; 1 bytes @ 0x0
   275                           
   276  0074                     ?_main:	
   277                           ; 1 bytes @ 0x0
   278                           
   279                           
   280                           ; 1 bytes @ 0x0
   281  0074                     	ds	3
   282  0077                     ??_ANALOGICO:	
   283                           
   284                           ; 1 bytes @ 0x3
   285  0077                     	ds	1
   286  0078                     ??_LOOP:	
   287  0078                     ??_main:	
   288                           ; 1 bytes @ 0x4
   289                           
   290                           
   291                           	psect	maintext
   292  0017                     __pmaintext:	
   293                           ; 1 bytes @ 0x4
   294 ;;
   295 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   296 ;;
   297 ;; *************** function _main *****************
   298 ;; Defined at:
   299 ;;		line 59 in file "ESCLAVO.c"
   300 ;; Parameters:    Size  Location     Type
   301 ;;		None
   302 ;; Auto vars:     Size  Location     Type
   303 ;;		None
   304 ;; Return value:  Size  Location     Type
   305 ;;                  1    wreg      void 
   306 ;; Registers used:
   307 ;;		wreg, status,2, status,0, pclath, cstack
   308 ;; Tracked objects:
   309 ;;		On entry : B00/0
   310 ;;		On exit  : 0/0
   311 ;;		Unchanged: 0/0
   312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   313 ;;      Params:         0       0       0       0       0
   314 ;;      Locals:         0       0       0       0       0
   315 ;;      Temps:          0       0       0       0       0
   316 ;;      Totals:         0       0       0       0       0
   317 ;;Total ram usage:        0 bytes
   318 ;; Hardware stack levels required when called:    4
   319 ;; This function calls:
   320 ;;		_LOOP
   321 ;; This function is called by:
   322 ;;		Startup code after reset
   323 ;; This function uses a non-reentrant model
   324 ;;
   325                           
   326                           
   327                           ;psect for function _main
   328  0017                     _main:	
   329  0017                     l721:	
   330                           ;incstack = 0
   331                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   332                           
   333                           
   334                           ;ESCLAVO.c: 62:     OSCCONbits.IRCF = 0b111;
   335  0017  3070               	movlw	112
   336  0018  1683               	bsf	3,5	;RP0=1, select bank1
   337  0019  1303               	bcf	3,6	;RP1=0, select bank1
   338  001A  048F               	iorwf	15,f	;volatile
   339  001B                     l723:	
   340                           
   341                           ;ESCLAVO.c: 63:     OSCCONbits.OSTS= 0;
   342  001B  118F               	bcf	15,3	;volatile
   343  001C                     l725:	
   344                           
   345                           ;ESCLAVO.c: 64:     OSCCONbits.HTS = 0;
   346  001C  110F               	bcf	15,2	;volatile
   347  001D                     l727:	
   348                           
   349                           ;ESCLAVO.c: 65:     OSCCONbits.LTS = 0;
   350  001D  108F               	bcf	15,1	;volatile
   351  001E                     l729:	
   352                           
   353                           ;ESCLAVO.c: 66:     OSCCONbits.SCS = 1;
   354  001E  140F               	bsf	15,0	;volatile
   355  001F                     l731:	
   356                           
   357                           ;ESCLAVO.c: 70:     ANSEL = 0b00000001;
   358  001F  3001               	movlw	1
   359  0020  1683               	bsf	3,5	;RP0=1, select bank3
   360  0021  1703               	bsf	3,6	;RP1=1, select bank3
   361  0022  0088               	movwf	8	;volatile
   362  0023                     l733:	
   363                           
   364                           ;ESCLAVO.c: 71:     ANSELH = 0b00000000;
   365  0023  0189               	clrf	9	;volatile
   366  0024                     l735:	
   367                           
   368                           ;ESCLAVO.c: 73:     TRISA = 0b00100001;
   369  0024  3021               	movlw	33
   370  0025  1683               	bsf	3,5	;RP0=1, select bank1
   371  0026  1303               	bcf	3,6	;RP1=0, select bank1
   372  0027  0085               	movwf	5	;volatile
   373  0028                     l737:	
   374                           
   375                           ;ESCLAVO.c: 74:     TRISB = 0b00000000;
   376  0028  0186               	clrf	6	;volatile
   377  0029                     l739:	
   378                           
   379                           ;ESCLAVO.c: 75:     TRISC = 0b00011000;
   380  0029  3018               	movlw	24
   381  002A  0087               	movwf	7	;volatile
   382  002B                     l741:	
   383                           
   384                           ;ESCLAVO.c: 76:     TRISD = 0b00000000;
   385  002B  0188               	clrf	8	;volatile
   386  002C                     l743:	
   387                           
   388                           ;ESCLAVO.c: 77:     TRISE = 0b0000;
   389  002C  0189               	clrf	9	;volatile
   390  002D                     l745:	
   391                           
   392                           ;ESCLAVO.c: 79:     PORTA = 0;
   393  002D  1283               	bcf	3,5	;RP0=0, select bank0
   394  002E  1303               	bcf	3,6	;RP1=0, select bank0
   395  002F  0185               	clrf	5	;volatile
   396  0030                     l747:	
   397                           
   398                           ;ESCLAVO.c: 80:     PORTB = 0;
   399  0030  0186               	clrf	6	;volatile
   400  0031                     l749:	
   401                           
   402                           ;ESCLAVO.c: 81:     PORTC = 0;
   403  0031  0187               	clrf	7	;volatile
   404  0032                     l751:	
   405                           
   406                           ;ESCLAVO.c: 82:     PORTD = 0;
   407  0032  0188               	clrf	8	;volatile
   408  0033                     l753:	
   409                           
   410                           ;ESCLAVO.c: 83:     PORTE = 0;
   411  0033  0189               	clrf	9	;volatile
   412  0034                     l755:	
   413                           
   414                           ;ESCLAVO.c: 86:     ADCON0bits.ADCS0 = 1;
   415  0034  171F               	bsf	31,6	;volatile
   416  0035                     l757:	
   417                           
   418                           ;ESCLAVO.c: 87:     ADCON0bits.ADCS1 = 0;
   419  0035  139F               	bcf	31,7	;volatile
   420  0036                     l759:	
   421                           
   422                           ;ESCLAVO.c: 89:     ADCON0bits.ADON = 1;
   423  0036  141F               	bsf	31,0	;volatile
   424  0037                     l761:	
   425                           
   426                           ;ESCLAVO.c: 90:     ADCON1bits.ADFM = 0;
   427  0037  1683               	bsf	3,5	;RP0=1, select bank1
   428  0038  1303               	bcf	3,6	;RP1=0, select bank1
   429  0039  139F               	bcf	31,7	;volatile
   430  003A                     l763:	
   431                           
   432                           ;ESCLAVO.c: 91:     ADCON1bits.VCFG0 = 0;
   433  003A  121F               	bcf	31,4	;volatile
   434  003B                     l765:	
   435                           
   436                           ;ESCLAVO.c: 92:     ADCON1bits.VCFG1 = 0;
   437  003B  129F               	bcf	31,5	;volatile
   438  003C                     l767:	
   439                           
   440                           ;ESCLAVO.c: 95:     SSPSTATbits.SMP = 0;
   441  003C  1394               	bcf	20,7	;volatile
   442  003D                     l769:	
   443                           
   444                           ;ESCLAVO.c: 96:     SSPSTATbits.CKE = 0;
   445  003D  1314               	bcf	20,6	;volatile
   446  003E                     l771:	
   447                           
   448                           ;ESCLAVO.c: 97:     SSPCONbits.SSPEN = 1;
   449  003E  1283               	bcf	3,5	;RP0=0, select bank0
   450  003F  1303               	bcf	3,6	;RP1=0, select bank0
   451  0040  1694               	bsf	20,5	;volatile
   452  0041                     l773:	
   453                           
   454                           ;ESCLAVO.c: 98:     SSPCONbits.CKP = 1;
   455  0041  1614               	bsf	20,4	;volatile
   456  0042                     l775:	
   457                           
   458                           ;ESCLAVO.c: 99:     SSPCONbits.SSPM = 0b0100;
   459  0042  0814               	movf	20,w	;volatile
   460  0043  39F0               	andlw	-16
   461  0044  3804               	iorlw	4
   462  0045  0094               	movwf	20	;volatile
   463  0046                     l777:	
   464                           
   465                           ;ESCLAVO.c: 102:     PIE1bits.SSPIE = 1;
   466  0046  1683               	bsf	3,5	;RP0=1, select bank1
   467  0047  1303               	bcf	3,6	;RP1=0, select bank1
   468  0048  158C               	bsf	12,3	;volatile
   469  0049                     l779:	
   470                           
   471                           ;ESCLAVO.c: 103:     INTCONbits.PEIE = 1;
   472  0049  170B               	bsf	11,6	;volatile
   473  004A                     l781:	
   474                           
   475                           ;ESCLAVO.c: 104:     INTCONbits.GIE = 1;
   476  004A  178B               	bsf	11,7	;volatile
   477  004B                     l783:	
   478                           
   479                           ;ESCLAVO.c: 106:     x=0;
   480  004B  01F3               	clrf	_x
   481  004C                     l785:	
   482                           
   483                           ;ESCLAVO.c: 107:     y = 0;
   484  004C  01F1               	clrf	_y
   485  004D                     l787:	
   486                           
   487                           ;ESCLAVO.c: 108:     LOOP();
   488  004D  120A  118A  2094  120A  118A  	fcall	_LOOP
   489  0052                     l73:	
   490  0052  120A  118A  280C   	ljmp	start
   491  0055                     __end_of_main:	
   492                           
   493                           	psect	text1
   494  0094                     __ptext1:	
   495 ;; *************** function _LOOP *****************
   496 ;; Defined at:
   497 ;;		line 110 in file "ESCLAVO.c"
   498 ;; Parameters:    Size  Location     Type
   499 ;;		None
   500 ;; Auto vars:     Size  Location     Type
   501 ;;		None
   502 ;; Return value:  Size  Location     Type
   503 ;;                  1    wreg      void 
   504 ;; Registers used:
   505 ;;		wreg, status,2, status,0, pclath, cstack
   506 ;; Tracked objects:
   507 ;;		On entry : 0/0
   508 ;;		On exit  : 0/0
   509 ;;		Unchanged: 0/0
   510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   511 ;;      Params:         0       0       0       0       0
   512 ;;      Locals:         0       0       0       0       0
   513 ;;      Temps:          0       0       0       0       0
   514 ;;      Totals:         0       0       0       0       0
   515 ;;Total ram usage:        0 bytes
   516 ;; Hardware stack levels used:    1
   517 ;; Hardware stack levels required when called:    3
   518 ;; This function calls:
   519 ;;		_ANALOGICO
   520 ;; This function is called by:
   521 ;;		_main
   522 ;; This function uses a non-reentrant model
   523 ;;
   524                           
   525                           
   526                           ;psect for function _LOOP
   527  0094                     _LOOP:	
   528  0094                     l76:	
   529                           ;incstack = 0
   530                           ; Regs used in _LOOP: [wreg+status,2+status,0+pclath+cstack]
   531                           ;ESCLAVO.c: 111:     while(1){
   532                           
   533  0094                     l707:	
   534                           
   535                           ;ESCLAVO.c: 114:     ANALOGICO();
   536  0094  120A  118A  2073  120A  118A  	fcall	_ANALOGICO
   537  0099  2894               	goto	l76
   538  009A  0008               	return
   539  009B                     __end_of_LOOP:	
   540                           
   541                           	psect	text2
   542  0073                     __ptext2:	
   543 ;; *************** function _ANALOGICO *****************
   544 ;; Defined at:
   545 ;;		line 132 in file "ESCLAVO.c"
   546 ;; Parameters:    Size  Location     Type
   547 ;;		None
   548 ;; Auto vars:     Size  Location     Type
   549 ;;		None
   550 ;; Return value:  Size  Location     Type
   551 ;;                  1    wreg      void 
   552 ;; Registers used:
   553 ;;		wreg, status,2, status,0
   554 ;; Tracked objects:
   555 ;;		On entry : 0/0
   556 ;;		On exit  : 0/0
   557 ;;		Unchanged: 0/0
   558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   559 ;;      Params:         0       0       0       0       0
   560 ;;      Locals:         0       0       0       0       0
   561 ;;      Temps:          1       0       0       0       0
   562 ;;      Totals:         1       0       0       0       0
   563 ;;Total ram usage:        1 bytes
   564 ;; Hardware stack levels used:    1
   565 ;; Hardware stack levels required when called:    2
   566 ;; This function calls:
   567 ;;		Nothing
   568 ;; This function is called by:
   569 ;;		_LOOP
   570 ;; This function uses a non-reentrant model
   571 ;;
   572                           
   573                           
   574                           ;psect for function _ANALOGICO
   575  0073                     _ANALOGICO:	
   576  0073                     l689:	
   577                           ;incstack = 0
   578                           ; Regs used in _ANALOGICO: [wreg+status,2+status,0]
   579                           
   580                           
   581                           ;ESCLAVO.c: 133:     _delay((unsigned long)((1)*(4000000/4000.0)));
   582  0073  30C7               	movlw	199
   583  0074  00F7               	movwf	??_ANALOGICO
   584  0075                     u57:	
   585  0075  2876               	nop2
   586  0076  0BF7               	decfsz	??_ANALOGICO,f
   587  0077  2875               	goto	u57
   588  0078  2879               	nop2
   589  0079  287A               	nop2
   590  007A                     l691:	
   591                           
   592                           ;ESCLAVO.c: 134:         ADCON0bits.CHS = 0000;
   593  007A  30C3               	movlw	-61
   594  007B  1283               	bcf	3,5	;RP0=0, select bank0
   595  007C  1303               	bcf	3,6	;RP1=0, select bank0
   596  007D  059F               	andwf	31,f	;volatile
   597  007E                     l693:	
   598                           
   599                           ;ESCLAVO.c: 135:         ADCON0bits.ADON = 1;
   600  007E  141F               	bsf	31,0	;volatile
   601  007F                     l695:	
   602                           
   603                           ;ESCLAVO.c: 136:         ADCON0bits.GO = 1;
   604  007F  149F               	bsf	31,1	;volatile
   605  0080                     l88:	
   606                           ;ESCLAVO.c: 137:         while(ADCON0bits.GO);
   607                           
   608  0080  189F               	btfsc	31,1	;volatile
   609  0081  2883               	goto	u11
   610  0082  2884               	goto	u10
   611  0083                     u11:	
   612  0083  2880               	goto	l88
   613  0084                     u10:	
   614  0084                     l697:	
   615                           
   616                           ;ESCLAVO.c: 139:             y = ADRESH;
   617  0084  081E               	movf	30,w	;volatile
   618  0085  00F7               	movwf	??_ANALOGICO
   619  0086  0877               	movf	??_ANALOGICO,w
   620  0087  00F1               	movwf	_y
   621  0088                     l91:	
   622  0088  0008               	return
   623  0089                     __end_of_ANALOGICO:	
   624                           
   625                           	psect	text3
   626  0055                     __ptext3:	
   627 ;; *************** function _ISR *****************
   628 ;; Defined at:
   629 ;;		line 44 in file "ESCLAVO.c"
   630 ;; Parameters:    Size  Location     Type
   631 ;;		None
   632 ;; Auto vars:     Size  Location     Type
   633 ;;		None
   634 ;; Return value:  Size  Location     Type
   635 ;;                  1    wreg      void 
   636 ;; Registers used:
   637 ;;		wreg, status,2, status,0, pclath, cstack
   638 ;; Tracked objects:
   639 ;;		On entry : 0/0
   640 ;;		On exit  : 0/0
   641 ;;		Unchanged: 0/0
   642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   643 ;;      Params:         0       0       0       0       0
   644 ;;      Locals:         0       0       0       0       0
   645 ;;      Temps:          3       0       0       0       0
   646 ;;      Totals:         3       0       0       0       0
   647 ;;Total ram usage:        3 bytes
   648 ;; Hardware stack levels used:    1
   649 ;; Hardware stack levels required when called:    1
   650 ;; This function calls:
   651 ;;		_MESSAGE
   652 ;; This function is called by:
   653 ;;		Interrupt level 1
   654 ;; This function uses a non-reentrant model
   655 ;;
   656                           
   657                           
   658                           ;psect for function _ISR
   659  0055                     _ISR:	
   660  0055                     i1l709:	
   661                           
   662                           ;ESCLAVO.c: 46:     if(PIR1bits.SSPIF==1 ){
   663  0055  1283               	bcf	3,5	;RP0=0, select bank0
   664  0056  1303               	bcf	3,6	;RP1=0, select bank0
   665  0057  1D8C               	btfss	12,3	;volatile
   666  0058  285A               	goto	u3_21
   667  0059  285B               	goto	u3_20
   668  005A                     u3_21:	
   669  005A  2867               	goto	i1l717
   670  005B                     u3_20:	
   671  005B                     i1l711:	
   672                           
   673                           ;ESCLAVO.c: 47:         x= SSPBUF;
   674  005B  0813               	movf	19,w	;volatile
   675  005C  00F4               	movwf	??_ISR
   676  005D  0874               	movf	??_ISR,w
   677  005E  00F3               	movwf	_x
   678                           
   679                           ;ESCLAVO.c: 49:         PORTB = x;
   680  005F  0873               	movf	_x,w
   681  0060  0086               	movwf	6	;volatile
   682  0061                     i1l713:	
   683                           
   684                           ;ESCLAVO.c: 50:           SSPSTATbits.BF= 0;
   685  0061  1683               	bsf	3,5	;RP0=1, select bank1
   686  0062  1303               	bcf	3,6	;RP1=0, select bank1
   687  0063  1014               	bcf	20,0	;volatile
   688  0064                     i1l715:	
   689                           
   690                           ;ESCLAVO.c: 51:           PIR1bits.SSPIF = 0;
   691  0064  1283               	bcf	3,5	;RP0=0, select bank0
   692  0065  1303               	bcf	3,6	;RP1=0, select bank0
   693  0066  118C               	bcf	12,3	;volatile
   694  0067                     i1l717:	
   695                           
   696                           ;ESCLAVO.c: 54:     MESSAGE();
   697  0067  120A  118A  2089  120A  118A  	fcall	_MESSAGE
   698  006C                     i1l68:	
   699  006C  0876               	movf	??_ISR+2,w
   700  006D  008A               	movwf	10
   701  006E  0E75               	swapf	(??_ISR+1)^(0+4294967168),w
   702  006F  0083               	movwf	3
   703  0070  0EFE               	swapf	btemp,f
   704  0071  0E7E               	swapf	btemp,w
   705  0072  0009               	retfie
   706  0073                     __end_of_ISR:	
   707                           
   708                           	psect	intentry
   709  0004                     __pintentry:	
   710                           ;incstack = 0
   711                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
   712                           
   713  0004                     interrupt_function:	
   714  007E                     saved_w	set	btemp
   715  0004  00FE               	movwf	btemp
   716  0005  0E03               	swapf	3,w
   717  0006  00F5               	movwf	??_ISR+1
   718  0007  080A               	movf	10,w
   719  0008  00F6               	movwf	??_ISR+2
   720  0009  120A  118A  2855   	ljmp	_ISR
   721                           
   722                           	psect	text4
   723  0089                     __ptext4:	
   724 ;; *************** function _MESSAGE *****************
   725 ;; Defined at:
   726 ;;		line 123 in file "ESCLAVO.c"
   727 ;; Parameters:    Size  Location     Type
   728 ;;		None
   729 ;; Auto vars:     Size  Location     Type
   730 ;;		None
   731 ;; Return value:  Size  Location     Type
   732 ;;                  1    wreg      void 
   733 ;; Registers used:
   734 ;;		wreg
   735 ;; Tracked objects:
   736 ;;		On entry : 0/0
   737 ;;		On exit  : 0/0
   738 ;;		Unchanged: 0/0
   739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   740 ;;      Params:         0       0       0       0       0
   741 ;;      Locals:         0       0       0       0       0
   742 ;;      Temps:          0       0       0       0       0
   743 ;;      Totals:         0       0       0       0       0
   744 ;;Total ram usage:        0 bytes
   745 ;; Hardware stack levels used:    1
   746 ;; This function calls:
   747 ;;		Nothing
   748 ;; This function is called by:
   749 ;;		_ISR
   750 ;; This function uses a non-reentrant model
   751 ;;
   752                           
   753                           
   754                           ;psect for function _MESSAGE
   755  0089                     _MESSAGE:	
   756  0089                     i1l701:	
   757                           ;incstack = 0
   758                           ; Regs used in _MESSAGE: [wreg]
   759                           
   760  0089                     i1l82:	
   761                           ;ESCLAVO.c: 125:     while(BF==1);
   762                           
   763  0089  1683               	bsf	3,5	;RP0=1, select bank1
   764  008A  1303               	bcf	3,6	;RP1=0, select bank1
   765  008B  1814               	btfsc	20,0	;volatile
   766  008C  288E               	goto	u2_21
   767  008D  288F               	goto	u2_20
   768  008E                     u2_21:	
   769  008E  2889               	goto	i1l82
   770  008F                     u2_20:	
   771  008F                     i1l703:	
   772                           
   773                           ;ESCLAVO.c: 126:     SSPBUF = y;
   774  008F  0871               	movf	_y,w
   775  0090  1283               	bcf	3,5	;RP0=0, select bank0
   776  0091  1303               	bcf	3,6	;RP1=0, select bank0
   777  0092  0093               	movwf	19	;volatile
   778  0093                     i1l85:	
   779  0093  0008               	return
   780  0094                     __end_of_MESSAGE:	
   781  007E                     btemp	set	126	;btemp
   782  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _LOOP->_ANALOGICO

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                               _LOOP
 ---------------------------------------------------------------------------------
 (1) _LOOP                                                 0     0      0       0
                          _ANALOGICO
 ---------------------------------------------------------------------------------
 (2) _ANALOGICO                                            1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
                            _MESSAGE
 ---------------------------------------------------------------------------------
 (4) _MESSAGE                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LOOP
     _ANALOGICO

 _ISR (ROOT)
   _MESSAGE

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      4       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       8       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       8      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Feb 19 22:37:21 2020

                       _x 0073                         _y 0071                         _z 0072  
             __CFG_CP$OFF 0000               _SSPSTATbits 0094                        _BF 04A0  
                      l73 0052                        l91 0088                        l76 0094  
                      l88 0080                        u10 0084                        u11 0083  
                      u57 0075        __size_of_ANALOGICO 0016                       l721 0017  
                     l707 0094                       l731 001F                       l723 001B  
                     l741 002B                       l733 0023                       l725 001C  
                     l751 0032                       l743 002C                       l735 0024  
                     l727 001D                       l761 0037                       l753 0033  
                     l745 002D                       l737 0028                       l729 001E  
                     l691 007A                       l771 003E                       l763 003A  
                     l755 0034                       l747 0030                       l739 0029  
                     l693 007E                       l781 004A                       l773 0041  
                     l765 003B                       l757 0035                       l749 0031  
                     l695 007F                       l783 004B                       l775 0042  
                     l767 003C                       l759 0036                       l697 0084  
                     l689 0073                       l785 004C                       l777 0046  
                     l769 003D                       l787 004D                       l779 0049  
            __CFG_CPD$OFF 0000                       _ISR 0055              __CFG_LVP$OFF 0000  
                    ?_ISR 0074           __end_of_MESSAGE 0094                      _DATA 0070  
                    i1l82 0089                      i1l68 006C                      i1l85 0093  
                    _LOOP 0094                      u2_20 008F                      u2_21 008E  
                    u3_20 005B                      u3_21 005A              __CFG_WRT$OFF 0000  
                    _main 0017                      btemp 007E                      start 000C  
           __CFG_IESO$OFF 0000                     ??_ISR 0074                     ?_LOOP 0074  
                   ?_main 0074             __CFG_WDTE$OFF 0000                     _ANSEL 0188  
                   i1l701 0089                     i1l703 008F                     i1l711 005B  
                   i1l713 0061                     i1l715 0064                     i1l717 0067  
                   i1l709 0055                     _PORTA 0005                     _PORTB 0006  
                   _PORTC 0007                     _PORTD 0008                     _PORTE 0009  
                   _TRISA 0085                     _TRISB 0086                     _TRISC 0087  
                   _TRISD 0088                     _TRISE 0089            __CFG_FCMEN$OFF 0000  
          __CFG_BOREN$OFF 0000                     pclath 000A         __end_of_ANALOGICO 0089  
                   status 0003                     wtemp0 007E              __end_of_LOOP 009B  
          __CFG_MCLRE$OFF 0000           __initialization 000F              __end_of_main 0055  
                  ??_LOOP 0078                    ??_main 0078                 ??_MESSAGE 0074  
                  _ADRESH 001E                    _ANSELH 0189                    _SSPBUF 0013  
          __CFG_PWRTE$OFF 0000                    saved_w 007E   __end_of__initialization 0013  
          __pcstackCOMMON 0074                __pmaintext 0017                __pintentry 0004  
                 _MESSAGE 0089                 _ANALOGICO 0073                   __ptext1 0094  
                 __ptext2 0073                   __ptext3 0055                   __ptext4 0089  
            __size_of_ISR 001E      end_of_initialization 0013                ?_ANALOGICO 0074  
     start_initialization 000F               __end_of_ISR 0073  __CFG_FOSC$INTRC_NOCLKOUT 0000  
             ??_ANALOGICO 0077                  ?_MESSAGE 0074               __pbssCOMMON 0070  
               ___latbits 0002         interrupt_function 0004                  _PIE1bits 008C  
                _PIR1bits 000C                _ADCON0bits 001F                _ADCON1bits 009F  
        __size_of_MESSAGE 000B         __CFG_BOR4V$BOR40V 0000             __size_of_LOOP 0007  
           __size_of_main 003E                _INTCONbits 000B                  intlevel1 0000  
              _OSCCONbits 008F                _SSPCONbits 0014  
