

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Feb 19 20:14:17 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.10
    17                           ; Generated 31/07/2019 GMT
    18                           ; 
    19                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F887 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  0088                     	;# 
    90  0089                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  008F                     	;# 
    95  0090                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0097                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  0105                     	;# 
   114  0107                     	;# 
   115  0108                     	;# 
   116  0109                     	;# 
   117  010C                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  010F                     	;# 
   122  0185                     	;# 
   123  0187                     	;# 
   124  0188                     	;# 
   125  0189                     	;# 
   126  018C                     	;# 
   127  018D                     	;# 
   128  0000                     	;# 
   129  0001                     	;# 
   130  0002                     	;# 
   131  0003                     	;# 
   132  0004                     	;# 
   133  0005                     	;# 
   134  0006                     	;# 
   135  0007                     	;# 
   136  0008                     	;# 
   137  0009                     	;# 
   138  000A                     	;# 
   139  000B                     	;# 
   140  000C                     	;# 
   141  000D                     	;# 
   142  000E                     	;# 
   143  000E                     	;# 
   144  000F                     	;# 
   145  0010                     	;# 
   146  0011                     	;# 
   147  0012                     	;# 
   148  0013                     	;# 
   149  0014                     	;# 
   150  0015                     	;# 
   151  0015                     	;# 
   152  0016                     	;# 
   153  0017                     	;# 
   154  0018                     	;# 
   155  0019                     	;# 
   156  001A                     	;# 
   157  001B                     	;# 
   158  001B                     	;# 
   159  001C                     	;# 
   160  001D                     	;# 
   161  001E                     	;# 
   162  001F                     	;# 
   163  0081                     	;# 
   164  0085                     	;# 
   165  0086                     	;# 
   166  0087                     	;# 
   167  0088                     	;# 
   168  0089                     	;# 
   169  008C                     	;# 
   170  008D                     	;# 
   171  008E                     	;# 
   172  008F                     	;# 
   173  0090                     	;# 
   174  0091                     	;# 
   175  0092                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0094                     	;# 
   180  0095                     	;# 
   181  0096                     	;# 
   182  0097                     	;# 
   183  0098                     	;# 
   184  0099                     	;# 
   185  009A                     	;# 
   186  009B                     	;# 
   187  009C                     	;# 
   188  009D                     	;# 
   189  009E                     	;# 
   190  009F                     	;# 
   191  0105                     	;# 
   192  0107                     	;# 
   193  0108                     	;# 
   194  0109                     	;# 
   195  010C                     	;# 
   196  010C                     	;# 
   197  010D                     	;# 
   198  010E                     	;# 
   199  010F                     	;# 
   200  0185                     	;# 
   201  0187                     	;# 
   202  0188                     	;# 
   203  0189                     	;# 
   204  018C                     	;# 
   205  018D                     	;# 
   206                           
   207                           	psect	nvCOMMON
   208  0077                     __pnvCOMMON:	
   209  0077                     _BANDERA:	
   210  0077                     	ds	1
   211  001E                     _ADRESH	set	30
   212  0008                     _PORTDbits	set	8
   213  000B                     _INTCONbits	set	11
   214  0014                     _SSPCONbits	set	20
   215  001F                     _ADCON0bits	set	31
   216  0009                     _PORTE	set	9
   217  0008                     _PORTD	set	8
   218  0007                     _PORTC	set	7
   219  0005                     _PORTA	set	5
   220  0006                     _PORTB	set	6
   221  0013                     _SSPBUF	set	19
   222  000C                     _PIR1bits	set	12
   223  008C                     _PIE1bits	set	140
   224  009F                     _ADCON1bits	set	159
   225  0089                     _TRISE	set	137
   226  0088                     _TRISD	set	136
   227  0087                     _TRISC	set	135
   228  0086                     _TRISB	set	134
   229  0085                     _TRISA	set	133
   230  008F                     _OSCCONbits	set	143
   231  0094                     _SSPSTATbits	set	148
   232  0189                     _ANSELH	set	393
   233  0188                     _ANSEL	set	392
   234                           
   235                           ; #config settings
   236  0000                     
   237                           	psect	cinit
   238  000F                     start_initialization:	
   239  000F                     __initialization:	
   240                           
   241                           ; Clear objects allocated to COMMON
   242  000F  01F4               	clrf	__pbssCOMMON& (0+127)
   243  0010  01F5               	clrf	(__pbssCOMMON+1)& (0+127)
   244  0011  01F6               	clrf	(__pbssCOMMON+2)& (0+127)
   245  0012                     end_of_initialization:	
   246                           ;End of C runtime variable initialization code
   247                           
   248  0012                     __end_of__initialization:	
   249  0012  0183               	clrf	3
   250  0013  120A  118A  2816   	ljmp	_main	;jump to C main() function
   251                           
   252                           	psect	bssCOMMON
   253  0074                     __pbssCOMMON:	
   254  0074                     _y:	
   255  0074                     	ds	1
   256  0075                     _DATA:	
   257  0075                     	ds	1
   258  0076                     _x:	
   259  0076                     	ds	1
   260                           
   261                           	psect	cstackCOMMON
   262  0070                     __pcstackCOMMON:	
   263  0070                     ?_LOOP:	
   264  0070                     ?_ANALOGICO:	
   265                           ; 1 bytes @ 0x0
   266                           
   267  0070                     ?_MESSAGE:	
   268                           ; 1 bytes @ 0x0
   269                           
   270  0070                     ?_ISR:	
   271                           ; 1 bytes @ 0x0
   272                           
   273  0070                     ??_ISR:	
   274                           ; 1 bytes @ 0x0
   275                           
   276  0070                     ?_main:	
   277                           ; 1 bytes @ 0x0
   278                           
   279                           
   280                           ; 1 bytes @ 0x0
   281  0070                     	ds	3
   282  0073                     ??_ANALOGICO:	
   283  0073                     ??_MESSAGE:	
   284                           ; 1 bytes @ 0x3
   285                           
   286                           
   287                           ; 1 bytes @ 0x3
   288  0073                     	ds	1
   289  0074                     ??_LOOP:	
   290  0074                     ??_main:	
   291                           ; 1 bytes @ 0x4
   292                           
   293                           
   294                           	psect	maintext
   295  0016                     __pmaintext:	
   296                           ; 1 bytes @ 0x4
   297 ;;
   298 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   299 ;;
   300 ;; *************** function _main *****************
   301 ;; Defined at:
   302 ;;		line 56 in file "MAESTRO.c"
   303 ;; Parameters:    Size  Location     Type
   304 ;;		None
   305 ;; Auto vars:     Size  Location     Type
   306 ;;		None
   307 ;; Return value:  Size  Location     Type
   308 ;;                  1    wreg      void 
   309 ;; Registers used:
   310 ;;		wreg, status,2, status,0, pclath, cstack
   311 ;; Tracked objects:
   312 ;;		On entry : B00/0
   313 ;;		On exit  : 0/0
   314 ;;		Unchanged: 0/0
   315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   316 ;;      Params:         0       0       0       0       0
   317 ;;      Locals:         0       0       0       0       0
   318 ;;      Temps:          0       0       0       0       0
   319 ;;      Totals:         0       0       0       0       0
   320 ;;Total ram usage:        0 bytes
   321 ;; Hardware stack levels required when called:    3
   322 ;; This function calls:
   323 ;;		_LOOP
   324 ;; This function is called by:
   325 ;;		Startup code after reset
   326 ;; This function uses a non-reentrant model
   327 ;;
   328                           
   329                           
   330                           ;psect for function _main
   331  0016                     _main:	
   332  0016                     l710:	
   333                           ;incstack = 0
   334                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   335                           
   336                           
   337                           ;MAESTRO.c: 59:     OSCCONbits.IRCF = 0b111;
   338  0016  3070               	movlw	112
   339  0017  1683               	bsf	3,5	;RP0=1, select bank1
   340  0018  1303               	bcf	3,6	;RP1=0, select bank1
   341  0019  048F               	iorwf	15,f	;volatile
   342  001A                     l712:	
   343                           
   344                           ;MAESTRO.c: 60:     OSCCONbits.OSTS= 0;
   345  001A  118F               	bcf	15,3	;volatile
   346  001B                     l714:	
   347                           
   348                           ;MAESTRO.c: 61:     OSCCONbits.HTS = 0;
   349  001B  110F               	bcf	15,2	;volatile
   350  001C                     l716:	
   351                           
   352                           ;MAESTRO.c: 62:     OSCCONbits.LTS = 0;
   353  001C  108F               	bcf	15,1	;volatile
   354  001D                     l718:	
   355                           
   356                           ;MAESTRO.c: 63:     OSCCONbits.SCS = 1;
   357  001D  140F               	bsf	15,0	;volatile
   358  001E                     l720:	
   359                           
   360                           ;MAESTRO.c: 67:     ANSEL = 0b000100001;
   361  001E  3021               	movlw	33
   362  001F  1683               	bsf	3,5	;RP0=1, select bank3
   363  0020  1703               	bsf	3,6	;RP1=1, select bank3
   364  0021  0088               	movwf	8	;volatile
   365  0022                     l722:	
   366                           
   367                           ;MAESTRO.c: 68:     ANSELH = 0b00000000;
   368  0022  0189               	clrf	9	;volatile
   369  0023                     l724:	
   370                           
   371                           ;MAESTRO.c: 70:     TRISA = 0b00000001;
   372  0023  3001               	movlw	1
   373  0024  1683               	bsf	3,5	;RP0=1, select bank1
   374  0025  1303               	bcf	3,6	;RP1=0, select bank1
   375  0026  0085               	movwf	5	;volatile
   376  0027                     l726:	
   377                           
   378                           ;MAESTRO.c: 71:     TRISB = 0b00000000;
   379  0027  0186               	clrf	6	;volatile
   380  0028                     l728:	
   381                           
   382                           ;MAESTRO.c: 72:     TRISC = 0b00010000;
   383  0028  3010               	movlw	16
   384  0029  0087               	movwf	7	;volatile
   385  002A                     l730:	
   386                           
   387                           ;MAESTRO.c: 73:     TRISD = 0b00000000;
   388  002A  0188               	clrf	8	;volatile
   389  002B                     l732:	
   390                           
   391                           ;MAESTRO.c: 74:     TRISE = 0001;
   392  002B  3001               	movlw	1
   393  002C  0089               	movwf	9	;volatile
   394  002D                     l734:	
   395                           
   396                           ;MAESTRO.c: 76:     PORTA = 0;
   397  002D  1283               	bcf	3,5	;RP0=0, select bank0
   398  002E  1303               	bcf	3,6	;RP1=0, select bank0
   399  002F  0185               	clrf	5	;volatile
   400  0030                     l736:	
   401                           
   402                           ;MAESTRO.c: 77:     PORTB = 0;
   403  0030  0186               	clrf	6	;volatile
   404  0031                     l738:	
   405                           
   406                           ;MAESTRO.c: 78:     PORTC = 0;
   407  0031  0187               	clrf	7	;volatile
   408  0032                     l740:	
   409                           
   410                           ;MAESTRO.c: 79:     PORTD = 0;
   411  0032  0188               	clrf	8	;volatile
   412  0033                     l742:	
   413                           
   414                           ;MAESTRO.c: 80:     PORTE = 0;
   415  0033  0189               	clrf	9	;volatile
   416  0034                     l744:	
   417                           
   418                           ;MAESTRO.c: 83:     ADCON0bits.ADCS0 = 1;
   419  0034  171F               	bsf	31,6	;volatile
   420  0035                     l746:	
   421                           
   422                           ;MAESTRO.c: 84:     ADCON0bits.ADCS1 = 0;
   423  0035  139F               	bcf	31,7	;volatile
   424  0036                     l748:	
   425                           
   426                           ;MAESTRO.c: 85:     ADCON0bits.CHS0 = 0;
   427  0036  111F               	bcf	31,2	;volatile
   428  0037                     l750:	
   429                           
   430                           ;MAESTRO.c: 86:     ADCON0bits.CHS1 = 0;
   431  0037  119F               	bcf	31,3	;volatile
   432  0038                     l752:	
   433                           
   434                           ;MAESTRO.c: 87:     ADCON0bits.CHS2 = 0;
   435  0038  121F               	bcf	31,4	;volatile
   436  0039                     l754:	
   437                           
   438                           ;MAESTRO.c: 88:     ADCON0bits.CHS3 = 0;
   439  0039  129F               	bcf	31,5	;volatile
   440  003A                     l756:	
   441                           
   442                           ;MAESTRO.c: 89:     ADCON0bits.ADON = 1;
   443  003A  141F               	bsf	31,0	;volatile
   444  003B                     l758:	
   445                           
   446                           ;MAESTRO.c: 90:     ADCON1bits.ADFM = 0;
   447  003B  1683               	bsf	3,5	;RP0=1, select bank1
   448  003C  1303               	bcf	3,6	;RP1=0, select bank1
   449  003D  139F               	bcf	31,7	;volatile
   450  003E                     l760:	
   451                           
   452                           ;MAESTRO.c: 91:     ADCON1bits.VCFG0 = 0;
   453  003E  121F               	bcf	31,4	;volatile
   454  003F                     l762:	
   455                           
   456                           ;MAESTRO.c: 92:     ADCON1bits.VCFG1 = 0;
   457  003F  129F               	bcf	31,5	;volatile
   458  0040                     l764:	
   459                           
   460                           ;MAESTRO.c: 96:     SSPSTATbits.SMP = 0;
   461  0040  1394               	bcf	20,7	;volatile
   462  0041                     l766:	
   463                           
   464                           ;MAESTRO.c: 97:     SSPSTATbits.CKE = 0;
   465  0041  1314               	bcf	20,6	;volatile
   466  0042                     l768:	
   467                           
   468                           ;MAESTRO.c: 98:     SSPCONbits.SSPEN = 1;
   469  0042  1283               	bcf	3,5	;RP0=0, select bank0
   470  0043  1303               	bcf	3,6	;RP1=0, select bank0
   471  0044  1694               	bsf	20,5	;volatile
   472  0045                     l770:	
   473                           
   474                           ;MAESTRO.c: 99:     SSPCONbits.CKP = 1;
   475  0045  1614               	bsf	20,4	;volatile
   476                           
   477                           ;MAESTRO.c: 100:     SSPCONbits.SSPM = 0b0010;
   478  0046  0814               	movf	20,w	;volatile
   479  0047  39F0               	andlw	-16
   480  0048  3802               	iorlw	2
   481  0049  0094               	movwf	20	;volatile
   482  004A                     l772:	
   483                           
   484                           ;MAESTRO.c: 103:     PIE1bits.SSPIE = 1;
   485  004A  1683               	bsf	3,5	;RP0=1, select bank1
   486  004B  1303               	bcf	3,6	;RP1=0, select bank1
   487  004C  158C               	bsf	12,3	;volatile
   488  004D                     l774:	
   489                           
   490                           ;MAESTRO.c: 104:     INTCONbits.PEIE = 1;
   491  004D  170B               	bsf	11,6	;volatile
   492  004E                     l776:	
   493                           
   494                           ;MAESTRO.c: 105:     INTCONbits.GIE = 1;
   495  004E  178B               	bsf	11,7	;volatile
   496  004F                     l778:	
   497                           
   498                           ;MAESTRO.c: 106:     BANDERA = 1;
   499  004F  01F7               	clrf	_BANDERA
   500  0050  0AF7               	incf	_BANDERA,f
   501  0051                     l780:	
   502                           
   503                           ;MAESTRO.c: 107:     LOOP();
   504  0051  120A  118A  2088  120A  118A  	fcall	_LOOP
   505  0056                     l73:	
   506  0056  120A  118A  280C   	ljmp	start
   507  0059                     __end_of_main:	
   508                           
   509                           	psect	text1
   510  0088                     __ptext1:	
   511 ;; *************** function _LOOP *****************
   512 ;; Defined at:
   513 ;;		line 111 in file "MAESTRO.c"
   514 ;; Parameters:    Size  Location     Type
   515 ;;		None
   516 ;; Auto vars:     Size  Location     Type
   517 ;;		None
   518 ;; Return value:  Size  Location     Type
   519 ;;                  1    wreg      void 
   520 ;; Registers used:
   521 ;;		wreg, status,2, status,0, pclath, cstack
   522 ;; Tracked objects:
   523 ;;		On entry : 0/0
   524 ;;		On exit  : 0/0
   525 ;;		Unchanged: 0/0
   526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   527 ;;      Params:         0       0       0       0       0
   528 ;;      Locals:         0       0       0       0       0
   529 ;;      Temps:          0       0       0       0       0
   530 ;;      Totals:         0       0       0       0       0
   531 ;;Total ram usage:        0 bytes
   532 ;; Hardware stack levels used:    1
   533 ;; Hardware stack levels required when called:    2
   534 ;; This function calls:
   535 ;;		_ANALOGICO
   536 ;;		_MESSAGE
   537 ;; This function is called by:
   538 ;;		_main
   539 ;; This function uses a non-reentrant model
   540 ;;
   541                           
   542                           
   543                           ;psect for function _LOOP
   544  0088                     _LOOP:	
   545  0088                     l76:	
   546                           ;incstack = 0
   547                           ; Regs used in _LOOP: [wreg+status,2+status,0+pclath+cstack]
   548                           ;MAESTRO.c: 112:     while(1){
   549                           
   550  0088                     l698:	
   551                           
   552                           ;MAESTRO.c: 113:         ANALOGICO();
   553  0088  120A  118A  2072  120A  118A  	fcall	_ANALOGICO
   554                           
   555                           ;MAESTRO.c: 114:         MESSAGE();
   556  008D  120A  118A  2094  120A  118A  	fcall	_MESSAGE
   557  0092  2888               	goto	l76
   558  0093  0008               	return
   559  0094                     __end_of_LOOP:	
   560                           
   561                           	psect	text2
   562  0094                     __ptext2:	
   563 ;; *************** function _MESSAGE *****************
   564 ;; Defined at:
   565 ;;		line 121 in file "MAESTRO.c"
   566 ;; Parameters:    Size  Location     Type
   567 ;;		None
   568 ;; Auto vars:     Size  Location     Type
   569 ;;		None
   570 ;; Return value:  Size  Location     Type
   571 ;;                  1    wreg      void 
   572 ;; Registers used:
   573 ;;		wreg
   574 ;; Tracked objects:
   575 ;;		On entry : 0/0
   576 ;;		On exit  : 0/0
   577 ;;		Unchanged: 0/0
   578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   579 ;;      Params:         0       0       0       0       0
   580 ;;      Locals:         0       0       0       0       0
   581 ;;      Temps:          0       0       0       0       0
   582 ;;      Totals:         0       0       0       0       0
   583 ;;Total ram usage:        0 bytes
   584 ;; Hardware stack levels used:    1
   585 ;; Hardware stack levels required when called:    1
   586 ;; This function calls:
   587 ;;		Nothing
   588 ;; This function is called by:
   589 ;;		_LOOP
   590 ;; This function uses a non-reentrant model
   591 ;;
   592                           
   593                           
   594                           ;psect for function _MESSAGE
   595  0094                     _MESSAGE:	
   596  0094                     l690:	
   597                           ;incstack = 0
   598                           ; Regs used in _MESSAGE: [wreg]
   599                           
   600                           
   601                           ;MAESTRO.c: 124:     PORTDbits.RD1 = 1;
   602  0094  1283               	bcf	3,5	;RP0=0, select bank0
   603  0095  1303               	bcf	3,6	;RP1=0, select bank0
   604  0096  1488               	bsf	8,1	;volatile
   605  0097                     l692:	
   606                           
   607                           ;MAESTRO.c: 125:     SSPBUF = y;
   608  0097  0874               	movf	_y,w
   609  0098  0093               	movwf	19	;volatile
   610  0099                     l694:	
   611                           
   612                           ;MAESTRO.c: 126:     PORTDbits.RD1 = 0;
   613  0099  1088               	bcf	8,1	;volatile
   614  009A                     l82:	
   615  009A  0008               	return
   616  009B                     __end_of_MESSAGE:	
   617                           
   618                           	psect	text3
   619  0072                     __ptext3:	
   620 ;; *************** function _ANALOGICO *****************
   621 ;; Defined at:
   622 ;;		line 134 in file "MAESTRO.c"
   623 ;; Parameters:    Size  Location     Type
   624 ;;		None
   625 ;; Auto vars:     Size  Location     Type
   626 ;;		None
   627 ;; Return value:  Size  Location     Type
   628 ;;                  1    wreg      void 
   629 ;; Registers used:
   630 ;;		wreg
   631 ;; Tracked objects:
   632 ;;		On entry : 0/0
   633 ;;		On exit  : 0/0
   634 ;;		Unchanged: 0/0
   635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   636 ;;      Params:         0       0       0       0       0
   637 ;;      Locals:         0       0       0       0       0
   638 ;;      Temps:          1       0       0       0       0
   639 ;;      Totals:         1       0       0       0       0
   640 ;;Total ram usage:        1 bytes
   641 ;; Hardware stack levels used:    1
   642 ;; Hardware stack levels required when called:    1
   643 ;; This function calls:
   644 ;;		Nothing
   645 ;; This function is called by:
   646 ;;		_LOOP
   647 ;; This function uses a non-reentrant model
   648 ;;
   649                           
   650                           
   651                           ;psect for function _ANALOGICO
   652  0072                     _ANALOGICO:	
   653  0072                     l680:	
   654                           ;incstack = 0
   655                           ; Regs used in _ANALOGICO: [wreg]
   656                           
   657                           
   658                           ;MAESTRO.c: 135:     ADCON0bits.ADON = 1;
   659  0072  1283               	bcf	3,5	;RP0=0, select bank0
   660  0073  1303               	bcf	3,6	;RP1=0, select bank0
   661  0074  141F               	bsf	31,0	;volatile
   662  0075                     l682:	
   663                           
   664                           ;MAESTRO.c: 136:     _delay((unsigned long)((1)*(4000000/4000.0)));
   665  0075  30C7               	movlw	199
   666  0076  00F3               	movwf	??_ANALOGICO
   667  0077                     u37:	
   668  0077  2878               	nop2
   669  0078  0BF3               	decfsz	??_ANALOGICO,f
   670  0079  2877               	goto	u37
   671  007A  287B               	nop2
   672  007B  287C               	nop2
   673  007C                     l684:	
   674                           
   675                           ;MAESTRO.c: 137:         ADCON0bits.GO = 1;
   676  007C  1283               	bcf	3,5	;RP0=0, select bank0
   677  007D  1303               	bcf	3,6	;RP1=0, select bank0
   678  007E  149F               	bsf	31,1	;volatile
   679  007F                     l85:	
   680                           ;MAESTRO.c: 138:         while(ADCON0bits.GO);
   681                           
   682  007F  189F               	btfsc	31,1	;volatile
   683  0080  2882               	goto	u11
   684  0081  2883               	goto	u10
   685  0082                     u11:	
   686  0082  287F               	goto	l85
   687  0083                     u10:	
   688  0083                     l686:	
   689                           
   690                           ;MAESTRO.c: 140:             y = ADRESH;
   691  0083  081E               	movf	30,w	;volatile
   692  0084  00F3               	movwf	??_ANALOGICO
   693  0085  0873               	movf	??_ANALOGICO,w
   694  0086  00F4               	movwf	_y
   695  0087                     l88:	
   696  0087  0008               	return
   697  0088                     __end_of_ANALOGICO:	
   698                           
   699                           	psect	text4
   700  0059                     __ptext4:	
   701 ;; *************** function _ISR *****************
   702 ;; Defined at:
   703 ;;		line 42 in file "MAESTRO.c"
   704 ;; Parameters:    Size  Location     Type
   705 ;;		None
   706 ;; Auto vars:     Size  Location     Type
   707 ;;		None
   708 ;; Return value:  Size  Location     Type
   709 ;;                  1    wreg      void 
   710 ;; Registers used:
   711 ;;		wreg
   712 ;; Tracked objects:
   713 ;;		On entry : 0/0
   714 ;;		On exit  : 0/0
   715 ;;		Unchanged: 0/0
   716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   717 ;;      Params:         0       0       0       0       0
   718 ;;      Locals:         0       0       0       0       0
   719 ;;      Temps:          3       0       0       0       0
   720 ;;      Totals:         3       0       0       0       0
   721 ;;Total ram usage:        3 bytes
   722 ;; Hardware stack levels used:    1
   723 ;; This function calls:
   724 ;;		Nothing
   725 ;; This function is called by:
   726 ;;		Interrupt level 1
   727 ;; This function uses a non-reentrant model
   728 ;;
   729                           
   730                           
   731                           ;psect for function _ISR
   732  0059                     _ISR:	
   733  0059                     i1l700:	
   734                           
   735                           ;MAESTRO.c: 44:    if(PIR1bits.SSPIF==1 ){
   736  0059  1283               	bcf	3,5	;RP0=0, select bank0
   737  005A  1303               	bcf	3,6	;RP1=0, select bank0
   738  005B  1D8C               	btfss	12,3	;volatile
   739  005C  285E               	goto	u2_21
   740  005D  285F               	goto	u2_20
   741  005E                     u2_21:	
   742  005E  286B               	goto	i1l68
   743  005F                     u2_20:	
   744  005F                     i1l702:	
   745                           
   746                           ;MAESTRO.c: 45:         x= SSPBUF;
   747  005F  0813               	movf	19,w	;volatile
   748  0060  00F0               	movwf	??_ISR
   749  0061  0870               	movf	??_ISR,w
   750  0062  00F6               	movwf	_x
   751                           
   752                           ;MAESTRO.c: 46:         PORTB = x;
   753  0063  0876               	movf	_x,w
   754  0064  0086               	movwf	6	;volatile
   755  0065                     i1l704:	
   756                           
   757                           ;MAESTRO.c: 47:           SSPSTATbits.BF= 0;
   758  0065  1683               	bsf	3,5	;RP0=1, select bank1
   759  0066  1303               	bcf	3,6	;RP1=0, select bank1
   760  0067  1014               	bcf	20,0	;volatile
   761  0068                     i1l706:	
   762                           
   763                           ;MAESTRO.c: 48:           PIR1bits.SSPIF = 0;
   764  0068  1283               	bcf	3,5	;RP0=0, select bank0
   765  0069  1303               	bcf	3,6	;RP1=0, select bank0
   766  006A  118C               	bcf	12,3	;volatile
   767  006B                     i1l68:	
   768  006B  0872               	movf	??_ISR+2,w
   769  006C  008A               	movwf	10
   770  006D  0E71               	swapf	(??_ISR+1)^(0+4294967168),w
   771  006E  0083               	movwf	3
   772  006F  0EFE               	swapf	btemp,f
   773  0070  0E7E               	swapf	btemp,w
   774  0071  0009               	retfie
   775  0072                     __end_of_ISR:	
   776  007E                     btemp	set	126	;btemp
   777  007E                     wtemp0	set	126
   778                           
   779                           	psect	intentry
   780  0004                     __pintentry:	
   781                           ;incstack = 0
   782                           ; Regs used in _ISR: [wreg]
   783                           
   784  0004                     interrupt_function:	
   785  007E                     saved_w	set	btemp
   786  0004  00FE               	movwf	btemp
   787  0005  0E03               	swapf	3,w
   788  0006  00F1               	movwf	??_ISR+1
   789  0007  080A               	movf	10,w
   790  0008  00F2               	movwf	??_ISR+2
   791  0009  120A  118A  2859   	ljmp	_ISR


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _LOOP->_ANALOGICO

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                               _LOOP
 ---------------------------------------------------------------------------------
 (1) _LOOP                                                 0     0      0       0
                          _ANALOGICO
                            _MESSAGE
 ---------------------------------------------------------------------------------
 (2) _MESSAGE                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ANALOGICO                                            1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LOOP
     _ANALOGICO
     _MESSAGE

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      4       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       8       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       8      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Feb 19 20:14:17 2020

                       _x 0076                         _y 0074               __CFG_CP$OFF 0000  
             _SSPSTATbits 0094                        l73 0056                        l82 009A  
                      l76 0088                        l85 007F                        l88 0087  
                      u10 0083                        u11 0082                        u37 0077  
      __size_of_ANALOGICO 0016                       l710 0016                       l720 001E  
                     l712 001A                       l730 002A                       l722 0022  
                     l714 001B                       l740 0032                       l732 002B  
                     l724 0023                       l716 001C                       l750 0037  
                     l742 0033                       l734 002D                       l726 0027  
                     l718 001D                       l680 0072                       l760 003E  
                     l752 0038                       l744 0034                       l736 0030  
                     l728 0028                       l682 0075                       l690 0094  
                     l770 0045                       l762 003F                       l754 0039  
                     l746 0035                       l738 0031                       l684 007C  
                     l692 0097                       l780 0051                       l772 004A  
                     l764 0040                       l756 003A                       l748 0036  
                     l686 0083                       l694 0099                       l774 004D  
                     l766 0041                       l758 003B                       l776 004E  
                     l768 0042                       l698 0088                       l778 004F  
            __CFG_CPD$OFF 0000                       _ISR 0059              __CFG_LVP$OFF 0000  
                    ?_ISR 0070           __end_of_MESSAGE 009B                      _DATA 0075  
                    i1l68 006B                      _LOOP 0088                      u2_20 005F  
                    u2_21 005E              __CFG_WRT$OFF 0000                      _main 0016  
                    btemp 007E                      start 000C             __CFG_IESO$OFF 0000  
                   ??_ISR 0070                     ?_LOOP 0070                     ?_main 0070  
           __CFG_WDTE$OFF 0000                     _ANSEL 0188                     i1l700 0059  
                   i1l702 005F                     i1l704 0065                     i1l706 0068  
                   _PORTA 0005                     _PORTB 0006                     _PORTC 0007  
                   _PORTD 0008                     _PORTE 0009                     _TRISA 0085  
                   _TRISB 0086                     _TRISC 0087                     _TRISD 0088  
                   _TRISE 0089            __CFG_FCMEN$OFF 0000            __CFG_BOREN$OFF 0000  
                   pclath 000A         __end_of_ANALOGICO 0088                     status 0003  
                   wtemp0 007E              __end_of_LOOP 0094            __CFG_MCLRE$OFF 0000  
         __initialization 000F              __end_of_main 0059                    ??_LOOP 0074  
                  ??_main 0074                 ??_MESSAGE 0073                    _ADRESH 001E  
                  _ANSELH 0189                    _SSPBUF 0013            __CFG_PWRTE$OFF 0000  
                  saved_w 007E   __end_of__initialization 0012            __pcstackCOMMON 0070  
              __pnvCOMMON 0077                __pmaintext 0016                __pintentry 0004  
                 _BANDERA 0077                   _MESSAGE 0094                 _ANALOGICO 0072  
                 __ptext1 0088                   __ptext2 0094                   __ptext3 0072  
                 __ptext4 0059              __size_of_ISR 0019      end_of_initialization 0012  
              ?_ANALOGICO 0070                 _PORTDbits 0008       start_initialization 000F  
             __end_of_ISR 0072  __CFG_FOSC$INTRC_NOCLKOUT 0000               ??_ANALOGICO 0073  
                ?_MESSAGE 0070               __pbssCOMMON 0074                 ___latbits 0002  
       interrupt_function 0004                  _PIE1bits 008C                  _PIR1bits 000C  
              _ADCON0bits 001F                _ADCON1bits 009F          __size_of_MESSAGE 0007  
       __CFG_BOR4V$BOR40V 0000             __size_of_LOOP 000C             __size_of_main 0043  
              _INTCONbits 000B                  intlevel1 0000                _OSCCONbits 008F  
              _SSPCONbits 0014  
