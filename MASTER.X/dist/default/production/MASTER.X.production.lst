

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Feb 20 16:39:13 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	intentry,global,class=CODE,delta=2
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.10
    16                           ; Generated 31/07/2019 GMT
    17                           ; 
    18                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F887 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  008F                     	;# 
    94  0090                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0094                     	;# 
   101  0095                     	;# 
   102  0096                     	;# 
   103  0097                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009E                     	;# 
   111  009F                     	;# 
   112  0105                     	;# 
   113  0107                     	;# 
   114  0108                     	;# 
   115  0109                     	;# 
   116  010C                     	;# 
   117  010C                     	;# 
   118  010D                     	;# 
   119  010E                     	;# 
   120  010F                     	;# 
   121  0185                     	;# 
   122  0187                     	;# 
   123  0188                     	;# 
   124  0189                     	;# 
   125  018C                     	;# 
   126  018D                     	;# 
   127  0000                     	;# 
   128  0001                     	;# 
   129  0002                     	;# 
   130  0003                     	;# 
   131  0004                     	;# 
   132  0005                     	;# 
   133  0006                     	;# 
   134  0007                     	;# 
   135  0008                     	;# 
   136  0009                     	;# 
   137  000A                     	;# 
   138  000B                     	;# 
   139  000C                     	;# 
   140  000D                     	;# 
   141  000E                     	;# 
   142  000E                     	;# 
   143  000F                     	;# 
   144  0010                     	;# 
   145  0011                     	;# 
   146  0012                     	;# 
   147  0013                     	;# 
   148  0014                     	;# 
   149  0015                     	;# 
   150  0015                     	;# 
   151  0016                     	;# 
   152  0017                     	;# 
   153  0018                     	;# 
   154  0019                     	;# 
   155  001A                     	;# 
   156  001B                     	;# 
   157  001B                     	;# 
   158  001C                     	;# 
   159  001D                     	;# 
   160  001E                     	;# 
   161  001F                     	;# 
   162  0081                     	;# 
   163  0085                     	;# 
   164  0086                     	;# 
   165  0087                     	;# 
   166  0088                     	;# 
   167  0089                     	;# 
   168  008C                     	;# 
   169  008D                     	;# 
   170  008E                     	;# 
   171  008F                     	;# 
   172  0090                     	;# 
   173  0091                     	;# 
   174  0092                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0094                     	;# 
   179  0095                     	;# 
   180  0096                     	;# 
   181  0097                     	;# 
   182  0098                     	;# 
   183  0099                     	;# 
   184  009A                     	;# 
   185  009B                     	;# 
   186  009C                     	;# 
   187  009D                     	;# 
   188  009E                     	;# 
   189  009F                     	;# 
   190  0105                     	;# 
   191  0107                     	;# 
   192  0108                     	;# 
   193  0109                     	;# 
   194  010C                     	;# 
   195  010C                     	;# 
   196  010D                     	;# 
   197  010E                     	;# 
   198  010F                     	;# 
   199  0185                     	;# 
   200  0187                     	;# 
   201  0188                     	;# 
   202  0189                     	;# 
   203  018C                     	;# 
   204  018D                     	;# 
   205  001E                     _ADRESH	set	30
   206  0008                     _PORTDbits	set	8
   207  000B                     _INTCONbits	set	11
   208  0014                     _SSPCONbits	set	20
   209  001F                     _ADCON0bits	set	31
   210  0009                     _PORTE	set	9
   211  0008                     _PORTD	set	8
   212  0007                     _PORTC	set	7
   213  0005                     _PORTA	set	5
   214  0006                     _PORTB	set	6
   215  0013                     _SSPBUF	set	19
   216  000C                     _PIR1bits	set	12
   217  008C                     _PIE1bits	set	140
   218  009F                     _ADCON1bits	set	159
   219  0089                     _TRISE	set	137
   220  0088                     _TRISD	set	136
   221  0087                     _TRISC	set	135
   222  0086                     _TRISB	set	134
   223  0085                     _TRISA	set	133
   224  008F                     _OSCCONbits	set	143
   225  0094                     _SSPSTATbits	set	148
   226  04A0                     _BF	set	1184
   227  0189                     _ANSELH	set	393
   228  0188                     _ANSEL	set	392
   229                           
   230                           ; #config settings
   231  0000                     
   232                           	psect	cinit
   233  000F                     start_initialization:	
   234  000F                     __initialization:	
   235                           
   236                           ; Clear objects allocated to COMMON
   237  000F  01F0               	clrf	__pbssCOMMON& (0+127)
   238  0010  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   239  0011  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   240  0012  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   241  0013                     end_of_initialization:	
   242                           ;End of C runtime variable initialization code
   243                           
   244  0013                     __end_of__initialization:	
   245  0013  0183               	clrf	3
   246  0014  120A  118A  2817   	ljmp	_main	;jump to C main() function
   247                           
   248                           	psect	bssCOMMON
   249  0070                     __pbssCOMMON:	
   250  0070                     _y:	
   251  0070                     	ds	1
   252  0071                     _DATA:	
   253  0071                     	ds	1
   254  0072                     _BANDERA:	
   255  0072                     	ds	1
   256  0073                     _x:	
   257  0073                     	ds	1
   258                           
   259                           	psect	cstackCOMMON
   260  0074                     __pcstackCOMMON:	
   261  0074                     ?_LOOP:	
   262  0074                     ?_ANALOGICO:	
   263                           ; 1 bytes @ 0x0
   264                           
   265  0074                     ?_MESSAGE:	
   266                           ; 1 bytes @ 0x0
   267                           
   268  0074                     ?_ISR:	
   269                           ; 1 bytes @ 0x0
   270                           
   271  0074                     ??_ISR:	
   272                           ; 1 bytes @ 0x0
   273                           
   274  0074                     ?_main:	
   275                           ; 1 bytes @ 0x0
   276                           
   277                           
   278                           ; 1 bytes @ 0x0
   279  0074                     	ds	3
   280  0077                     ??_ANALOGICO:	
   281  0077                     ??_MESSAGE:	
   282                           ; 1 bytes @ 0x3
   283                           
   284                           
   285                           ; 1 bytes @ 0x3
   286  0077                     	ds	1
   287  0078                     ??_LOOP:	
   288  0078                     ??_main:	
   289                           ; 1 bytes @ 0x4
   290                           
   291                           
   292                           	psect	maintext
   293  0017                     __pmaintext:	
   294                           ; 1 bytes @ 0x4
   295 ;;
   296 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   297 ;;
   298 ;; *************** function _main *****************
   299 ;; Defined at:
   300 ;;		line 57 in file "MAESTRO.c"
   301 ;; Parameters:    Size  Location     Type
   302 ;;		None
   303 ;; Auto vars:     Size  Location     Type
   304 ;;		None
   305 ;; Return value:  Size  Location     Type
   306 ;;                  1    wreg      void 
   307 ;; Registers used:
   308 ;;		wreg, status,2, status,0, pclath, cstack
   309 ;; Tracked objects:
   310 ;;		On entry : B00/0
   311 ;;		On exit  : 0/0
   312 ;;		Unchanged: 0/0
   313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   314 ;;      Params:         0       0       0       0       0
   315 ;;      Locals:         0       0       0       0       0
   316 ;;      Temps:          0       0       0       0       0
   317 ;;      Totals:         0       0       0       0       0
   318 ;;Total ram usage:        0 bytes
   319 ;; Hardware stack levels required when called:    3
   320 ;; This function calls:
   321 ;;		_LOOP
   322 ;; This function is called by:
   323 ;;		Startup code after reset
   324 ;; This function uses a non-reentrant model
   325 ;;
   326                           
   327                           
   328                           ;psect for function _main
   329  0017                     _main:	
   330  0017                     l715:	
   331                           ;incstack = 0
   332                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   333                           
   334                           
   335                           ;MAESTRO.c: 60:     OSCCONbits.IRCF = 0b110;
   336  0017  1683               	bsf	3,5	;RP0=1, select bank1
   337  0018  1303               	bcf	3,6	;RP1=0, select bank1
   338  0019  080F               	movf	15,w	;volatile
   339  001A  398F               	andlw	-113
   340  001B  3860               	iorlw	96
   341  001C  008F               	movwf	15	;volatile
   342  001D                     l717:	
   343                           
   344                           ;MAESTRO.c: 61:     OSCCONbits.OSTS= 0;
   345  001D  118F               	bcf	15,3	;volatile
   346  001E                     l719:	
   347                           
   348                           ;MAESTRO.c: 62:     OSCCONbits.HTS = 0;
   349  001E  110F               	bcf	15,2	;volatile
   350  001F                     l721:	
   351                           
   352                           ;MAESTRO.c: 63:     OSCCONbits.LTS = 0;
   353  001F  108F               	bcf	15,1	;volatile
   354  0020                     l723:	
   355                           
   356                           ;MAESTRO.c: 64:     OSCCONbits.SCS = 1;
   357  0020  140F               	bsf	15,0	;volatile
   358  0021                     l725:	
   359                           
   360                           ;MAESTRO.c: 68:     ANSEL = 0b000100001;
   361  0021  3021               	movlw	33
   362  0022  1683               	bsf	3,5	;RP0=1, select bank3
   363  0023  1703               	bsf	3,6	;RP1=1, select bank3
   364  0024  0088               	movwf	8	;volatile
   365  0025                     l727:	
   366                           
   367                           ;MAESTRO.c: 69:     ANSELH = 0b00000000;
   368  0025  0189               	clrf	9	;volatile
   369  0026                     l729:	
   370                           
   371                           ;MAESTRO.c: 71:     TRISA = 0b00000001;
   372  0026  3001               	movlw	1
   373  0027  1683               	bsf	3,5	;RP0=1, select bank1
   374  0028  1303               	bcf	3,6	;RP1=0, select bank1
   375  0029  0085               	movwf	5	;volatile
   376  002A                     l731:	
   377                           
   378                           ;MAESTRO.c: 72:     TRISB = 0b00000000;
   379  002A  0186               	clrf	6	;volatile
   380  002B                     l733:	
   381                           
   382                           ;MAESTRO.c: 73:     TRISC = 0b00010000;
   383  002B  3010               	movlw	16
   384  002C  0087               	movwf	7	;volatile
   385  002D                     l735:	
   386                           
   387                           ;MAESTRO.c: 74:     TRISD = 0b00000000;
   388  002D  0188               	clrf	8	;volatile
   389  002E                     l737:	
   390                           
   391                           ;MAESTRO.c: 75:     TRISE = 0001;
   392  002E  3001               	movlw	1
   393  002F  0089               	movwf	9	;volatile
   394  0030                     l739:	
   395                           
   396                           ;MAESTRO.c: 77:     PORTA = 0;
   397  0030  1283               	bcf	3,5	;RP0=0, select bank0
   398  0031  1303               	bcf	3,6	;RP1=0, select bank0
   399  0032  0185               	clrf	5	;volatile
   400  0033                     l741:	
   401                           
   402                           ;MAESTRO.c: 78:     PORTB = 0;
   403  0033  0186               	clrf	6	;volatile
   404  0034                     l743:	
   405                           
   406                           ;MAESTRO.c: 79:     PORTC = 0;
   407  0034  0187               	clrf	7	;volatile
   408  0035                     l745:	
   409                           
   410                           ;MAESTRO.c: 80:     PORTD = 0;
   411  0035  0188               	clrf	8	;volatile
   412  0036                     l747:	
   413                           
   414                           ;MAESTRO.c: 81:     PORTE = 0;
   415  0036  0189               	clrf	9	;volatile
   416  0037                     l749:	
   417                           
   418                           ;MAESTRO.c: 84:     ADCON0bits.ADCS0 = 1;
   419  0037  171F               	bsf	31,6	;volatile
   420  0038                     l751:	
   421                           
   422                           ;MAESTRO.c: 85:     ADCON0bits.ADCS1 = 0;
   423  0038  139F               	bcf	31,7	;volatile
   424  0039                     l753:	
   425                           
   426                           ;MAESTRO.c: 86:     ADCON0bits.CHS0 = 0;
   427  0039  111F               	bcf	31,2	;volatile
   428  003A                     l755:	
   429                           
   430                           ;MAESTRO.c: 87:     ADCON0bits.CHS1 = 0;
   431  003A  119F               	bcf	31,3	;volatile
   432  003B                     l757:	
   433                           
   434                           ;MAESTRO.c: 88:     ADCON0bits.CHS2 = 0;
   435  003B  121F               	bcf	31,4	;volatile
   436  003C                     l759:	
   437                           
   438                           ;MAESTRO.c: 89:     ADCON0bits.CHS3 = 0;
   439  003C  129F               	bcf	31,5	;volatile
   440  003D                     l761:	
   441                           
   442                           ;MAESTRO.c: 90:     ADCON0bits.ADON = 1;
   443  003D  141F               	bsf	31,0	;volatile
   444  003E                     l763:	
   445                           
   446                           ;MAESTRO.c: 91:     ADCON1bits.ADFM = 0;
   447  003E  1683               	bsf	3,5	;RP0=1, select bank1
   448  003F  1303               	bcf	3,6	;RP1=0, select bank1
   449  0040  139F               	bcf	31,7	;volatile
   450  0041                     l765:	
   451                           
   452                           ;MAESTRO.c: 92:     ADCON1bits.VCFG0 = 0;
   453  0041  121F               	bcf	31,4	;volatile
   454  0042                     l767:	
   455                           
   456                           ;MAESTRO.c: 93:     ADCON1bits.VCFG1 = 0;
   457  0042  129F               	bcf	31,5	;volatile
   458  0043                     l769:	
   459                           
   460                           ;MAESTRO.c: 97:     SSPSTATbits.SMP = 0;
   461  0043  1394               	bcf	20,7	;volatile
   462  0044                     l771:	
   463                           
   464                           ;MAESTRO.c: 98:     SSPSTATbits.CKE = 0;
   465  0044  1314               	bcf	20,6	;volatile
   466  0045                     l773:	
   467                           
   468                           ;MAESTRO.c: 99:     SSPCONbits.SSPEN = 1;
   469  0045  1283               	bcf	3,5	;RP0=0, select bank0
   470  0046  1303               	bcf	3,6	;RP1=0, select bank0
   471  0047  1694               	bsf	20,5	;volatile
   472  0048                     l775:	
   473                           
   474                           ;MAESTRO.c: 100:     SSPCONbits.CKP = 1;
   475  0048  1614               	bsf	20,4	;volatile
   476                           
   477                           ;MAESTRO.c: 101:     SSPCONbits.SSPM = 0b0010;
   478  0049  0814               	movf	20,w	;volatile
   479  004A  39F0               	andlw	-16
   480  004B  3802               	iorlw	2
   481  004C  0094               	movwf	20	;volatile
   482  004D                     l777:	
   483                           
   484                           ;MAESTRO.c: 104:     PIE1bits.SSPIE = 1;
   485  004D  1683               	bsf	3,5	;RP0=1, select bank1
   486  004E  1303               	bcf	3,6	;RP1=0, select bank1
   487  004F  158C               	bsf	12,3	;volatile
   488  0050                     l779:	
   489                           
   490                           ;MAESTRO.c: 105:     INTCONbits.PEIE = 1;
   491  0050  170B               	bsf	11,6	;volatile
   492  0051                     l781:	
   493                           
   494                           ;MAESTRO.c: 106:     INTCONbits.GIE = 1;
   495  0051  178B               	bsf	11,7	;volatile
   496  0052                     l783:	
   497                           
   498                           ;MAESTRO.c: 121:     x= 0;
   499  0052  01F3               	clrf	_x
   500  0053                     l785:	
   501                           
   502                           ;MAESTRO.c: 122:     y=0;
   503  0053  01F0               	clrf	_y
   504  0054                     l787:	
   505                           
   506                           ;MAESTRO.c: 123:     LOOP();
   507  0054  120A  118A  2098  120A  118A  	fcall	_LOOP
   508  0059                     l75:	
   509  0059  120A  118A  280C   	ljmp	start
   510  005C                     __end_of_main:	
   511                           
   512                           	psect	text1
   513  0098                     __ptext1:	
   514 ;; *************** function _LOOP *****************
   515 ;; Defined at:
   516 ;;		line 127 in file "MAESTRO.c"
   517 ;; Parameters:    Size  Location     Type
   518 ;;		None
   519 ;; Auto vars:     Size  Location     Type
   520 ;;		None
   521 ;; Return value:  Size  Location     Type
   522 ;;                  1    wreg      void 
   523 ;; Registers used:
   524 ;;		wreg, status,2, status,0, pclath, cstack
   525 ;; Tracked objects:
   526 ;;		On entry : 0/0
   527 ;;		On exit  : 0/0
   528 ;;		Unchanged: 0/0
   529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   530 ;;      Params:         0       0       0       0       0
   531 ;;      Locals:         0       0       0       0       0
   532 ;;      Temps:          0       0       0       0       0
   533 ;;      Totals:         0       0       0       0       0
   534 ;;Total ram usage:        0 bytes
   535 ;; Hardware stack levels used:    1
   536 ;; Hardware stack levels required when called:    2
   537 ;; This function calls:
   538 ;;		_ANALOGICO
   539 ;;		_MESSAGE
   540 ;; This function is called by:
   541 ;;		_main
   542 ;; This function uses a non-reentrant model
   543 ;;
   544                           
   545                           
   546                           ;psect for function _LOOP
   547  0098                     _LOOP:	
   548  0098                     l78:	
   549                           ;incstack = 0
   550                           ; Regs used in _LOOP: [wreg+status,2+status,0+pclath+cstack]
   551                           ;MAESTRO.c: 128:     while(1){
   552                           
   553  0098                     l703:	
   554                           
   555                           ;MAESTRO.c: 129:         ANALOGICO();
   556  0098  120A  118A  2075  120A  118A  	fcall	_ANALOGICO
   557                           
   558                           ;MAESTRO.c: 130:         MESSAGE();
   559  009D  120A  118A  208B  120A  118A  	fcall	_MESSAGE
   560  00A2  2898               	goto	l78
   561  00A3  0008               	return
   562  00A4                     __end_of_LOOP:	
   563                           
   564                           	psect	text2
   565  008B                     __ptext2:	
   566 ;; *************** function _MESSAGE *****************
   567 ;; Defined at:
   568 ;;		line 137 in file "MAESTRO.c"
   569 ;; Parameters:    Size  Location     Type
   570 ;;		None
   571 ;; Auto vars:     Size  Location     Type
   572 ;;		None
   573 ;; Return value:  Size  Location     Type
   574 ;;                  1    wreg      void 
   575 ;; Registers used:
   576 ;;		wreg
   577 ;; Tracked objects:
   578 ;;		On entry : 0/0
   579 ;;		On exit  : 0/0
   580 ;;		Unchanged: 0/0
   581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   582 ;;      Params:         0       0       0       0       0
   583 ;;      Locals:         0       0       0       0       0
   584 ;;      Temps:          0       0       0       0       0
   585 ;;      Totals:         0       0       0       0       0
   586 ;;Total ram usage:        0 bytes
   587 ;; Hardware stack levels used:    1
   588 ;; Hardware stack levels required when called:    1
   589 ;; This function calls:
   590 ;;		Nothing
   591 ;; This function is called by:
   592 ;;		_LOOP
   593 ;; This function uses a non-reentrant model
   594 ;;
   595                           
   596                           
   597                           ;psect for function _MESSAGE
   598  008B                     _MESSAGE:	
   599  008B                     l695:	
   600                           ;incstack = 0
   601                           ; Regs used in _MESSAGE: [wreg]
   602                           
   603  008B                     l84:	
   604                           ;MAESTRO.c: 139:     while(BF==1);
   605                           
   606  008B  1683               	bsf	3,5	;RP0=1, select bank1
   607  008C  1303               	bcf	3,6	;RP1=0, select bank1
   608  008D  1814               	btfsc	20,0	;volatile
   609  008E  2890               	goto	u21
   610  008F  2891               	goto	u20
   611  0090                     u21:	
   612  0090  288B               	goto	l84
   613  0091                     u20:	
   614  0091                     l86:	
   615                           
   616                           ;MAESTRO.c: 140:     PORTDbits.RD1 = 1;
   617  0091  1283               	bcf	3,5	;RP0=0, select bank0
   618  0092  1303               	bcf	3,6	;RP1=0, select bank0
   619  0093  1488               	bsf	8,1	;volatile
   620  0094                     l697:	
   621                           
   622                           ;MAESTRO.c: 141:     SSPBUF = y;
   623  0094  0870               	movf	_y,w
   624  0095  0093               	movwf	19	;volatile
   625  0096                     l699:	
   626                           
   627                           ;MAESTRO.c: 142:     PORTDbits.RD1 = 0;
   628  0096  1088               	bcf	8,1	;volatile
   629  0097                     l87:	
   630  0097  0008               	return
   631  0098                     __end_of_MESSAGE:	
   632                           
   633                           	psect	text3
   634  0075                     __ptext3:	
   635 ;; *************** function _ANALOGICO *****************
   636 ;; Defined at:
   637 ;;		line 150 in file "MAESTRO.c"
   638 ;; Parameters:    Size  Location     Type
   639 ;;		None
   640 ;; Auto vars:     Size  Location     Type
   641 ;;		None
   642 ;; Return value:  Size  Location     Type
   643 ;;                  1    wreg      void 
   644 ;; Registers used:
   645 ;;		wreg
   646 ;; Tracked objects:
   647 ;;		On entry : 0/0
   648 ;;		On exit  : 0/0
   649 ;;		Unchanged: 0/0
   650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   651 ;;      Params:         0       0       0       0       0
   652 ;;      Locals:         0       0       0       0       0
   653 ;;      Temps:          1       0       0       0       0
   654 ;;      Totals:         1       0       0       0       0
   655 ;;Total ram usage:        1 bytes
   656 ;; Hardware stack levels used:    1
   657 ;; Hardware stack levels required when called:    1
   658 ;; This function calls:
   659 ;;		Nothing
   660 ;; This function is called by:
   661 ;;		_LOOP
   662 ;; This function uses a non-reentrant model
   663 ;;
   664                           
   665                           
   666                           ;psect for function _ANALOGICO
   667  0075                     _ANALOGICO:	
   668  0075                     l685:	
   669                           ;incstack = 0
   670                           ; Regs used in _ANALOGICO: [wreg]
   671                           
   672                           
   673                           ;MAESTRO.c: 151:     ADCON0bits.ADON = 1;
   674  0075  1283               	bcf	3,5	;RP0=0, select bank0
   675  0076  1303               	bcf	3,6	;RP1=0, select bank0
   676  0077  141F               	bsf	31,0	;volatile
   677  0078                     l687:	
   678                           
   679                           ;MAESTRO.c: 152:     _delay((unsigned long)((1)*(4000000/4000.0)));
   680  0078  30C7               	movlw	199
   681  0079  00F7               	movwf	??_ANALOGICO
   682  007A                     u47:	
   683  007A  287B               	nop2
   684  007B  0BF7               	decfsz	??_ANALOGICO,f
   685  007C  287A               	goto	u47
   686  007D  287E               	nop2
   687  007E  287F               	nop2
   688  007F                     l689:	
   689                           
   690                           ;MAESTRO.c: 153:         ADCON0bits.GO = 1;
   691  007F  1283               	bcf	3,5	;RP0=0, select bank0
   692  0080  1303               	bcf	3,6	;RP1=0, select bank0
   693  0081  149F               	bsf	31,1	;volatile
   694  0082                     l90:	
   695                           ;MAESTRO.c: 154:         while(ADCON0bits.GO);
   696                           
   697  0082  189F               	btfsc	31,1	;volatile
   698  0083  2885               	goto	u11
   699  0084  2886               	goto	u10
   700  0085                     u11:	
   701  0085  2882               	goto	l90
   702  0086                     u10:	
   703  0086                     l691:	
   704                           
   705                           ;MAESTRO.c: 156:             y = ADRESH;
   706  0086  081E               	movf	30,w	;volatile
   707  0087  00F7               	movwf	??_ANALOGICO
   708  0088  0877               	movf	??_ANALOGICO,w
   709  0089  00F0               	movwf	_y
   710  008A                     l93:	
   711  008A  0008               	return
   712  008B                     __end_of_ANALOGICO:	
   713                           
   714                           	psect	text4
   715  005C                     __ptext4:	
   716 ;; *************** function _ISR *****************
   717 ;; Defined at:
   718 ;;		line 42 in file "MAESTRO.c"
   719 ;; Parameters:    Size  Location     Type
   720 ;;		None
   721 ;; Auto vars:     Size  Location     Type
   722 ;;		None
   723 ;; Return value:  Size  Location     Type
   724 ;;                  1    wreg      void 
   725 ;; Registers used:
   726 ;;		wreg
   727 ;; Tracked objects:
   728 ;;		On entry : 0/0
   729 ;;		On exit  : 0/0
   730 ;;		Unchanged: 0/0
   731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   732 ;;      Params:         0       0       0       0       0
   733 ;;      Locals:         0       0       0       0       0
   734 ;;      Temps:          3       0       0       0       0
   735 ;;      Totals:         3       0       0       0       0
   736 ;;Total ram usage:        3 bytes
   737 ;; Hardware stack levels used:    1
   738 ;; This function calls:
   739 ;;		Nothing
   740 ;; This function is called by:
   741 ;;		Interrupt level 1
   742 ;; This function uses a non-reentrant model
   743 ;;
   744                           
   745                           
   746                           ;psect for function _ISR
   747  005C                     _ISR:	
   748  005C                     i1l705:	
   749                           
   750                           ;MAESTRO.c: 44:    if(PIR1bits.SSPIF==1 ){
   751  005C  1283               	bcf	3,5	;RP0=0, select bank0
   752  005D  1303               	bcf	3,6	;RP1=0, select bank0
   753  005E  1D8C               	btfss	12,3	;volatile
   754  005F  2861               	goto	u3_21
   755  0060  2862               	goto	u3_20
   756  0061                     u3_21:	
   757  0061  286E               	goto	i1l70
   758  0062                     u3_20:	
   759  0062                     i1l707:	
   760                           
   761                           ;MAESTRO.c: 45:         x= SSPBUF;
   762  0062  0813               	movf	19,w	;volatile
   763  0063  00F4               	movwf	??_ISR
   764  0064  0874               	movf	??_ISR,w
   765  0065  00F3               	movwf	_x
   766                           
   767                           ;MAESTRO.c: 46:         PORTB = x;
   768  0066  0873               	movf	_x,w
   769  0067  0086               	movwf	6	;volatile
   770  0068                     i1l709:	
   771                           
   772                           ;MAESTRO.c: 47:           SSPSTATbits.BF= 0;
   773  0068  1683               	bsf	3,5	;RP0=1, select bank1
   774  0069  1303               	bcf	3,6	;RP1=0, select bank1
   775  006A  1014               	bcf	20,0	;volatile
   776  006B                     i1l711:	
   777                           
   778                           ;MAESTRO.c: 48:           PIR1bits.SSPIF = 0;
   779  006B  1283               	bcf	3,5	;RP0=0, select bank0
   780  006C  1303               	bcf	3,6	;RP1=0, select bank0
   781  006D  118C               	bcf	12,3	;volatile
   782  006E                     i1l70:	
   783  006E  0876               	movf	??_ISR+2,w
   784  006F  008A               	movwf	10
   785  0070  0E75               	swapf	(??_ISR+1)^(0+4294967168),w
   786  0071  0083               	movwf	3
   787  0072  0EFE               	swapf	btemp,f
   788  0073  0E7E               	swapf	btemp,w
   789  0074  0009               	retfie
   790  0075                     __end_of_ISR:	
   791  007E                     btemp	set	126	;btemp
   792  007E                     wtemp0	set	126
   793                           
   794                           	psect	intentry
   795  0004                     __pintentry:	
   796                           ;incstack = 0
   797                           ; Regs used in _ISR: [wreg]
   798                           
   799  0004                     interrupt_function:	
   800  007E                     saved_w	set	btemp
   801  0004  00FE               	movwf	btemp
   802  0005  0E03               	swapf	3,w
   803  0006  00F5               	movwf	??_ISR+1
   804  0007  080A               	movf	10,w
   805  0008  00F6               	movwf	??_ISR+2
   806  0009  120A  118A  285C   	ljmp	_ISR


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _LOOP->_ANALOGICO

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                               _LOOP
 ---------------------------------------------------------------------------------
 (1) _LOOP                                                 0     0      0       0
                          _ANALOGICO
                            _MESSAGE
 ---------------------------------------------------------------------------------
 (2) _MESSAGE                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ANALOGICO                                            1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LOOP
     _ANALOGICO
     _MESSAGE

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      4       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       8       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       8      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Feb 20 16:39:13 2020

                       _x 0073                         _y 0070               __CFG_CP$OFF 0000  
             _SSPSTATbits 0094                        _BF 04A0                        l90 0082  
                      l75 0059                        l84 008B                        l93 008A  
                      l86 0091                        l78 0098                        l87 0097  
                      u10 0086                        u11 0085                        u20 0091  
                      u21 0090                        u47 007A        __size_of_ANALOGICO 0016  
                     l703 0098                       l721 001F                       l731 002A  
                     l723 0020                       l715 0017                       l741 0033  
                     l733 002B                       l725 0021                       l717 001D  
                     l751 0038                       l743 0034                       l735 002D  
                     l727 0025                       l719 001E                       l761 003D  
                     l753 0039                       l745 0035                       l737 002E  
                     l729 0026                       l691 0086                       l771 0044  
                     l763 003E                       l755 003A                       l747 0036  
                     l739 0030                       l685 0075                       l781 0051  
                     l773 0045                       l765 0041                       l757 003B  
                     l749 0037                       l687 0078                       l695 008B  
                     l783 0052                       l775 0048                       l767 0042  
                     l759 003C                       l689 007F                       l697 0094  
                     l785 0053                       l777 004D                       l769 0043  
                     l699 0096                       l787 0054                       l779 0050  
            __CFG_CPD$OFF 0000                       _ISR 005C              __CFG_LVP$OFF 0000  
                    ?_ISR 0074           __end_of_MESSAGE 0098                      _DATA 0071  
                    i1l70 006E                      _LOOP 0098                      u3_20 0062  
                    u3_21 0061              __CFG_WRT$OFF 0000                      _main 0017  
                    btemp 007E                      start 000C             __CFG_IESO$OFF 0000  
                   ??_ISR 0074                     ?_LOOP 0074                     ?_main 0074  
           __CFG_WDTE$OFF 0000                     _ANSEL 0188                     i1l711 006B  
                   i1l705 005C                     i1l707 0062                     i1l709 0068  
                   _PORTA 0005                     _PORTB 0006                     _PORTC 0007  
                   _PORTD 0008                     _PORTE 0009                     _TRISA 0085  
                   _TRISB 0086                     _TRISC 0087                     _TRISD 0088  
                   _TRISE 0089            __CFG_FCMEN$OFF 0000            __CFG_BOREN$OFF 0000  
                   pclath 000A         __end_of_ANALOGICO 008B                     status 0003  
                   wtemp0 007E              __end_of_LOOP 00A4            __CFG_MCLRE$OFF 0000  
         __initialization 000F              __end_of_main 005C                    ??_LOOP 0078  
                  ??_main 0078                 ??_MESSAGE 0077                    _ADRESH 001E  
                  _ANSELH 0189                    _SSPBUF 0013            __CFG_PWRTE$OFF 0000  
                  saved_w 007E   __end_of__initialization 0013            __pcstackCOMMON 0074  
              __pmaintext 0017                __pintentry 0004                   _BANDERA 0072  
                 _MESSAGE 008B                 _ANALOGICO 0075                   __ptext1 0098  
                 __ptext2 008B                   __ptext3 0075                   __ptext4 005C  
            __size_of_ISR 0019      end_of_initialization 0013                ?_ANALOGICO 0074  
               _PORTDbits 0008       start_initialization 000F               __end_of_ISR 0075  
__CFG_FOSC$INTRC_NOCLKOUT 0000               ??_ANALOGICO 0077                  ?_MESSAGE 0074  
             __pbssCOMMON 0070                 ___latbits 0002         interrupt_function 0004  
                _PIE1bits 008C                  _PIR1bits 000C                _ADCON0bits 001F  
              _ADCON1bits 009F          __size_of_MESSAGE 000D         __CFG_BOR4V$BOR40V 0000  
           __size_of_LOOP 000C             __size_of_main 0045                _INTCONbits 000B  
                intlevel1 0000                _OSCCONbits 008F                _SSPCONbits 0014  
