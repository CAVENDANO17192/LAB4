

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Feb 21 09:03:51 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	intentry,global,class=CODE,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 2.10
    18                           ; Generated 31/07/2019 GMT
    19                           ; 
    20                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F887 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000E                     	;# 
    66  000E                     	;# 
    67  000F                     	;# 
    68  0010                     	;# 
    69  0011                     	;# 
    70  0012                     	;# 
    71  0013                     	;# 
    72  0014                     	;# 
    73  0015                     	;# 
    74  0015                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001B                     	;# 
    81  001B                     	;# 
    82  001C                     	;# 
    83  001D                     	;# 
    84  001E                     	;# 
    85  001F                     	;# 
    86  0081                     	;# 
    87  0085                     	;# 
    88  0086                     	;# 
    89  0087                     	;# 
    90  0088                     	;# 
    91  0089                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  008E                     	;# 
    95  008F                     	;# 
    96  0090                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0094                     	;# 
   103  0095                     	;# 
   104  0096                     	;# 
   105  0097                     	;# 
   106  0098                     	;# 
   107  0099                     	;# 
   108  009A                     	;# 
   109  009B                     	;# 
   110  009C                     	;# 
   111  009D                     	;# 
   112  009E                     	;# 
   113  009F                     	;# 
   114  0105                     	;# 
   115  0107                     	;# 
   116  0108                     	;# 
   117  0109                     	;# 
   118  010C                     	;# 
   119  010C                     	;# 
   120  010D                     	;# 
   121  010E                     	;# 
   122  010F                     	;# 
   123  0185                     	;# 
   124  0187                     	;# 
   125  0188                     	;# 
   126  0189                     	;# 
   127  018C                     	;# 
   128  018D                     	;# 
   129  0000                     	;# 
   130  0001                     	;# 
   131  0002                     	;# 
   132  0003                     	;# 
   133  0004                     	;# 
   134  0005                     	;# 
   135  0006                     	;# 
   136  0007                     	;# 
   137  0008                     	;# 
   138  0009                     	;# 
   139  000A                     	;# 
   140  000B                     	;# 
   141  000C                     	;# 
   142  000D                     	;# 
   143  000E                     	;# 
   144  000E                     	;# 
   145  000F                     	;# 
   146  0010                     	;# 
   147  0011                     	;# 
   148  0012                     	;# 
   149  0013                     	;# 
   150  0014                     	;# 
   151  0015                     	;# 
   152  0015                     	;# 
   153  0016                     	;# 
   154  0017                     	;# 
   155  0018                     	;# 
   156  0019                     	;# 
   157  001A                     	;# 
   158  001B                     	;# 
   159  001B                     	;# 
   160  001C                     	;# 
   161  001D                     	;# 
   162  001E                     	;# 
   163  001F                     	;# 
   164  0081                     	;# 
   165  0085                     	;# 
   166  0086                     	;# 
   167  0087                     	;# 
   168  0088                     	;# 
   169  0089                     	;# 
   170  008C                     	;# 
   171  008D                     	;# 
   172  008E                     	;# 
   173  008F                     	;# 
   174  0090                     	;# 
   175  0091                     	;# 
   176  0092                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0094                     	;# 
   181  0095                     	;# 
   182  0096                     	;# 
   183  0097                     	;# 
   184  0098                     	;# 
   185  0099                     	;# 
   186  009A                     	;# 
   187  009B                     	;# 
   188  009C                     	;# 
   189  009D                     	;# 
   190  009E                     	;# 
   191  009F                     	;# 
   192  0105                     	;# 
   193  0107                     	;# 
   194  0108                     	;# 
   195  0109                     	;# 
   196  010C                     	;# 
   197  010C                     	;# 
   198  010D                     	;# 
   199  010E                     	;# 
   200  010F                     	;# 
   201  0185                     	;# 
   202  0187                     	;# 
   203  0188                     	;# 
   204  0189                     	;# 
   205  018C                     	;# 
   206  018D                     	;# 
   207  001E                     _ADRESH	set	30
   208  000B                     _INTCONbits	set	11
   209  0014                     _SSPCONbits	set	20
   210  001F                     _ADCON0bits	set	31
   211  0009                     _PORTE	set	9
   212  0008                     _PORTD	set	8
   213  0007                     _PORTC	set	7
   214  0005                     _PORTA	set	5
   215  0006                     _PORTB	set	6
   216  0013                     _SSPBUF	set	19
   217  000C                     _PIR1bits	set	12
   218  008C                     _PIE1bits	set	140
   219  009F                     _ADCON1bits	set	159
   220  0089                     _TRISE	set	137
   221  0088                     _TRISD	set	136
   222  0087                     _TRISC	set	135
   223  0086                     _TRISB	set	134
   224  0085                     _TRISA	set	133
   225  008F                     _OSCCONbits	set	143
   226  0094                     _SSPSTATbits	set	148
   227  04A0                     _BF	set	1184
   228  0189                     _ANSELH	set	393
   229  0188                     _ANSEL	set	392
   230                           
   231                           ; #config settings
   232  0000                     
   233                           	psect	cinit
   234  000F                     start_initialization:	
   235  000F                     __initialization:	
   236                           
   237                           ; Clear objects allocated to COMMON
   238  000F  01F0               	clrf	__pbssCOMMON& (0+127)
   239  0010  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   240  0011  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   241  0012  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   242  0013  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   243  0014                     end_of_initialization:	
   244                           ;End of C runtime variable initialization code
   245                           
   246  0014                     __end_of__initialization:	
   247  0014  0183               	clrf	3
   248  0015  120A  118A  2818   	ljmp	_main	;jump to C main() function
   249                           
   250                           	psect	bssCOMMON
   251  0070                     __pbssCOMMON:	
   252  0070                     _BANDERA:	
   253  0070                     	ds	1
   254  0071                     _DATA:	
   255  0071                     	ds	1
   256  0072                     _y:	
   257  0072                     	ds	1
   258  0073                     _z:	
   259  0073                     	ds	1
   260  0074                     _x:	
   261  0074                     	ds	1
   262                           
   263                           	psect	cstackCOMMON
   264  0075                     __pcstackCOMMON:	
   265  0075                     ?_MESSAGE:	
   266  0075                     ??_MESSAGE:	
   267                           ; 1 bytes @ 0x0
   268                           
   269  0075                     ?_MESSAGE2:	
   270                           ; 1 bytes @ 0x0
   271                           
   272  0075                     ??_MESSAGE2:	
   273                           ; 1 bytes @ 0x0
   274                           
   275  0075                     ?_LOOP:	
   276                           ; 1 bytes @ 0x0
   277                           
   278  0075                     ?_ANALOGICO:	
   279                           ; 1 bytes @ 0x0
   280                           
   281  0075                     ?_ANALOGICO2:	
   282                           ; 1 bytes @ 0x0
   283                           
   284  0075                     ?_ISR:	
   285                           ; 1 bytes @ 0x0
   286                           
   287  0075                     ??_ISR:	
   288                           ; 1 bytes @ 0x0
   289                           
   290  0075                     ?_main:	
   291                           ; 1 bytes @ 0x0
   292                           
   293                           
   294                           ; 1 bytes @ 0x0
   295  0075                     	ds	3
   296  0078                     ??_ANALOGICO:	
   297  0078                     ??_ANALOGICO2:	
   298                           ; 1 bytes @ 0x3
   299                           
   300                           
   301                           ; 1 bytes @ 0x3
   302  0078                     	ds	1
   303  0079                     ??_LOOP:	
   304  0079                     ??_main:	
   305                           ; 1 bytes @ 0x4
   306                           
   307                           
   308                           	psect	maintext
   309  0018                     __pmaintext:	
   310                           ; 1 bytes @ 0x4
   311 ;;
   312 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   313 ;;
   314 ;; *************** function _main *****************
   315 ;; Defined at:
   316 ;;		line 77 in file "ESCLAVO.c"
   317 ;; Parameters:    Size  Location     Type
   318 ;;		None
   319 ;; Auto vars:     Size  Location     Type
   320 ;;		None
   321 ;; Return value:  Size  Location     Type
   322 ;;                  1    wreg      void 
   323 ;; Registers used:
   324 ;;		wreg, status,2, status,0, pclath, cstack
   325 ;; Tracked objects:
   326 ;;		On entry : B00/0
   327 ;;		On exit  : 0/0
   328 ;;		Unchanged: 0/0
   329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   330 ;;      Params:         0       0       0       0       0
   331 ;;      Locals:         0       0       0       0       0
   332 ;;      Temps:          0       0       0       0       0
   333 ;;      Totals:         0       0       0       0       0
   334 ;;Total ram usage:        0 bytes
   335 ;; Hardware stack levels required when called:    4
   336 ;; This function calls:
   337 ;;		_LOOP
   338 ;; This function is called by:
   339 ;;		Startup code after reset
   340 ;; This function uses a non-reentrant model
   341 ;;
   342                           
   343                           
   344                           ;psect for function _main
   345  0018                     _main:	
   346  0018                     l770:	
   347                           ;incstack = 0
   348                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   349                           
   350                           
   351                           ;ESCLAVO.c: 80:     OSCCONbits.IRCF = 0b110;
   352  0018  1683               	bsf	3,5	;RP0=1, select bank1
   353  0019  1303               	bcf	3,6	;RP1=0, select bank1
   354  001A  080F               	movf	15,w	;volatile
   355  001B  398F               	andlw	-113
   356  001C  3860               	iorlw	96
   357  001D  008F               	movwf	15	;volatile
   358  001E                     l772:	
   359                           
   360                           ;ESCLAVO.c: 81:     OSCCONbits.OSTS= 0;
   361  001E  118F               	bcf	15,3	;volatile
   362  001F                     l774:	
   363                           
   364                           ;ESCLAVO.c: 82:     OSCCONbits.HTS = 0;
   365  001F  110F               	bcf	15,2	;volatile
   366  0020                     l776:	
   367                           
   368                           ;ESCLAVO.c: 83:     OSCCONbits.LTS = 0;
   369  0020  108F               	bcf	15,1	;volatile
   370  0021                     l778:	
   371                           
   372                           ;ESCLAVO.c: 84:     OSCCONbits.SCS = 1;
   373  0021  140F               	bsf	15,0	;volatile
   374  0022                     l780:	
   375                           
   376                           ;ESCLAVO.c: 88:     ANSEL = 0b00000011;
   377  0022  3003               	movlw	3
   378  0023  1683               	bsf	3,5	;RP0=1, select bank3
   379  0024  1703               	bsf	3,6	;RP1=1, select bank3
   380  0025  0088               	movwf	8	;volatile
   381  0026                     l782:	
   382                           
   383                           ;ESCLAVO.c: 89:     ANSELH = 0b00000000;
   384  0026  0189               	clrf	9	;volatile
   385  0027                     l784:	
   386                           
   387                           ;ESCLAVO.c: 91:     TRISA = 0b00100011;
   388  0027  3023               	movlw	35
   389  0028  1683               	bsf	3,5	;RP0=1, select bank1
   390  0029  1303               	bcf	3,6	;RP1=0, select bank1
   391  002A  0085               	movwf	5	;volatile
   392  002B                     l786:	
   393                           
   394                           ;ESCLAVO.c: 92:     TRISB = 0b00000000;
   395  002B  0186               	clrf	6	;volatile
   396  002C                     l788:	
   397                           
   398                           ;ESCLAVO.c: 93:     TRISC = 0b00011000;
   399  002C  3018               	movlw	24
   400  002D  0087               	movwf	7	;volatile
   401  002E                     l790:	
   402                           
   403                           ;ESCLAVO.c: 94:     TRISD = 0b00000000;
   404  002E  0188               	clrf	8	;volatile
   405  002F                     l792:	
   406                           
   407                           ;ESCLAVO.c: 95:     TRISE = 0b0000;
   408  002F  0189               	clrf	9	;volatile
   409  0030                     l794:	
   410                           
   411                           ;ESCLAVO.c: 97:     PORTA = 0;
   412  0030  1283               	bcf	3,5	;RP0=0, select bank0
   413  0031  1303               	bcf	3,6	;RP1=0, select bank0
   414  0032  0185               	clrf	5	;volatile
   415  0033                     l796:	
   416                           
   417                           ;ESCLAVO.c: 98:     PORTB = 0;
   418  0033  0186               	clrf	6	;volatile
   419  0034                     l798:	
   420                           
   421                           ;ESCLAVO.c: 99:     PORTC = 0;
   422  0034  0187               	clrf	7	;volatile
   423  0035                     l800:	
   424                           
   425                           ;ESCLAVO.c: 100:     PORTD = 0;
   426  0035  0188               	clrf	8	;volatile
   427  0036                     l802:	
   428                           
   429                           ;ESCLAVO.c: 101:     PORTE = 0;
   430  0036  0189               	clrf	9	;volatile
   431  0037                     l804:	
   432                           
   433                           ;ESCLAVO.c: 104:     ADCON0bits.ADCS0 = 1;
   434  0037  171F               	bsf	31,6	;volatile
   435  0038                     l806:	
   436                           
   437                           ;ESCLAVO.c: 105:     ADCON0bits.ADCS1 = 0;
   438  0038  139F               	bcf	31,7	;volatile
   439  0039                     l808:	
   440                           
   441                           ;ESCLAVO.c: 107:     ADCON0bits.ADON = 1;
   442  0039  141F               	bsf	31,0	;volatile
   443  003A                     l810:	
   444                           
   445                           ;ESCLAVO.c: 108:     ADCON1bits.ADFM = 0;
   446  003A  1683               	bsf	3,5	;RP0=1, select bank1
   447  003B  1303               	bcf	3,6	;RP1=0, select bank1
   448  003C  139F               	bcf	31,7	;volatile
   449  003D                     l812:	
   450                           
   451                           ;ESCLAVO.c: 109:     ADCON1bits.VCFG0 = 0;
   452  003D  121F               	bcf	31,4	;volatile
   453  003E                     l814:	
   454                           
   455                           ;ESCLAVO.c: 110:     ADCON1bits.VCFG1 = 0;
   456  003E  129F               	bcf	31,5	;volatile
   457  003F                     l816:	
   458                           
   459                           ;ESCLAVO.c: 113:     SSPSTATbits.SMP = 0;
   460  003F  1394               	bcf	20,7	;volatile
   461  0040                     l818:	
   462                           
   463                           ;ESCLAVO.c: 114:     SSPSTATbits.CKE = 0;
   464  0040  1314               	bcf	20,6	;volatile
   465  0041                     l820:	
   466                           
   467                           ;ESCLAVO.c: 115:     SSPCONbits.SSPEN = 1;
   468  0041  1283               	bcf	3,5	;RP0=0, select bank0
   469  0042  1303               	bcf	3,6	;RP1=0, select bank0
   470  0043  1694               	bsf	20,5	;volatile
   471  0044                     l822:	
   472                           
   473                           ;ESCLAVO.c: 116:     SSPCONbits.CKP = 1;
   474  0044  1614               	bsf	20,4	;volatile
   475  0045                     l824:	
   476                           
   477                           ;ESCLAVO.c: 117:     SSPCONbits.SSPM = 0b0100;
   478  0045  0814               	movf	20,w	;volatile
   479  0046  39F0               	andlw	-16
   480  0047  3804               	iorlw	4
   481  0048  0094               	movwf	20	;volatile
   482  0049                     l826:	
   483                           
   484                           ;ESCLAVO.c: 120:     PIE1bits.SSPIE = 1;
   485  0049  1683               	bsf	3,5	;RP0=1, select bank1
   486  004A  1303               	bcf	3,6	;RP1=0, select bank1
   487  004B  158C               	bsf	12,3	;volatile
   488  004C                     l828:	
   489                           
   490                           ;ESCLAVO.c: 121:     INTCONbits.PEIE = 1;
   491  004C  170B               	bsf	11,6	;volatile
   492  004D                     l830:	
   493                           
   494                           ;ESCLAVO.c: 122:     INTCONbits.GIE = 1;
   495  004D  178B               	bsf	11,7	;volatile
   496  004E                     l832:	
   497                           
   498                           ;ESCLAVO.c: 124:     x=0;
   499  004E  01F4               	clrf	_x
   500  004F                     l834:	
   501                           
   502                           ;ESCLAVO.c: 125:     y = 0;
   503  004F  01F2               	clrf	_y
   504  0050                     l836:	
   505                           
   506                           ;ESCLAVO.c: 126:     z=0;
   507  0050  01F3               	clrf	_z
   508  0051                     l838:	
   509                           
   510                           ;ESCLAVO.c: 127:     LOOP();
   511  0051  120A  118A  20D2  120A  118A  	fcall	_LOOP
   512  0056                     l80:	
   513  0056  120A  118A  280C   	ljmp	start
   514  0059                     __end_of_main:	
   515                           
   516                           	psect	text1
   517  00D2                     __ptext1:	
   518 ;; *************** function _LOOP *****************
   519 ;; Defined at:
   520 ;;		line 129 in file "ESCLAVO.c"
   521 ;; Parameters:    Size  Location     Type
   522 ;;		None
   523 ;; Auto vars:     Size  Location     Type
   524 ;;		None
   525 ;; Return value:  Size  Location     Type
   526 ;;                  1    wreg      void 
   527 ;; Registers used:
   528 ;;		wreg, status,2, status,0, pclath, cstack
   529 ;; Tracked objects:
   530 ;;		On entry : 0/0
   531 ;;		On exit  : 0/0
   532 ;;		Unchanged: 0/0
   533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   534 ;;      Params:         0       0       0       0       0
   535 ;;      Locals:         0       0       0       0       0
   536 ;;      Temps:          0       0       0       0       0
   537 ;;      Totals:         0       0       0       0       0
   538 ;;Total ram usage:        0 bytes
   539 ;; Hardware stack levels used:    1
   540 ;; Hardware stack levels required when called:    3
   541 ;; This function calls:
   542 ;;		_ANALOGICO
   543 ;;		_ANALOGICO2
   544 ;; This function is called by:
   545 ;;		_main
   546 ;; This function uses a non-reentrant model
   547 ;;
   548                           
   549                           
   550                           ;psect for function _LOOP
   551  00D2                     _LOOP:	
   552  00D2                     l83:	
   553                           ;incstack = 0
   554                           ; Regs used in _LOOP: [wreg+status,2+status,0+pclath+cstack]
   555                           ;ESCLAVO.c: 130:     while(1){
   556                           
   557  00D2                     l742:	
   558                           
   559                           ;ESCLAVO.c: 133:     ANALOGICO();
   560  00D2  120A  118A  20AF  120A  118A  	fcall	_ANALOGICO
   561                           
   562                           ;ESCLAVO.c: 135:     ANALOGICO2();
   563  00D7  120A  118A  2097  120A  118A  	fcall	_ANALOGICO2
   564  00DC  28D2               	goto	l83
   565  00DD  0008               	return
   566  00DE                     __end_of_LOOP:	
   567                           
   568                           	psect	text2
   569  0097                     __ptext2:	
   570 ;; *************** function _ANALOGICO2 *****************
   571 ;; Defined at:
   572 ;;		line 175 in file "ESCLAVO.c"
   573 ;; Parameters:    Size  Location     Type
   574 ;;		None
   575 ;; Auto vars:     Size  Location     Type
   576 ;;		None
   577 ;; Return value:  Size  Location     Type
   578 ;;                  1    wreg      void 
   579 ;; Registers used:
   580 ;;		wreg, status,2, status,0
   581 ;; Tracked objects:
   582 ;;		On entry : 0/0
   583 ;;		On exit  : 0/0
   584 ;;		Unchanged: 0/0
   585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   586 ;;      Params:         0       0       0       0       0
   587 ;;      Locals:         0       0       0       0       0
   588 ;;      Temps:          1       0       0       0       0
   589 ;;      Totals:         1       0       0       0       0
   590 ;;Total ram usage:        1 bytes
   591 ;; Hardware stack levels used:    1
   592 ;; Hardware stack levels required when called:    2
   593 ;; This function calls:
   594 ;;		Nothing
   595 ;; This function is called by:
   596 ;;		_LOOP
   597 ;; This function uses a non-reentrant model
   598 ;;
   599                           
   600                           
   601                           ;psect for function _ANALOGICO2
   602  0097                     _ANALOGICO2:	
   603  0097                     l714:	
   604                           ;incstack = 0
   605                           ; Regs used in _ANALOGICO2: [wreg+status,2+status,0]
   606                           
   607                           
   608                           ;ESCLAVO.c: 176:     _delay((unsigned long)((1)*(4000000/4000.0)));
   609  0097  30C7               	movlw	199
   610  0098  00F8               	movwf	??_ANALOGICO2
   611  0099                     u97:	
   612  0099  289A               	nop2
   613  009A  0BF8               	decfsz	??_ANALOGICO2,f
   614  009B  2899               	goto	u97
   615  009C  289D               	nop2
   616  009D  289E               	nop2
   617  009E                     l716:	
   618                           
   619                           ;ESCLAVO.c: 177:         ADCON0bits.CHS = 0001;
   620  009E  1283               	bcf	3,5	;RP0=0, select bank0
   621  009F  1303               	bcf	3,6	;RP1=0, select bank0
   622  00A0  081F               	movf	31,w	;volatile
   623  00A1  39C3               	andlw	-61
   624  00A2  3804               	iorlw	4
   625  00A3  009F               	movwf	31	;volatile
   626  00A4                     l718:	
   627                           
   628                           ;ESCLAVO.c: 178:         ADCON0bits.ADON = 1;
   629  00A4  141F               	bsf	31,0	;volatile
   630  00A5                     l720:	
   631                           
   632                           ;ESCLAVO.c: 179:         ADCON0bits.GO = 1;
   633  00A5  149F               	bsf	31,1	;volatile
   634  00A6                     l107:	
   635                           ;ESCLAVO.c: 180:         while(ADCON0bits.GO);
   636                           
   637  00A6  189F               	btfsc	31,1	;volatile
   638  00A7  28A9               	goto	u21
   639  00A8  28AA               	goto	u20
   640  00A9                     u21:	
   641  00A9  28A6               	goto	l107
   642  00AA                     u20:	
   643  00AA                     l722:	
   644                           
   645                           ;ESCLAVO.c: 182:             z = ADRESH;
   646  00AA  081E               	movf	30,w	;volatile
   647  00AB  00F8               	movwf	??_ANALOGICO2
   648  00AC  0878               	movf	??_ANALOGICO2,w
   649  00AD  00F3               	movwf	_z
   650  00AE                     l110:	
   651  00AE  0008               	return
   652  00AF                     __end_of_ANALOGICO2:	
   653                           
   654                           	psect	text3
   655  00AF                     __ptext3:	
   656 ;; *************** function _ANALOGICO *****************
   657 ;; Defined at:
   658 ;;		line 163 in file "ESCLAVO.c"
   659 ;; Parameters:    Size  Location     Type
   660 ;;		None
   661 ;; Auto vars:     Size  Location     Type
   662 ;;		None
   663 ;; Return value:  Size  Location     Type
   664 ;;                  1    wreg      void 
   665 ;; Registers used:
   666 ;;		wreg, status,2, status,0
   667 ;; Tracked objects:
   668 ;;		On entry : 0/0
   669 ;;		On exit  : 0/0
   670 ;;		Unchanged: 0/0
   671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   672 ;;      Params:         0       0       0       0       0
   673 ;;      Locals:         0       0       0       0       0
   674 ;;      Temps:          1       0       0       0       0
   675 ;;      Totals:         1       0       0       0       0
   676 ;;Total ram usage:        1 bytes
   677 ;; Hardware stack levels used:    1
   678 ;; Hardware stack levels required when called:    2
   679 ;; This function calls:
   680 ;;		Nothing
   681 ;; This function is called by:
   682 ;;		_LOOP
   683 ;; This function uses a non-reentrant model
   684 ;;
   685                           
   686                           
   687                           ;psect for function _ANALOGICO
   688  00AF                     _ANALOGICO:	
   689  00AF                     l702:	
   690                           ;incstack = 0
   691                           ; Regs used in _ANALOGICO: [wreg+status,2+status,0]
   692                           
   693                           
   694                           ;ESCLAVO.c: 164:     _delay((unsigned long)((1)*(4000000/4000.0)));
   695  00AF  30C7               	movlw	199
   696  00B0  00F8               	movwf	??_ANALOGICO
   697  00B1                     u107:	
   698  00B1  28B2               	nop2
   699  00B2  0BF8               	decfsz	??_ANALOGICO,f
   700  00B3  28B1               	goto	u107
   701  00B4  28B5               	nop2
   702  00B5  28B6               	nop2
   703  00B6                     l704:	
   704                           
   705                           ;ESCLAVO.c: 165:         ADCON0bits.CHS = 0000;
   706  00B6  30C3               	movlw	-61
   707  00B7  1283               	bcf	3,5	;RP0=0, select bank0
   708  00B8  1303               	bcf	3,6	;RP1=0, select bank0
   709  00B9  059F               	andwf	31,f	;volatile
   710  00BA                     l706:	
   711                           
   712                           ;ESCLAVO.c: 166:         ADCON0bits.ADON = 1;
   713  00BA  141F               	bsf	31,0	;volatile
   714  00BB                     l708:	
   715                           
   716                           ;ESCLAVO.c: 167:         ADCON0bits.GO = 1;
   717  00BB  149F               	bsf	31,1	;volatile
   718  00BC                     l101:	
   719                           ;ESCLAVO.c: 168:         while(ADCON0bits.GO);
   720                           
   721  00BC  189F               	btfsc	31,1	;volatile
   722  00BD  28BF               	goto	u11
   723  00BE  28C0               	goto	u10
   724  00BF                     u11:	
   725  00BF  28BC               	goto	l101
   726  00C0                     u10:	
   727  00C0                     l710:	
   728                           
   729                           ;ESCLAVO.c: 170:             y = ADRESH;
   730  00C0  081E               	movf	30,w	;volatile
   731  00C1  00F8               	movwf	??_ANALOGICO
   732  00C2  0878               	movf	??_ANALOGICO,w
   733  00C3  00F2               	movwf	_y
   734  00C4                     l104:	
   735  00C4  0008               	return
   736  00C5                     __end_of_ANALOGICO:	
   737                           
   738                           	psect	text4
   739  0059                     __ptext4:	
   740 ;; *************** function _ISR *****************
   741 ;; Defined at:
   742 ;;		line 46 in file "ESCLAVO.c"
   743 ;; Parameters:    Size  Location     Type
   744 ;;		None
   745 ;; Auto vars:     Size  Location     Type
   746 ;;		None
   747 ;; Return value:  Size  Location     Type
   748 ;;                  1    wreg      void 
   749 ;; Registers used:
   750 ;;		wreg, status,2, status,0, pclath, cstack
   751 ;; Tracked objects:
   752 ;;		On entry : 0/0
   753 ;;		On exit  : 0/0
   754 ;;		Unchanged: 0/0
   755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   756 ;;      Params:         0       0       0       0       0
   757 ;;      Locals:         0       0       0       0       0
   758 ;;      Temps:          3       0       0       0       0
   759 ;;      Totals:         3       0       0       0       0
   760 ;;Total ram usage:        3 bytes
   761 ;; Hardware stack levels used:    1
   762 ;; Hardware stack levels required when called:    1
   763 ;; This function calls:
   764 ;;		_MESSAGE
   765 ;;		_MESSAGE2
   766 ;; This function is called by:
   767 ;;		Interrupt level 1
   768 ;; This function uses a non-reentrant model
   769 ;;
   770                           
   771                           
   772                           ;psect for function _ISR
   773  0059                     _ISR:	
   774  0059                     i1l744:	
   775                           
   776                           ;ESCLAVO.c: 48:     if(PIR1bits.SSPIF==1 & BANDERA == 0 ){
   777  0059  1283               	bcf	3,5	;RP0=0, select bank0
   778  005A  1303               	bcf	3,6	;RP1=0, select bank0
   779  005B  1D8C               	btfss	12,3	;volatile
   780  005C  285E               	goto	u5_21
   781  005D  285F               	goto	u5_20
   782  005E                     u5_21:	
   783  005E  2876               	goto	i1l73
   784  005F                     u5_20:	
   785  005F                     i1l746:	
   786  005F  0870               	movf	_BANDERA,w
   787  0060  1D03               	btfss	3,2
   788  0061  2863               	goto	u6_21
   789  0062  2864               	goto	u6_20
   790  0063                     u6_21:	
   791  0063  2876               	goto	i1l73
   792  0064                     u6_20:	
   793  0064                     i1l748:	
   794                           
   795                           ;ESCLAVO.c: 49:         x= SSPBUF;
   796  0064  0813               	movf	19,w	;volatile
   797  0065  00F5               	movwf	??_ISR
   798  0066  0875               	movf	??_ISR,w
   799  0067  00F4               	movwf	_x
   800                           
   801                           ;ESCLAVO.c: 51:         PORTB = x;
   802  0068  0874               	movf	_x,w
   803  0069  0086               	movwf	6	;volatile
   804  006A                     i1l750:	
   805                           
   806                           ;ESCLAVO.c: 52:           SSPSTATbits.BF= 0;
   807  006A  1683               	bsf	3,5	;RP0=1, select bank1
   808  006B  1303               	bcf	3,6	;RP1=0, select bank1
   809  006C  1014               	bcf	20,0	;volatile
   810  006D                     i1l752:	
   811                           
   812                           ;ESCLAVO.c: 53:           PIR1bits.SSPIF = 0;
   813  006D  1283               	bcf	3,5	;RP0=0, select bank0
   814  006E  1303               	bcf	3,6	;RP1=0, select bank0
   815  006F  118C               	bcf	12,3	;volatile
   816  0070                     i1l754:	
   817                           
   818                           ;ESCLAVO.c: 54:            MESSAGE();
   819  0070  120A  118A  20C5  120A  118A  	fcall	_MESSAGE
   820  0075  2890               	goto	i1l74
   821  0076                     i1l73:	
   822                           ;ESCLAVO.c: 58:     }
   823                           
   824                           
   825                           ;ESCLAVO.c: 59:     if(PIR1bits.SSPIF==1 & BANDERA == 1 ){
   826  0076  1D8C               	btfss	12,3	;volatile
   827  0077  2879               	goto	u7_21
   828  0078  287A               	goto	u7_20
   829  0079                     u7_21:	
   830  0079  2890               	goto	i1l74
   831  007A                     u7_20:	
   832  007A                     i1l758:	
   833  007A  0370               	decf	_BANDERA,w
   834  007B  1D03               	btfss	3,2
   835  007C  287E               	goto	u8_21
   836  007D  287F               	goto	u8_20
   837  007E                     u8_21:	
   838  007E  2890               	goto	i1l74
   839  007F                     u8_20:	
   840  007F                     i1l760:	
   841                           
   842                           ;ESCLAVO.c: 60:         x= SSPBUF;
   843  007F  0813               	movf	19,w	;volatile
   844  0080  00F5               	movwf	??_ISR
   845  0081  0875               	movf	??_ISR,w
   846  0082  00F4               	movwf	_x
   847                           
   848                           ;ESCLAVO.c: 62:         PORTB = x;
   849  0083  0874               	movf	_x,w
   850  0084  0086               	movwf	6	;volatile
   851  0085                     i1l762:	
   852                           
   853                           ;ESCLAVO.c: 63:           SSPSTATbits.BF= 0;
   854  0085  1683               	bsf	3,5	;RP0=1, select bank1
   855  0086  1303               	bcf	3,6	;RP1=0, select bank1
   856  0087  1014               	bcf	20,0	;volatile
   857  0088                     i1l764:	
   858                           
   859                           ;ESCLAVO.c: 64:           PIR1bits.SSPIF = 0;
   860  0088  1283               	bcf	3,5	;RP0=0, select bank0
   861  0089  1303               	bcf	3,6	;RP1=0, select bank0
   862  008A  118C               	bcf	12,3	;volatile
   863  008B                     i1l766:	
   864                           
   865                           ;ESCLAVO.c: 66:            MESSAGE2();
   866  008B  120A  118A  20DE  120A  118A  	fcall	_MESSAGE2
   867  0090                     i1l74:	
   868  0090  0877               	movf	??_ISR+2,w
   869  0091  008A               	movwf	10
   870  0092  0E76               	swapf	(??_ISR+1)^(0+4294967168),w
   871  0093  0083               	movwf	3
   872  0094  0EFE               	swapf	btemp,f
   873  0095  0E7E               	swapf	btemp,w
   874  0096  0009               	retfie
   875  0097                     __end_of_ISR:	
   876                           
   877                           	psect	intentry
   878  0004                     __pintentry:	
   879                           ;incstack = 0
   880                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
   881                           
   882  0004                     interrupt_function:	
   883  007E                     saved_w	set	btemp
   884  0004  00FE               	movwf	btemp
   885  0005  0E03               	swapf	3,w
   886  0006  00F6               	movwf	??_ISR+1
   887  0007  080A               	movf	10,w
   888  0008  00F7               	movwf	??_ISR+2
   889  0009  120A  118A  2859   	ljmp	_ISR
   890                           
   891                           	psect	text5
   892  00DE                     __ptext5:	
   893 ;; *************** function _MESSAGE2 *****************
   894 ;; Defined at:
   895 ;;		line 152 in file "ESCLAVO.c"
   896 ;; Parameters:    Size  Location     Type
   897 ;;		None
   898 ;; Auto vars:     Size  Location     Type
   899 ;;		None
   900 ;; Return value:  Size  Location     Type
   901 ;;                  1    wreg      void 
   902 ;; Registers used:
   903 ;;		wreg, status,2
   904 ;; Tracked objects:
   905 ;;		On entry : 0/0
   906 ;;		On exit  : 0/0
   907 ;;		Unchanged: 0/0
   908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   909 ;;      Params:         0       0       0       0       0
   910 ;;      Locals:         0       0       0       0       0
   911 ;;      Temps:          0       0       0       0       0
   912 ;;      Totals:         0       0       0       0       0
   913 ;;Total ram usage:        0 bytes
   914 ;; Hardware stack levels used:    1
   915 ;; This function calls:
   916 ;;		Nothing
   917 ;; This function is called by:
   918 ;;		_ISR
   919 ;; This function uses a non-reentrant model
   920 ;;
   921                           
   922                           
   923                           ;psect for function _MESSAGE2
   924  00DE                     _MESSAGE2:	
   925  00DE                     i1l734:	
   926                           ;incstack = 0
   927                           ; Regs used in _MESSAGE2: [wreg+status,2]
   928                           
   929  00DE                     i1l95:	
   930                           ;ESCLAVO.c: 154:     while(BF==1);
   931                           
   932  00DE  1683               	bsf	3,5	;RP0=1, select bank1
   933  00DF  1303               	bcf	3,6	;RP1=0, select bank1
   934  00E0  1814               	btfsc	20,0	;volatile
   935  00E1  28E3               	goto	u4_21
   936  00E2  28E4               	goto	u4_20
   937  00E3                     u4_21:	
   938  00E3  28DE               	goto	i1l95
   939  00E4                     u4_20:	
   940  00E4                     i1l736:	
   941                           
   942                           ;ESCLAVO.c: 156:     SSPBUF = z;
   943  00E4  0873               	movf	_z,w
   944  00E5  1283               	bcf	3,5	;RP0=0, select bank0
   945  00E6  1303               	bcf	3,6	;RP1=0, select bank0
   946  00E7  0093               	movwf	19	;volatile
   947  00E8                     i1l738:	
   948                           
   949                           ;ESCLAVO.c: 157:     BANDERA = 0;
   950  00E8  01F0               	clrf	_BANDERA
   951  00E9                     i1l98:	
   952  00E9  0008               	return
   953  00EA                     __end_of_MESSAGE2:	
   954                           
   955                           	psect	text6
   956  00C5                     __ptext6:	
   957 ;; *************** function _MESSAGE *****************
   958 ;; Defined at:
   959 ;;		line 143 in file "ESCLAVO.c"
   960 ;; Parameters:    Size  Location     Type
   961 ;;		None
   962 ;; Auto vars:     Size  Location     Type
   963 ;;		None
   964 ;; Return value:  Size  Location     Type
   965 ;;                  1    wreg      void 
   966 ;; Registers used:
   967 ;;		wreg
   968 ;; Tracked objects:
   969 ;;		On entry : 0/0
   970 ;;		On exit  : 0/0
   971 ;;		Unchanged: 0/0
   972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   973 ;;      Params:         0       0       0       0       0
   974 ;;      Locals:         0       0       0       0       0
   975 ;;      Temps:          0       0       0       0       0
   976 ;;      Totals:         0       0       0       0       0
   977 ;;Total ram usage:        0 bytes
   978 ;; Hardware stack levels used:    1
   979 ;; This function calls:
   980 ;;		Nothing
   981 ;; This function is called by:
   982 ;;		_ISR
   983 ;; This function uses a non-reentrant model
   984 ;;
   985                           
   986                           
   987                           ;psect for function _MESSAGE
   988  00C5                     _MESSAGE:	
   989  00C5                     i1l726:	
   990                           ;incstack = 0
   991                           ; Regs used in _MESSAGE: [wreg]
   992                           
   993  00C5                     i1l89:	
   994                           ;ESCLAVO.c: 145:     while(BF==1);
   995                           
   996  00C5  1683               	bsf	3,5	;RP0=1, select bank1
   997  00C6  1303               	bcf	3,6	;RP1=0, select bank1
   998  00C7  1814               	btfsc	20,0	;volatile
   999  00C8  28CA               	goto	u3_21
  1000  00C9  28CB               	goto	u3_20
  1001  00CA                     u3_21:	
  1002  00CA  28C5               	goto	i1l89
  1003  00CB                     u3_20:	
  1004  00CB                     i1l728:	
  1005                           
  1006                           ;ESCLAVO.c: 147:     SSPBUF = y;
  1007  00CB  0872               	movf	_y,w
  1008  00CC  1283               	bcf	3,5	;RP0=0, select bank0
  1009  00CD  1303               	bcf	3,6	;RP1=0, select bank0
  1010  00CE  0093               	movwf	19	;volatile
  1011  00CF                     i1l730:	
  1012                           
  1013                           ;ESCLAVO.c: 148:     BANDERA = 1;
  1014  00CF  01F0               	clrf	_BANDERA
  1015  00D0  0AF0               	incf	_BANDERA,f
  1016  00D1                     i1l92:	
  1017  00D1  0008               	return
  1018  00D2                     __end_of_MESSAGE:	
  1019  007E                     btemp	set	126	;btemp
  1020  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       9
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _LOOP->_ANALOGICO
    _LOOP->_ANALOGICO2

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                               _LOOP
 ---------------------------------------------------------------------------------
 (1) _LOOP                                                 0     0      0       0
                          _ANALOGICO
                         _ANALOGICO2
 ---------------------------------------------------------------------------------
 (2) _ANALOGICO2                                           1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ANALOGICO                                            1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
                            _MESSAGE
                           _MESSAGE2
 ---------------------------------------------------------------------------------
 (4) _MESSAGE2                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _MESSAGE                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LOOP
     _ANALOGICO
     _ANALOGICO2

 _ISR (ROOT)
   _MESSAGE
   _MESSAGE2

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      4       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       9       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       9      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Feb 21 09:03:51 2020

                       _x 0074                         _y 0072                         _z 0073  
             __CFG_CP$OFF 0000               _SSPSTATbits 0094                        _BF 04A0  
                      l80 0056                        l83 00D2                        u10 00C0  
                      u11 00BF                        u20 00AA                        u21 00A9  
                      u97 0099        __size_of_ANALOGICO 0016                       l101 00BC  
                     l110 00AE                       l104 00C4                       l107 00A6  
                     l710 00C0                       l702 00AF                       l704 00B6  
                     l720 00A5                       l800 0035                       l706 00BA  
                     l722 00AA                       l714 0097                       l810 003A  
                     l802 0036                       l708 00BB                       l716 009E  
                     l820 0041                       l812 003D                       l804 0037  
                     l718 00A4                       l742 00D2                       l830 004D  
                     l822 0044                       l814 003E                       l806 0038  
                     l832 004E                       l824 0045                       l816 003F  
                     l808 0039                       l834 004F                       l826 0049  
                     l818 0040                       l770 0018                       l836 0050  
                     l828 004C                       l780 0022                       l772 001E  
                     l838 0051                       l790 002E                       l782 0026  
                     l774 001F                       l792 002F                       l784 0027  
                     l776 0020                       l794 0030                       l786 002B  
                     l778 0021                       l796 0033                       l788 002C  
                     l798 0034                       u107 00B1              __CFG_CPD$OFF 0000  
                     _ISR 0059       __size_of_ANALOGICO2 0018              __CFG_LVP$OFF 0000  
                    ?_ISR 0075           __end_of_MESSAGE 00D2                      _DATA 0071  
                    i1l73 0076                      i1l74 0090                      i1l92 00D1  
                    i1l95 00DE                      i1l89 00C5                      i1l98 00E9  
                    _LOOP 00D2                      u3_20 00CB                      u3_21 00CA  
                    u4_20 00E4                      u4_21 00E3                      u5_20 005F  
                    u5_21 005E                      u6_20 0064                      u6_21 0063  
                    u7_20 007A                      u7_21 0079                      u8_20 007F  
                    u8_21 007E              __CFG_WRT$OFF 0000                      _main 0018  
                    btemp 007E                      start 000C             __CFG_IESO$OFF 0000  
                   ??_ISR 0075                     ?_LOOP 0075          __end_of_MESSAGE2 00EA  
                   ?_main 0075             __CFG_WDTE$OFF 0000                     _ANSEL 0188  
                   i1l730 00CF                     i1l726 00C5                     i1l734 00DE  
                   i1l750 006A                     i1l728 00CB                     i1l736 00E4  
                   i1l760 007F                     i1l752 006D                     i1l744 0059  
                   i1l738 00E8                     i1l762 0085                     i1l754 0070  
                   i1l746 005F                     i1l764 0088                     i1l748 0064  
                   i1l766 008B                     i1l758 007A                     _PORTA 0005  
                   _PORTB 0006                     _PORTC 0007                     _PORTD 0008  
                   _PORTE 0009                     _TRISA 0085                     _TRISB 0086  
                   _TRISC 0087                     _TRISD 0088                     _TRISE 0089  
          __CFG_FCMEN$OFF 0000            __CFG_BOREN$OFF 0000                     pclath 000A  
       __end_of_ANALOGICO 00C5                     status 0003                     wtemp0 007E  
            __end_of_LOOP 00DE            __CFG_MCLRE$OFF 0000           __initialization 000F  
            __end_of_main 0059                    ??_LOOP 0079                    ??_main 0079  
               ??_MESSAGE 0075                    _ADRESH 001E                    _ANSELH 0189  
            ??_ANALOGICO2 0078                    _SSPBUF 0013            __CFG_PWRTE$OFF 0000  
      __end_of_ANALOGICO2 00AF                    saved_w 007E   __end_of__initialization 0014  
               ?_MESSAGE2 0075            __pcstackCOMMON 0075                ??_MESSAGE2 0075  
              __pmaintext 0018                __pintentry 0004                   _BANDERA 0070  
                 _MESSAGE 00C5                 _ANALOGICO 00AF                   __ptext1 00D2  
                 __ptext2 0097                   __ptext3 00AF                   __ptext4 0059  
                 __ptext5 00DE                   __ptext6 00C5              __size_of_ISR 003E  
    end_of_initialization 0014                ?_ANALOGICO 0075         __size_of_MESSAGE2 000C  
     start_initialization 000F               __end_of_ISR 0097  __CFG_FOSC$INTRC_NOCLKOUT 0000  
             ??_ANALOGICO 0078                  ?_MESSAGE 0075               __pbssCOMMON 0070  
               ___latbits 0002         interrupt_function 0004                  _MESSAGE2 00DE  
                _PIE1bits 008C                  _PIR1bits 000C                _ADCON0bits 001F  
              _ADCON1bits 009F          __size_of_MESSAGE 000D                _ANALOGICO2 0097  
       __CFG_BOR4V$BOR40V 0000             __size_of_LOOP 000C             __size_of_main 0041  
              _INTCONbits 000B                  intlevel1 0000               ?_ANALOGICO2 0075  
              _OSCCONbits 008F                _SSPCONbits 0014  
