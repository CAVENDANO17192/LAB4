

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Feb 19 20:42:51 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	intentry,global,class=CODE,delta=2
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.10
    16                           ; Generated 31/07/2019 GMT
    17                           ; 
    18                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F887 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  008F                     	;# 
    94  0090                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0094                     	;# 
   101  0095                     	;# 
   102  0096                     	;# 
   103  0097                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009E                     	;# 
   111  009F                     	;# 
   112  0105                     	;# 
   113  0107                     	;# 
   114  0108                     	;# 
   115  0109                     	;# 
   116  010C                     	;# 
   117  010C                     	;# 
   118  010D                     	;# 
   119  010E                     	;# 
   120  010F                     	;# 
   121  0185                     	;# 
   122  0187                     	;# 
   123  0188                     	;# 
   124  0189                     	;# 
   125  018C                     	;# 
   126  018D                     	;# 
   127  0000                     	;# 
   128  0001                     	;# 
   129  0002                     	;# 
   130  0003                     	;# 
   131  0004                     	;# 
   132  0005                     	;# 
   133  0006                     	;# 
   134  0007                     	;# 
   135  0008                     	;# 
   136  0009                     	;# 
   137  000A                     	;# 
   138  000B                     	;# 
   139  000C                     	;# 
   140  000D                     	;# 
   141  000E                     	;# 
   142  000E                     	;# 
   143  000F                     	;# 
   144  0010                     	;# 
   145  0011                     	;# 
   146  0012                     	;# 
   147  0013                     	;# 
   148  0014                     	;# 
   149  0015                     	;# 
   150  0015                     	;# 
   151  0016                     	;# 
   152  0017                     	;# 
   153  0018                     	;# 
   154  0019                     	;# 
   155  001A                     	;# 
   156  001B                     	;# 
   157  001B                     	;# 
   158  001C                     	;# 
   159  001D                     	;# 
   160  001E                     	;# 
   161  001F                     	;# 
   162  0081                     	;# 
   163  0085                     	;# 
   164  0086                     	;# 
   165  0087                     	;# 
   166  0088                     	;# 
   167  0089                     	;# 
   168  008C                     	;# 
   169  008D                     	;# 
   170  008E                     	;# 
   171  008F                     	;# 
   172  0090                     	;# 
   173  0091                     	;# 
   174  0092                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0094                     	;# 
   179  0095                     	;# 
   180  0096                     	;# 
   181  0097                     	;# 
   182  0098                     	;# 
   183  0099                     	;# 
   184  009A                     	;# 
   185  009B                     	;# 
   186  009C                     	;# 
   187  009D                     	;# 
   188  009E                     	;# 
   189  009F                     	;# 
   190  0105                     	;# 
   191  0107                     	;# 
   192  0108                     	;# 
   193  0109                     	;# 
   194  010C                     	;# 
   195  010C                     	;# 
   196  010D                     	;# 
   197  010E                     	;# 
   198  010F                     	;# 
   199  0185                     	;# 
   200  0187                     	;# 
   201  0188                     	;# 
   202  0189                     	;# 
   203  018C                     	;# 
   204  018D                     	;# 
   205  001E                     _ADRESH	set	30
   206  0008                     _PORTDbits	set	8
   207  000B                     _INTCONbits	set	11
   208  0014                     _SSPCONbits	set	20
   209  001F                     _ADCON0bits	set	31
   210  0009                     _PORTE	set	9
   211  0008                     _PORTD	set	8
   212  0007                     _PORTC	set	7
   213  0005                     _PORTA	set	5
   214  0006                     _PORTB	set	6
   215  0013                     _SSPBUF	set	19
   216  000C                     _PIR1bits	set	12
   217  008C                     _PIE1bits	set	140
   218  009F                     _ADCON1bits	set	159
   219  0089                     _TRISE	set	137
   220  0088                     _TRISD	set	136
   221  0087                     _TRISC	set	135
   222  0086                     _TRISB	set	134
   223  0085                     _TRISA	set	133
   224  008F                     _OSCCONbits	set	143
   225  0094                     _SSPSTATbits	set	148
   226  04A0                     _BF	set	1184
   227  0189                     _ANSELH	set	393
   228  0188                     _ANSEL	set	392
   229                           
   230                           ; #config settings
   231  0000                     
   232                           	psect	cinit
   233  000F                     start_initialization:	
   234  000F                     __initialization:	
   235                           
   236                           ; Clear objects allocated to COMMON
   237  000F  01F0               	clrf	__pbssCOMMON& (0+127)
   238  0010  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   239  0011  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   240  0012  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   241  0013                     end_of_initialization:	
   242                           ;End of C runtime variable initialization code
   243                           
   244  0013                     __end_of__initialization:	
   245  0013  0183               	clrf	3
   246  0014  120A  118A  2817   	ljmp	_main	;jump to C main() function
   247                           
   248                           	psect	bssCOMMON
   249  0070                     __pbssCOMMON:	
   250  0070                     _y:	
   251  0070                     	ds	1
   252  0071                     _DATA:	
   253  0071                     	ds	1
   254  0072                     _BANDERA:	
   255  0072                     	ds	1
   256  0073                     _x:	
   257  0073                     	ds	1
   258                           
   259                           	psect	cstackCOMMON
   260  0074                     __pcstackCOMMON:	
   261  0074                     ?_LOOP:	
   262  0074                     ?_ANALOGICO:	
   263                           ; 1 bytes @ 0x0
   264                           
   265  0074                     ?_MESSAGE:	
   266                           ; 1 bytes @ 0x0
   267                           
   268  0074                     ?_ISR:	
   269                           ; 1 bytes @ 0x0
   270                           
   271  0074                     ??_ISR:	
   272                           ; 1 bytes @ 0x0
   273                           
   274  0074                     ?_main:	
   275                           ; 1 bytes @ 0x0
   276                           
   277                           
   278                           ; 1 bytes @ 0x0
   279  0074                     	ds	3
   280  0077                     ??_ANALOGICO:	
   281  0077                     ??_MESSAGE:	
   282                           ; 1 bytes @ 0x3
   283                           
   284                           
   285                           ; 1 bytes @ 0x3
   286  0077                     	ds	1
   287  0078                     ??_LOOP:	
   288  0078                     ??_main:	
   289                           ; 1 bytes @ 0x4
   290                           
   291                           
   292                           	psect	maintext
   293  0017                     __pmaintext:	
   294                           ; 1 bytes @ 0x4
   295 ;;
   296 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   297 ;;
   298 ;; *************** function _main *****************
   299 ;; Defined at:
   300 ;;		line 57 in file "MAESTRO.c"
   301 ;; Parameters:    Size  Location     Type
   302 ;;		None
   303 ;; Auto vars:     Size  Location     Type
   304 ;;		None
   305 ;; Return value:  Size  Location     Type
   306 ;;                  1    wreg      void 
   307 ;; Registers used:
   308 ;;		wreg, status,2, status,0, pclath, cstack
   309 ;; Tracked objects:
   310 ;;		On entry : B00/0
   311 ;;		On exit  : 0/0
   312 ;;		Unchanged: 0/0
   313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   314 ;;      Params:         0       0       0       0       0
   315 ;;      Locals:         0       0       0       0       0
   316 ;;      Temps:          0       0       0       0       0
   317 ;;      Totals:         0       0       0       0       0
   318 ;;Total ram usage:        0 bytes
   319 ;; Hardware stack levels required when called:    3
   320 ;; This function calls:
   321 ;;		_LOOP
   322 ;; This function is called by:
   323 ;;		Startup code after reset
   324 ;; This function uses a non-reentrant model
   325 ;;
   326                           
   327                           
   328                           ;psect for function _main
   329  0017                     _main:	
   330  0017                     l715:	
   331                           ;incstack = 0
   332                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   333                           
   334                           
   335                           ;MAESTRO.c: 60:     OSCCONbits.IRCF = 0b111;
   336  0017  3070               	movlw	112
   337  0018  1683               	bsf	3,5	;RP0=1, select bank1
   338  0019  1303               	bcf	3,6	;RP1=0, select bank1
   339  001A  048F               	iorwf	15,f	;volatile
   340  001B                     l717:	
   341                           
   342                           ;MAESTRO.c: 61:     OSCCONbits.OSTS= 0;
   343  001B  118F               	bcf	15,3	;volatile
   344  001C                     l719:	
   345                           
   346                           ;MAESTRO.c: 62:     OSCCONbits.HTS = 0;
   347  001C  110F               	bcf	15,2	;volatile
   348  001D                     l721:	
   349                           
   350                           ;MAESTRO.c: 63:     OSCCONbits.LTS = 0;
   351  001D  108F               	bcf	15,1	;volatile
   352  001E                     l723:	
   353                           
   354                           ;MAESTRO.c: 64:     OSCCONbits.SCS = 1;
   355  001E  140F               	bsf	15,0	;volatile
   356  001F                     l725:	
   357                           
   358                           ;MAESTRO.c: 68:     ANSEL = 0b000100001;
   359  001F  3021               	movlw	33
   360  0020  1683               	bsf	3,5	;RP0=1, select bank3
   361  0021  1703               	bsf	3,6	;RP1=1, select bank3
   362  0022  0088               	movwf	8	;volatile
   363  0023                     l727:	
   364                           
   365                           ;MAESTRO.c: 69:     ANSELH = 0b00000000;
   366  0023  0189               	clrf	9	;volatile
   367  0024                     l729:	
   368                           
   369                           ;MAESTRO.c: 71:     TRISA = 0b00000001;
   370  0024  3001               	movlw	1
   371  0025  1683               	bsf	3,5	;RP0=1, select bank1
   372  0026  1303               	bcf	3,6	;RP1=0, select bank1
   373  0027  0085               	movwf	5	;volatile
   374  0028                     l731:	
   375                           
   376                           ;MAESTRO.c: 72:     TRISB = 0b00000000;
   377  0028  0186               	clrf	6	;volatile
   378  0029                     l733:	
   379                           
   380                           ;MAESTRO.c: 73:     TRISC = 0b00010000;
   381  0029  3010               	movlw	16
   382  002A  0087               	movwf	7	;volatile
   383  002B                     l735:	
   384                           
   385                           ;MAESTRO.c: 74:     TRISD = 0b00000000;
   386  002B  0188               	clrf	8	;volatile
   387  002C                     l737:	
   388                           
   389                           ;MAESTRO.c: 75:     TRISE = 0001;
   390  002C  3001               	movlw	1
   391  002D  0089               	movwf	9	;volatile
   392  002E                     l739:	
   393                           
   394                           ;MAESTRO.c: 77:     PORTA = 0;
   395  002E  1283               	bcf	3,5	;RP0=0, select bank0
   396  002F  1303               	bcf	3,6	;RP1=0, select bank0
   397  0030  0185               	clrf	5	;volatile
   398  0031                     l741:	
   399                           
   400                           ;MAESTRO.c: 78:     PORTB = 0;
   401  0031  0186               	clrf	6	;volatile
   402  0032                     l743:	
   403                           
   404                           ;MAESTRO.c: 79:     PORTC = 0;
   405  0032  0187               	clrf	7	;volatile
   406  0033                     l745:	
   407                           
   408                           ;MAESTRO.c: 80:     PORTD = 0;
   409  0033  0188               	clrf	8	;volatile
   410  0034                     l747:	
   411                           
   412                           ;MAESTRO.c: 81:     PORTE = 0;
   413  0034  0189               	clrf	9	;volatile
   414  0035                     l749:	
   415                           
   416                           ;MAESTRO.c: 84:     ADCON0bits.ADCS0 = 1;
   417  0035  171F               	bsf	31,6	;volatile
   418  0036                     l751:	
   419                           
   420                           ;MAESTRO.c: 85:     ADCON0bits.ADCS1 = 0;
   421  0036  139F               	bcf	31,7	;volatile
   422  0037                     l753:	
   423                           
   424                           ;MAESTRO.c: 86:     ADCON0bits.CHS0 = 0;
   425  0037  111F               	bcf	31,2	;volatile
   426  0038                     l755:	
   427                           
   428                           ;MAESTRO.c: 87:     ADCON0bits.CHS1 = 0;
   429  0038  119F               	bcf	31,3	;volatile
   430  0039                     l757:	
   431                           
   432                           ;MAESTRO.c: 88:     ADCON0bits.CHS2 = 0;
   433  0039  121F               	bcf	31,4	;volatile
   434  003A                     l759:	
   435                           
   436                           ;MAESTRO.c: 89:     ADCON0bits.CHS3 = 0;
   437  003A  129F               	bcf	31,5	;volatile
   438  003B                     l761:	
   439                           
   440                           ;MAESTRO.c: 90:     ADCON0bits.ADON = 1;
   441  003B  141F               	bsf	31,0	;volatile
   442  003C                     l763:	
   443                           
   444                           ;MAESTRO.c: 91:     ADCON1bits.ADFM = 0;
   445  003C  1683               	bsf	3,5	;RP0=1, select bank1
   446  003D  1303               	bcf	3,6	;RP1=0, select bank1
   447  003E  139F               	bcf	31,7	;volatile
   448  003F                     l765:	
   449                           
   450                           ;MAESTRO.c: 92:     ADCON1bits.VCFG0 = 0;
   451  003F  121F               	bcf	31,4	;volatile
   452  0040                     l767:	
   453                           
   454                           ;MAESTRO.c: 93:     ADCON1bits.VCFG1 = 0;
   455  0040  129F               	bcf	31,5	;volatile
   456  0041                     l769:	
   457                           
   458                           ;MAESTRO.c: 97:     SSPSTATbits.SMP = 0;
   459  0041  1394               	bcf	20,7	;volatile
   460  0042                     l771:	
   461                           
   462                           ;MAESTRO.c: 98:     SSPSTATbits.CKE = 0;
   463  0042  1314               	bcf	20,6	;volatile
   464  0043                     l773:	
   465                           
   466                           ;MAESTRO.c: 99:     SSPCONbits.SSPEN = 1;
   467  0043  1283               	bcf	3,5	;RP0=0, select bank0
   468  0044  1303               	bcf	3,6	;RP1=0, select bank0
   469  0045  1694               	bsf	20,5	;volatile
   470  0046                     l775:	
   471                           
   472                           ;MAESTRO.c: 100:     SSPCONbits.CKP = 1;
   473  0046  1614               	bsf	20,4	;volatile
   474                           
   475                           ;MAESTRO.c: 101:     SSPCONbits.SSPM = 0b0010;
   476  0047  0814               	movf	20,w	;volatile
   477  0048  39F0               	andlw	-16
   478  0049  3802               	iorlw	2
   479  004A  0094               	movwf	20	;volatile
   480  004B                     l777:	
   481                           
   482                           ;MAESTRO.c: 104:     PIE1bits.SSPIE = 1;
   483  004B  1683               	bsf	3,5	;RP0=1, select bank1
   484  004C  1303               	bcf	3,6	;RP1=0, select bank1
   485  004D  158C               	bsf	12,3	;volatile
   486  004E                     l779:	
   487                           
   488                           ;MAESTRO.c: 105:     INTCONbits.PEIE = 1;
   489  004E  170B               	bsf	11,6	;volatile
   490  004F                     l781:	
   491                           
   492                           ;MAESTRO.c: 106:     INTCONbits.GIE = 1;
   493  004F  178B               	bsf	11,7	;volatile
   494  0050                     l783:	
   495                           
   496                           ;MAESTRO.c: 108:     x= 0;
   497  0050  01F3               	clrf	_x
   498  0051                     l785:	
   499                           
   500                           ;MAESTRO.c: 109:     y=0;
   501  0051  01F0               	clrf	_y
   502  0052                     l787:	
   503                           
   504                           ;MAESTRO.c: 110:     LOOP();
   505  0052  120A  118A  2096  120A  118A  	fcall	_LOOP
   506  0057                     l75:	
   507  0057  120A  118A  280C   	ljmp	start
   508  005A                     __end_of_main:	
   509                           
   510                           	psect	text1
   511  0096                     __ptext1:	
   512 ;; *************** function _LOOP *****************
   513 ;; Defined at:
   514 ;;		line 114 in file "MAESTRO.c"
   515 ;; Parameters:    Size  Location     Type
   516 ;;		None
   517 ;; Auto vars:     Size  Location     Type
   518 ;;		None
   519 ;; Return value:  Size  Location     Type
   520 ;;                  1    wreg      void 
   521 ;; Registers used:
   522 ;;		wreg, status,2, status,0, pclath, cstack
   523 ;; Tracked objects:
   524 ;;		On entry : 0/0
   525 ;;		On exit  : 0/0
   526 ;;		Unchanged: 0/0
   527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   528 ;;      Params:         0       0       0       0       0
   529 ;;      Locals:         0       0       0       0       0
   530 ;;      Temps:          0       0       0       0       0
   531 ;;      Totals:         0       0       0       0       0
   532 ;;Total ram usage:        0 bytes
   533 ;; Hardware stack levels used:    1
   534 ;; Hardware stack levels required when called:    2
   535 ;; This function calls:
   536 ;;		_ANALOGICO
   537 ;;		_MESSAGE
   538 ;; This function is called by:
   539 ;;		_main
   540 ;; This function uses a non-reentrant model
   541 ;;
   542                           
   543                           
   544                           ;psect for function _LOOP
   545  0096                     _LOOP:	
   546  0096                     l78:	
   547                           ;incstack = 0
   548                           ; Regs used in _LOOP: [wreg+status,2+status,0+pclath+cstack]
   549                           ;MAESTRO.c: 115:     while(1){
   550                           
   551  0096                     l703:	
   552                           
   553                           ;MAESTRO.c: 116:         ANALOGICO();
   554  0096  120A  118A  2073  120A  118A  	fcall	_ANALOGICO
   555                           
   556                           ;MAESTRO.c: 117:         MESSAGE();
   557  009B  120A  118A  2089  120A  118A  	fcall	_MESSAGE
   558  00A0  2896               	goto	l78
   559  00A1  0008               	return
   560  00A2                     __end_of_LOOP:	
   561                           
   562                           	psect	text2
   563  0089                     __ptext2:	
   564 ;; *************** function _MESSAGE *****************
   565 ;; Defined at:
   566 ;;		line 124 in file "MAESTRO.c"
   567 ;; Parameters:    Size  Location     Type
   568 ;;		None
   569 ;; Auto vars:     Size  Location     Type
   570 ;;		None
   571 ;; Return value:  Size  Location     Type
   572 ;;                  1    wreg      void 
   573 ;; Registers used:
   574 ;;		wreg
   575 ;; Tracked objects:
   576 ;;		On entry : 0/0
   577 ;;		On exit  : 0/0
   578 ;;		Unchanged: 0/0
   579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   580 ;;      Params:         0       0       0       0       0
   581 ;;      Locals:         0       0       0       0       0
   582 ;;      Temps:          0       0       0       0       0
   583 ;;      Totals:         0       0       0       0       0
   584 ;;Total ram usage:        0 bytes
   585 ;; Hardware stack levels used:    1
   586 ;; Hardware stack levels required when called:    1
   587 ;; This function calls:
   588 ;;		Nothing
   589 ;; This function is called by:
   590 ;;		_LOOP
   591 ;; This function uses a non-reentrant model
   592 ;;
   593                           
   594                           
   595                           ;psect for function _MESSAGE
   596  0089                     _MESSAGE:	
   597  0089                     l695:	
   598                           ;incstack = 0
   599                           ; Regs used in _MESSAGE: [wreg]
   600                           
   601  0089                     l84:	
   602                           ;MAESTRO.c: 126:     while(BF==1);
   603                           
   604  0089  1683               	bsf	3,5	;RP0=1, select bank1
   605  008A  1303               	bcf	3,6	;RP1=0, select bank1
   606  008B  1814               	btfsc	20,0	;volatile
   607  008C  288E               	goto	u21
   608  008D  288F               	goto	u20
   609  008E                     u21:	
   610  008E  2889               	goto	l84
   611  008F                     u20:	
   612  008F                     l86:	
   613                           
   614                           ;MAESTRO.c: 127:     PORTDbits.RD1 = 1;
   615  008F  1283               	bcf	3,5	;RP0=0, select bank0
   616  0090  1303               	bcf	3,6	;RP1=0, select bank0
   617  0091  1488               	bsf	8,1	;volatile
   618  0092                     l697:	
   619                           
   620                           ;MAESTRO.c: 128:     SSPBUF = y;
   621  0092  0870               	movf	_y,w
   622  0093  0093               	movwf	19	;volatile
   623  0094                     l699:	
   624                           
   625                           ;MAESTRO.c: 129:     PORTDbits.RD1 = 0;
   626  0094  1088               	bcf	8,1	;volatile
   627  0095                     l87:	
   628  0095  0008               	return
   629  0096                     __end_of_MESSAGE:	
   630                           
   631                           	psect	text3
   632  0073                     __ptext3:	
   633 ;; *************** function _ANALOGICO *****************
   634 ;; Defined at:
   635 ;;		line 137 in file "MAESTRO.c"
   636 ;; Parameters:    Size  Location     Type
   637 ;;		None
   638 ;; Auto vars:     Size  Location     Type
   639 ;;		None
   640 ;; Return value:  Size  Location     Type
   641 ;;                  1    wreg      void 
   642 ;; Registers used:
   643 ;;		wreg
   644 ;; Tracked objects:
   645 ;;		On entry : 0/0
   646 ;;		On exit  : 0/0
   647 ;;		Unchanged: 0/0
   648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   649 ;;      Params:         0       0       0       0       0
   650 ;;      Locals:         0       0       0       0       0
   651 ;;      Temps:          1       0       0       0       0
   652 ;;      Totals:         1       0       0       0       0
   653 ;;Total ram usage:        1 bytes
   654 ;; Hardware stack levels used:    1
   655 ;; Hardware stack levels required when called:    1
   656 ;; This function calls:
   657 ;;		Nothing
   658 ;; This function is called by:
   659 ;;		_LOOP
   660 ;; This function uses a non-reentrant model
   661 ;;
   662                           
   663                           
   664                           ;psect for function _ANALOGICO
   665  0073                     _ANALOGICO:	
   666  0073                     l685:	
   667                           ;incstack = 0
   668                           ; Regs used in _ANALOGICO: [wreg]
   669                           
   670                           
   671                           ;MAESTRO.c: 138:     ADCON0bits.ADON = 1;
   672  0073  1283               	bcf	3,5	;RP0=0, select bank0
   673  0074  1303               	bcf	3,6	;RP1=0, select bank0
   674  0075  141F               	bsf	31,0	;volatile
   675  0076                     l687:	
   676                           
   677                           ;MAESTRO.c: 139:     _delay((unsigned long)((1)*(4000000/4000.0)));
   678  0076  30C7               	movlw	199
   679  0077  00F7               	movwf	??_ANALOGICO
   680  0078                     u47:	
   681  0078  2879               	nop2
   682  0079  0BF7               	decfsz	??_ANALOGICO,f
   683  007A  2878               	goto	u47
   684  007B  287C               	nop2
   685  007C  287D               	nop2
   686  007D                     l689:	
   687                           
   688                           ;MAESTRO.c: 140:         ADCON0bits.GO = 1;
   689  007D  1283               	bcf	3,5	;RP0=0, select bank0
   690  007E  1303               	bcf	3,6	;RP1=0, select bank0
   691  007F  149F               	bsf	31,1	;volatile
   692  0080                     l90:	
   693                           ;MAESTRO.c: 141:         while(ADCON0bits.GO);
   694                           
   695  0080  189F               	btfsc	31,1	;volatile
   696  0081  2883               	goto	u11
   697  0082  2884               	goto	u10
   698  0083                     u11:	
   699  0083  2880               	goto	l90
   700  0084                     u10:	
   701  0084                     l691:	
   702                           
   703                           ;MAESTRO.c: 143:             y = ADRESH;
   704  0084  081E               	movf	30,w	;volatile
   705  0085  00F7               	movwf	??_ANALOGICO
   706  0086  0877               	movf	??_ANALOGICO,w
   707  0087  00F0               	movwf	_y
   708  0088                     l93:	
   709  0088  0008               	return
   710  0089                     __end_of_ANALOGICO:	
   711                           
   712                           	psect	text4
   713  005A                     __ptext4:	
   714 ;; *************** function _ISR *****************
   715 ;; Defined at:
   716 ;;		line 42 in file "MAESTRO.c"
   717 ;; Parameters:    Size  Location     Type
   718 ;;		None
   719 ;; Auto vars:     Size  Location     Type
   720 ;;		None
   721 ;; Return value:  Size  Location     Type
   722 ;;                  1    wreg      void 
   723 ;; Registers used:
   724 ;;		wreg
   725 ;; Tracked objects:
   726 ;;		On entry : 0/0
   727 ;;		On exit  : 0/0
   728 ;;		Unchanged: 0/0
   729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   730 ;;      Params:         0       0       0       0       0
   731 ;;      Locals:         0       0       0       0       0
   732 ;;      Temps:          3       0       0       0       0
   733 ;;      Totals:         3       0       0       0       0
   734 ;;Total ram usage:        3 bytes
   735 ;; Hardware stack levels used:    1
   736 ;; This function calls:
   737 ;;		Nothing
   738 ;; This function is called by:
   739 ;;		Interrupt level 1
   740 ;; This function uses a non-reentrant model
   741 ;;
   742                           
   743                           
   744                           ;psect for function _ISR
   745  005A                     _ISR:	
   746  005A                     i1l705:	
   747                           
   748                           ;MAESTRO.c: 44:    if(PIR1bits.SSPIF==1 ){
   749  005A  1283               	bcf	3,5	;RP0=0, select bank0
   750  005B  1303               	bcf	3,6	;RP1=0, select bank0
   751  005C  1D8C               	btfss	12,3	;volatile
   752  005D  285F               	goto	u3_21
   753  005E  2860               	goto	u3_20
   754  005F                     u3_21:	
   755  005F  286C               	goto	i1l70
   756  0060                     u3_20:	
   757  0060                     i1l707:	
   758                           
   759                           ;MAESTRO.c: 45:         x= SSPBUF;
   760  0060  0813               	movf	19,w	;volatile
   761  0061  00F4               	movwf	??_ISR
   762  0062  0874               	movf	??_ISR,w
   763  0063  00F3               	movwf	_x
   764                           
   765                           ;MAESTRO.c: 46:         PORTB = x;
   766  0064  0873               	movf	_x,w
   767  0065  0086               	movwf	6	;volatile
   768  0066                     i1l709:	
   769                           
   770                           ;MAESTRO.c: 47:           SSPSTATbits.BF= 0;
   771  0066  1683               	bsf	3,5	;RP0=1, select bank1
   772  0067  1303               	bcf	3,6	;RP1=0, select bank1
   773  0068  1014               	bcf	20,0	;volatile
   774  0069                     i1l711:	
   775                           
   776                           ;MAESTRO.c: 48:           PIR1bits.SSPIF = 0;
   777  0069  1283               	bcf	3,5	;RP0=0, select bank0
   778  006A  1303               	bcf	3,6	;RP1=0, select bank0
   779  006B  118C               	bcf	12,3	;volatile
   780  006C                     i1l70:	
   781  006C  0876               	movf	??_ISR+2,w
   782  006D  008A               	movwf	10
   783  006E  0E75               	swapf	(??_ISR+1)^(0+4294967168),w
   784  006F  0083               	movwf	3
   785  0070  0EFE               	swapf	btemp,f
   786  0071  0E7E               	swapf	btemp,w
   787  0072  0009               	retfie
   788  0073                     __end_of_ISR:	
   789  007E                     btemp	set	126	;btemp
   790  007E                     wtemp0	set	126
   791                           
   792                           	psect	intentry
   793  0004                     __pintentry:	
   794                           ;incstack = 0
   795                           ; Regs used in _ISR: [wreg]
   796                           
   797  0004                     interrupt_function:	
   798  007E                     saved_w	set	btemp
   799  0004  00FE               	movwf	btemp
   800  0005  0E03               	swapf	3,w
   801  0006  00F5               	movwf	??_ISR+1
   802  0007  080A               	movf	10,w
   803  0008  00F6               	movwf	??_ISR+2
   804  0009  120A  118A  285A   	ljmp	_ISR


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _LOOP->_ANALOGICO

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                               _LOOP
 ---------------------------------------------------------------------------------
 (1) _LOOP                                                 0     0      0       0
                          _ANALOGICO
                            _MESSAGE
 ---------------------------------------------------------------------------------
 (2) _MESSAGE                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ANALOGICO                                            1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LOOP
     _ANALOGICO
     _MESSAGE

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      4       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       8       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       8      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Feb 19 20:42:51 2020

                       _x 0073                         _y 0070               __CFG_CP$OFF 0000  
             _SSPSTATbits 0094                        _BF 04A0                        l90 0080  
                      l75 0057                        l84 0089                        l93 0088  
                      l86 008F                        l78 0096                        l87 0095  
                      u10 0084                        u11 0083                        u20 008F  
                      u21 008E                        u47 0078        __size_of_ANALOGICO 0016  
                     l703 0096                       l721 001D                       l731 0028  
                     l723 001E                       l715 0017                       l741 0031  
                     l733 0029                       l725 001F                       l717 001B  
                     l751 0036                       l743 0032                       l735 002B  
                     l727 0023                       l719 001C                       l761 003B  
                     l753 0037                       l745 0033                       l737 002C  
                     l729 0024                       l691 0084                       l771 0042  
                     l763 003C                       l755 0038                       l747 0034  
                     l739 002E                       l685 0073                       l781 004F  
                     l773 0043                       l765 003F                       l757 0039  
                     l749 0035                       l687 0076                       l695 0089  
                     l783 0050                       l775 0046                       l767 0040  
                     l759 003A                       l689 007D                       l697 0092  
                     l785 0051                       l777 004B                       l769 0041  
                     l699 0094                       l787 0052                       l779 004E  
            __CFG_CPD$OFF 0000                       _ISR 005A              __CFG_LVP$OFF 0000  
                    ?_ISR 0074           __end_of_MESSAGE 0096                      _DATA 0071  
                    i1l70 006C                      _LOOP 0096                      u3_20 0060  
                    u3_21 005F              __CFG_WRT$OFF 0000                      _main 0017  
                    btemp 007E                      start 000C             __CFG_IESO$OFF 0000  
                   ??_ISR 0074                     ?_LOOP 0074                     ?_main 0074  
           __CFG_WDTE$OFF 0000                     _ANSEL 0188                     i1l711 0069  
                   i1l705 005A                     i1l707 0060                     i1l709 0066  
                   _PORTA 0005                     _PORTB 0006                     _PORTC 0007  
                   _PORTD 0008                     _PORTE 0009                     _TRISA 0085  
                   _TRISB 0086                     _TRISC 0087                     _TRISD 0088  
                   _TRISE 0089            __CFG_FCMEN$OFF 0000            __CFG_BOREN$OFF 0000  
                   pclath 000A         __end_of_ANALOGICO 0089                     status 0003  
                   wtemp0 007E              __end_of_LOOP 00A2            __CFG_MCLRE$OFF 0000  
         __initialization 000F              __end_of_main 005A                    ??_LOOP 0078  
                  ??_main 0078                 ??_MESSAGE 0077                    _ADRESH 001E  
                  _ANSELH 0189                    _SSPBUF 0013            __CFG_PWRTE$OFF 0000  
                  saved_w 007E   __end_of__initialization 0013            __pcstackCOMMON 0074  
              __pmaintext 0017                __pintentry 0004                   _BANDERA 0072  
                 _MESSAGE 0089                 _ANALOGICO 0073                   __ptext1 0096  
                 __ptext2 0089                   __ptext3 0073                   __ptext4 005A  
            __size_of_ISR 0019      end_of_initialization 0013                ?_ANALOGICO 0074  
               _PORTDbits 0008       start_initialization 000F               __end_of_ISR 0073  
__CFG_FOSC$INTRC_NOCLKOUT 0000               ??_ANALOGICO 0077                  ?_MESSAGE 0074  
             __pbssCOMMON 0070                 ___latbits 0002         interrupt_function 0004  
                _PIE1bits 008C                  _PIR1bits 000C                _ADCON0bits 001F  
              _ADCON1bits 009F          __size_of_MESSAGE 000D         __CFG_BOR4V$BOR40V 0000  
           __size_of_LOOP 000C             __size_of_main 0043                _INTCONbits 000B  
                intlevel1 0000                _OSCCONbits 008F                _SSPCONbits 0014  
