

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Feb 17 01:27:13 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	dabs	1,0x7E,2
    11  0000                     
    12                           ; Version 2.10
    13                           ; Generated 31/07/2019 GMT
    14                           ; 
    15                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC16F887 Definitions
    44                           ; 
    45                           ; SFR Addresses
    46  0000                     	;# 
    47  0001                     	;# 
    48  0002                     	;# 
    49  0003                     	;# 
    50  0004                     	;# 
    51  0005                     	;# 
    52  0006                     	;# 
    53  0007                     	;# 
    54  0008                     	;# 
    55  0009                     	;# 
    56  000A                     	;# 
    57  000B                     	;# 
    58  000C                     	;# 
    59  000D                     	;# 
    60  000E                     	;# 
    61  000E                     	;# 
    62  000F                     	;# 
    63  0010                     	;# 
    64  0011                     	;# 
    65  0012                     	;# 
    66  0013                     	;# 
    67  0014                     	;# 
    68  0015                     	;# 
    69  0015                     	;# 
    70  0016                     	;# 
    71  0017                     	;# 
    72  0018                     	;# 
    73  0019                     	;# 
    74  001A                     	;# 
    75  001B                     	;# 
    76  001B                     	;# 
    77  001C                     	;# 
    78  001D                     	;# 
    79  001E                     	;# 
    80  001F                     	;# 
    81  0081                     	;# 
    82  0085                     	;# 
    83  0086                     	;# 
    84  0087                     	;# 
    85  0088                     	;# 
    86  0089                     	;# 
    87  008C                     	;# 
    88  008D                     	;# 
    89  008E                     	;# 
    90  008F                     	;# 
    91  0090                     	;# 
    92  0091                     	;# 
    93  0092                     	;# 
    94  0093                     	;# 
    95  0093                     	;# 
    96  0093                     	;# 
    97  0094                     	;# 
    98  0095                     	;# 
    99  0096                     	;# 
   100  0097                     	;# 
   101  0098                     	;# 
   102  0099                     	;# 
   103  009A                     	;# 
   104  009B                     	;# 
   105  009C                     	;# 
   106  009D                     	;# 
   107  009E                     	;# 
   108  009F                     	;# 
   109  0105                     	;# 
   110  0107                     	;# 
   111  0108                     	;# 
   112  0109                     	;# 
   113  010C                     	;# 
   114  010C                     	;# 
   115  010D                     	;# 
   116  010E                     	;# 
   117  010F                     	;# 
   118  0185                     	;# 
   119  0187                     	;# 
   120  0188                     	;# 
   121  0189                     	;# 
   122  018C                     	;# 
   123  018D                     	;# 
   124  0000                     	;# 
   125  0001                     	;# 
   126  0002                     	;# 
   127  0003                     	;# 
   128  0004                     	;# 
   129  0005                     	;# 
   130  0006                     	;# 
   131  0007                     	;# 
   132  0008                     	;# 
   133  0009                     	;# 
   134  000A                     	;# 
   135  000B                     	;# 
   136  000C                     	;# 
   137  000D                     	;# 
   138  000E                     	;# 
   139  000E                     	;# 
   140  000F                     	;# 
   141  0010                     	;# 
   142  0011                     	;# 
   143  0012                     	;# 
   144  0013                     	;# 
   145  0014                     	;# 
   146  0015                     	;# 
   147  0015                     	;# 
   148  0016                     	;# 
   149  0017                     	;# 
   150  0018                     	;# 
   151  0019                     	;# 
   152  001A                     	;# 
   153  001B                     	;# 
   154  001B                     	;# 
   155  001C                     	;# 
   156  001D                     	;# 
   157  001E                     	;# 
   158  001F                     	;# 
   159  0081                     	;# 
   160  0085                     	;# 
   161  0086                     	;# 
   162  0087                     	;# 
   163  0088                     	;# 
   164  0089                     	;# 
   165  008C                     	;# 
   166  008D                     	;# 
   167  008E                     	;# 
   168  008F                     	;# 
   169  0090                     	;# 
   170  0091                     	;# 
   171  0092                     	;# 
   172  0093                     	;# 
   173  0093                     	;# 
   174  0093                     	;# 
   175  0094                     	;# 
   176  0095                     	;# 
   177  0096                     	;# 
   178  0097                     	;# 
   179  0098                     	;# 
   180  0099                     	;# 
   181  009A                     	;# 
   182  009B                     	;# 
   183  009C                     	;# 
   184  009D                     	;# 
   185  009E                     	;# 
   186  009F                     	;# 
   187  0105                     	;# 
   188  0107                     	;# 
   189  0108                     	;# 
   190  0109                     	;# 
   191  010C                     	;# 
   192  010C                     	;# 
   193  010D                     	;# 
   194  010E                     	;# 
   195  010F                     	;# 
   196  0185                     	;# 
   197  0187                     	;# 
   198  0188                     	;# 
   199  0189                     	;# 
   200  018C                     	;# 
   201  018D                     	;# 
   202  0013                     _SSPBUF	set	19
   203  0014                     _SSPCONbits	set	20
   204  001F                     _ADCON0bits	set	31
   205  0009                     _PORTE	set	9
   206  0008                     _PORTD	set	8
   207  0007                     _PORTC	set	7
   208  0006                     _PORTB	set	6
   209  0005                     _PORTA	set	5
   210  0094                     _SSPSTATbits	set	148
   211  009F                     _ADCON1bits	set	159
   212  0089                     _TRISE	set	137
   213  0088                     _TRISD	set	136
   214  0087                     _TRISC	set	135
   215  0086                     _TRISB	set	134
   216  0085                     _TRISA	set	133
   217  008F                     _OSCCONbits	set	143
   218  0189                     _ANSELH	set	393
   219  0188                     _ANSEL	set	392
   220                           
   221                           ; #config settings
   222  0000                     
   223                           	psect	cinit
   224  07F9                     start_initialization:	
   225  07F9                     __initialization:	
   226                           
   227                           ; Clear objects allocated to COMMON
   228  07F9  01F0               	clrf	__pbssCOMMON& (0+127)
   229  07FA  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   230  07FB  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   231  07FC                     end_of_initialization:	
   232                           ;End of C runtime variable initialization code
   233                           
   234  07FC                     __end_of__initialization:	
   235  07FC  0183               	clrf	3
   236  07FD  120A  118A  2FBB   	ljmp	_main	;jump to C main() function
   237                           
   238                           	psect	bssCOMMON
   239  0070                     __pbssCOMMON:	
   240  0070                     _DATA:	
   241  0070                     	ds	1
   242  0071                     _y:	
   243  0071                     	ds	1
   244  0072                     _x:	
   245  0072                     	ds	1
   246                           
   247                           	psect	cstackCOMMON
   248  0073                     __pcstackCOMMON:	
   249  0073                     ?_LOOP:	
   250  0073                     ?_RECEIVE:	
   251                           ; 1 bytes @ 0x0
   252                           
   253  0073                     ??_RECEIVE:	
   254                           ; 1 bytes @ 0x0
   255                           
   256  0073                     ?_main:	
   257                           ; 1 bytes @ 0x0
   258                           
   259                           
   260                           ; 1 bytes @ 0x0
   261  0073                     	ds	1
   262  0074                     ??_LOOP:	
   263  0074                     ??_main:	
   264                           ; 1 bytes @ 0x1
   265                           
   266                           
   267                           	psect	maintext
   268  07BB                     __pmaintext:	
   269                           ; 1 bytes @ 0x1
   270 ;;
   271 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   272 ;;
   273 ;; *************** function _main *****************
   274 ;; Defined at:
   275 ;;		line 41 in file "ESCLAVO.c"
   276 ;; Parameters:    Size  Location     Type
   277 ;;		None
   278 ;; Auto vars:     Size  Location     Type
   279 ;;		None
   280 ;; Return value:  Size  Location     Type
   281 ;;                  1    wreg      void 
   282 ;; Registers used:
   283 ;;		wreg, status,2, status,0, pclath, cstack
   284 ;; Tracked objects:
   285 ;;		On entry : B00/0
   286 ;;		On exit  : 0/0
   287 ;;		Unchanged: 0/0
   288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   289 ;;      Params:         0       0       0       0       0
   290 ;;      Locals:         0       0       0       0       0
   291 ;;      Temps:          0       0       0       0       0
   292 ;;      Totals:         0       0       0       0       0
   293 ;;Total ram usage:        0 bytes
   294 ;; Hardware stack levels required when called:    2
   295 ;; This function calls:
   296 ;;		_LOOP
   297 ;; This function is called by:
   298 ;;		Startup code after reset
   299 ;; This function uses a non-reentrant model
   300 ;;
   301                           
   302                           
   303                           ;psect for function _main
   304  07BB                     _main:	
   305  07BB                     l665:	
   306                           ;incstack = 0
   307                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   308                           
   309                           
   310                           ;ESCLAVO.c: 44:     OSCCONbits.IRCF = 0b110;
   311  07BB  1683               	bsf	3,5	;RP0=1, select bank1
   312  07BC  1303               	bcf	3,6	;RP1=0, select bank1
   313  07BD  080F               	movf	15,w	;volatile
   314  07BE  398F               	andlw	-113
   315  07BF  3860               	iorlw	96
   316  07C0  008F               	movwf	15	;volatile
   317  07C1                     l667:	
   318                           
   319                           ;ESCLAVO.c: 45:     OSCCONbits.OSTS= 0;
   320  07C1  118F               	bcf	15,3	;volatile
   321  07C2                     l669:	
   322                           
   323                           ;ESCLAVO.c: 46:     OSCCONbits.HTS = 0;
   324  07C2  110F               	bcf	15,2	;volatile
   325  07C3                     l671:	
   326                           
   327                           ;ESCLAVO.c: 47:     OSCCONbits.LTS = 0;
   328  07C3  108F               	bcf	15,1	;volatile
   329  07C4                     l673:	
   330                           
   331                           ;ESCLAVO.c: 48:     OSCCONbits.SCS = 1;
   332  07C4  140F               	bsf	15,0	;volatile
   333  07C5                     l675:	
   334                           
   335                           ;ESCLAVO.c: 52:     ANSEL = 0b00000001;
   336  07C5  3001               	movlw	1
   337  07C6  1683               	bsf	3,5	;RP0=1, select bank3
   338  07C7  1703               	bsf	3,6	;RP1=1, select bank3
   339  07C8  0088               	movwf	8	;volatile
   340  07C9                     l677:	
   341                           
   342                           ;ESCLAVO.c: 53:     ANSELH = 0b00000000;
   343  07C9  0189               	clrf	9	;volatile
   344  07CA                     l679:	
   345                           
   346                           ;ESCLAVO.c: 55:     TRISA = 0b00100001;
   347  07CA  3021               	movlw	33
   348  07CB  1683               	bsf	3,5	;RP0=1, select bank1
   349  07CC  1303               	bcf	3,6	;RP1=0, select bank1
   350  07CD  0085               	movwf	5	;volatile
   351  07CE                     l681:	
   352                           
   353                           ;ESCLAVO.c: 56:     TRISB = 0b00000000;
   354  07CE  0186               	clrf	6	;volatile
   355  07CF                     l683:	
   356                           
   357                           ;ESCLAVO.c: 57:     TRISC = 0b00011000;
   358  07CF  3018               	movlw	24
   359  07D0  0087               	movwf	7	;volatile
   360  07D1                     l685:	
   361                           
   362                           ;ESCLAVO.c: 58:     TRISD = 0b00000000;
   363  07D1  0188               	clrf	8	;volatile
   364  07D2                     l687:	
   365                           
   366                           ;ESCLAVO.c: 59:     TRISE = 0b0000;
   367  07D2  0189               	clrf	9	;volatile
   368  07D3                     l689:	
   369                           
   370                           ;ESCLAVO.c: 61:     PORTA = 0;
   371  07D3  1283               	bcf	3,5	;RP0=0, select bank0
   372  07D4  1303               	bcf	3,6	;RP1=0, select bank0
   373  07D5  0185               	clrf	5	;volatile
   374  07D6                     l691:	
   375                           
   376                           ;ESCLAVO.c: 62:     PORTB = 0;
   377  07D6  0186               	clrf	6	;volatile
   378  07D7                     l693:	
   379                           
   380                           ;ESCLAVO.c: 63:     PORTC = 0;
   381  07D7  0187               	clrf	7	;volatile
   382  07D8                     l695:	
   383                           
   384                           ;ESCLAVO.c: 64:     PORTD = 0;
   385  07D8  0188               	clrf	8	;volatile
   386  07D9                     l697:	
   387                           
   388                           ;ESCLAVO.c: 65:     PORTE = 0;
   389  07D9  0189               	clrf	9	;volatile
   390  07DA                     l699:	
   391                           
   392                           ;ESCLAVO.c: 68:     ADCON0bits.ADCS0 = 1;
   393  07DA  171F               	bsf	31,6	;volatile
   394  07DB                     l701:	
   395                           
   396                           ;ESCLAVO.c: 69:     ADCON0bits.ADCS1 = 0;
   397  07DB  139F               	bcf	31,7	;volatile
   398  07DC                     l703:	
   399                           
   400                           ;ESCLAVO.c: 70:     ADCON0bits.CHS0 = 0;
   401  07DC  111F               	bcf	31,2	;volatile
   402  07DD                     l705:	
   403                           
   404                           ;ESCLAVO.c: 71:     ADCON0bits.CHS1 = 0;
   405  07DD  119F               	bcf	31,3	;volatile
   406  07DE                     l707:	
   407                           
   408                           ;ESCLAVO.c: 72:     ADCON0bits.CHS2 = 0;
   409  07DE  121F               	bcf	31,4	;volatile
   410  07DF                     l709:	
   411                           
   412                           ;ESCLAVO.c: 73:     ADCON0bits.CHS3 = 0;
   413  07DF  129F               	bcf	31,5	;volatile
   414  07E0                     l711:	
   415                           
   416                           ;ESCLAVO.c: 74:     ADCON0bits.ADON = 1;
   417  07E0  141F               	bsf	31,0	;volatile
   418  07E1                     l713:	
   419                           
   420                           ;ESCLAVO.c: 75:     ADCON1bits.ADFM = 0;
   421  07E1  1683               	bsf	3,5	;RP0=1, select bank1
   422  07E2  1303               	bcf	3,6	;RP1=0, select bank1
   423  07E3  139F               	bcf	31,7	;volatile
   424  07E4                     l715:	
   425                           
   426                           ;ESCLAVO.c: 76:     ADCON1bits.VCFG0 = 0;
   427  07E4  121F               	bcf	31,4	;volatile
   428  07E5                     l717:	
   429                           
   430                           ;ESCLAVO.c: 77:     ADCON1bits.VCFG1 = 0;
   431  07E5  129F               	bcf	31,5	;volatile
   432  07E6                     l719:	
   433                           
   434                           ;ESCLAVO.c: 80:     SSPSTATbits.SMP = 0;
   435  07E6  1394               	bcf	20,7	;volatile
   436  07E7                     l721:	
   437                           
   438                           ;ESCLAVO.c: 81:     SSPSTATbits.CKE = 0;
   439  07E7  1314               	bcf	20,6	;volatile
   440  07E8                     l723:	
   441                           
   442                           ;ESCLAVO.c: 82:     SSPCONbits.SSPEN = 1;
   443  07E8  1283               	bcf	3,5	;RP0=0, select bank0
   444  07E9  1303               	bcf	3,6	;RP1=0, select bank0
   445  07EA  1694               	bsf	20,5	;volatile
   446  07EB                     l725:	
   447                           
   448                           ;ESCLAVO.c: 83:     SSPCONbits.CKP = 1;
   449  07EB  1614               	bsf	20,4	;volatile
   450  07EC                     l727:	
   451                           
   452                           ;ESCLAVO.c: 84:     SSPCONbits.SSPM = 0b0100;
   453  07EC  0814               	movf	20,w	;volatile
   454  07ED  39F0               	andlw	-16
   455  07EE  3804               	iorlw	4
   456  07EF  0094               	movwf	20	;volatile
   457  07F0                     l729:	
   458                           
   459                           ;ESCLAVO.c: 86:     y = 0;
   460  07F0  01F1               	clrf	_y
   461  07F1                     l731:	
   462                           
   463                           ;ESCLAVO.c: 87:     LOOP();
   464  07F1  120A  118A  27A0  120A  118A  	fcall	_LOOP
   465  07F6                     l51:	
   466  07F6  120A  118A  2800   	ljmp	start
   467  07F9                     __end_of_main:	
   468                           
   469                           	psect	text1
   470  07A0                     __ptext1:	
   471 ;; *************** function _LOOP *****************
   472 ;; Defined at:
   473 ;;		line 89 in file "ESCLAVO.c"
   474 ;; Parameters:    Size  Location     Type
   475 ;;		None
   476 ;; Auto vars:     Size  Location     Type
   477 ;;		None
   478 ;; Return value:  Size  Location     Type
   479 ;;                  1    wreg      void 
   480 ;; Registers used:
   481 ;;		wreg, status,2, status,0, pclath, cstack
   482 ;; Tracked objects:
   483 ;;		On entry : 0/0
   484 ;;		On exit  : 0/0
   485 ;;		Unchanged: 0/0
   486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   487 ;;      Params:         0       0       0       0       0
   488 ;;      Locals:         0       0       0       0       0
   489 ;;      Temps:          0       0       0       0       0
   490 ;;      Totals:         0       0       0       0       0
   491 ;;Total ram usage:        0 bytes
   492 ;; Hardware stack levels used:    1
   493 ;; Hardware stack levels required when called:    1
   494 ;; This function calls:
   495 ;;		_RECEIVE
   496 ;; This function is called by:
   497 ;;		_main
   498 ;; This function uses a non-reentrant model
   499 ;;
   500                           
   501                           
   502                           ;psect for function _LOOP
   503  07A0                     _LOOP:	
   504  07A0                     l54:	
   505                           ;incstack = 0
   506                           ; Regs used in _LOOP: [wreg+status,2+status,0+pclath+cstack]
   507                           ;ESCLAVO.c: 90:     while(1){
   508                           
   509  07A0                     l661:	
   510                           
   511                           ;ESCLAVO.c: 92:     RECEIVE();
   512  07A0  120A  118A  27AB  120A  118A  	fcall	_RECEIVE
   513  07A5                     l663:	
   514                           
   515                           ;ESCLAVO.c: 94:     PORTB = y;
   516  07A5  0871               	movf	_y,w
   517  07A6  1283               	bcf	3,5	;RP0=0, select bank0
   518  07A7  1303               	bcf	3,6	;RP1=0, select bank0
   519  07A8  0086               	movwf	6	;volatile
   520  07A9  2FA0               	goto	l54
   521  07AA  0008               	return
   522  07AB                     __end_of_LOOP:	
   523                           
   524                           	psect	text2
   525  07AB                     __ptext2:	
   526 ;; *************** function _RECEIVE *****************
   527 ;; Defined at:
   528 ;;		line 110 in file "ESCLAVO.c"
   529 ;; Parameters:    Size  Location     Type
   530 ;;		None
   531 ;; Auto vars:     Size  Location     Type
   532 ;;		None
   533 ;; Return value:  Size  Location     Type
   534 ;;                  1    wreg      void 
   535 ;; Registers used:
   536 ;;		wreg
   537 ;; Tracked objects:
   538 ;;		On entry : 0/0
   539 ;;		On exit  : 0/0
   540 ;;		Unchanged: 0/0
   541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   542 ;;      Params:         0       0       0       0       0
   543 ;;      Locals:         0       0       0       0       0
   544 ;;      Temps:          1       0       0       0       0
   545 ;;      Totals:         1       0       0       0       0
   546 ;;Total ram usage:        1 bytes
   547 ;; Hardware stack levels used:    1
   548 ;; This function calls:
   549 ;;		Nothing
   550 ;; This function is called by:
   551 ;;		_LOOP
   552 ;; This function uses a non-reentrant model
   553 ;;
   554                           
   555                           
   556                           ;psect for function _RECEIVE
   557  07AB                     _RECEIVE:	
   558  07AB                     l653:	
   559                           ;incstack = 0
   560                           ; Regs used in _RECEIVE: [wreg]
   561                           
   562                           
   563                           ;ESCLAVO.c: 111:     if(SSPSTATbits.BF==1){
   564  07AB  1683               	bsf	3,5	;RP0=1, select bank1
   565  07AC  1303               	bcf	3,6	;RP1=0, select bank1
   566  07AD  1C14               	btfss	20,0	;volatile
   567  07AE  2FB0               	goto	u11
   568  07AF  2FB1               	goto	u10
   569  07B0                     u11:	
   570  07B0  2FBA               	goto	l61
   571  07B1                     u10:	
   572  07B1                     l655:	
   573                           
   574                           ;ESCLAVO.c: 112:           y= SSPBUF;
   575  07B1  1283               	bcf	3,5	;RP0=0, select bank0
   576  07B2  1303               	bcf	3,6	;RP1=0, select bank0
   577  07B3  0813               	movf	19,w	;volatile
   578  07B4  00F3               	movwf	??_RECEIVE
   579  07B5  0873               	movf	??_RECEIVE,w
   580  07B6  00F1               	movwf	_y
   581  07B7                     l657:	
   582                           
   583                           ;ESCLAVO.c: 113:           SSPSTATbits.BF=0;
   584  07B7  1683               	bsf	3,5	;RP0=1, select bank1
   585  07B8  1303               	bcf	3,6	;RP1=0, select bank1
   586  07B9  1014               	bcf	20,0	;volatile
   587  07BA                     l61:	
   588  07BA  0008               	return
   589  07BB                     __end_of_RECEIVE:	
   590  007E                     btemp	set	126	;btemp
   591  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      1       4
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _LOOP->_RECEIVE

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                               _LOOP
 ---------------------------------------------------------------------------------
 (1) _LOOP                                                 0     0      0       0
                            _RECEIVE
 ---------------------------------------------------------------------------------
 (2) _RECEIVE                                              1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LOOP
     _RECEIVE

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      1       4       1       28.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       4       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       4      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Feb 17 01:27:13 2020

                       _x 0072                         _y 0071               __CFG_CP$OFF 0000  
             _SSPSTATbits 0094                        l51 07F6                        l61 07BA  
                      l54 07A0                        u10 07B1                        u11 07B0  
                     l701 07DB                       l711 07E0                       l703 07DC  
                     l721 07E7                       l713 07E1                       l705 07DD  
                     l731 07F1                       l723 07E8                       l715 07E4  
                     l707 07DE                       l653 07AB                       l661 07A0  
                     l725 07EB                       l717 07E5                       l709 07DF  
                     l655 07B1                       l663 07A5                       l727 07EC  
                     l719 07E6                       l671 07C3                       l657 07B7  
                     l729 07F0                       l681 07CE                       l673 07C4  
                     l665 07BB                       l691 07D6                       l683 07CF  
                     l675 07C5                       l667 07C1                       l693 07D7  
                     l685 07D1                       l677 07C9                       l669 07C2  
                     l695 07D8                       l687 07D2                       l679 07CA  
                     l697 07D9                       l689 07D3                       l699 07DA  
            __CFG_CPD$OFF 0000              __CFG_LVP$OFF 0000           __end_of_RECEIVE 07BB  
                    _DATA 0070                      _LOOP 07A0              __CFG_WRT$OFF 0000  
                    _main 07BB                      btemp 007E                      start 0000  
           __CFG_IESO$OFF 0000                     ?_LOOP 0073                     ?_main 0073  
           __CFG_WDTE$OFF 0000                     _ANSEL 0188                     _PORTA 0005  
                   _PORTB 0006                     _PORTC 0007                     _PORTD 0008  
                   _PORTE 0009                     _TRISA 0085                     _TRISB 0086  
                   _TRISC 0087                     _TRISD 0088                     _TRISE 0089  
          __CFG_FCMEN$OFF 0000            __CFG_BOREN$OFF 0000                     status 0003  
                   wtemp0 007E              __end_of_LOOP 07AB            __CFG_MCLRE$OFF 0000  
         __initialization 07F9              __end_of_main 07F9                    ??_LOOP 0074  
                  ??_main 0074                 ??_RECEIVE 0073                    _ANSELH 0189  
                  _SSPBUF 0013            __CFG_PWRTE$OFF 0000   __end_of__initialization 07FC  
          __pcstackCOMMON 0073                __pmaintext 07BB                   _RECEIVE 07AB  
                 __ptext1 07A0                   __ptext2 07AB      end_of_initialization 07FC  
     start_initialization 07F9  __CFG_FOSC$INTRC_NOCLKOUT 0000                  ?_RECEIVE 0073  
             __pbssCOMMON 0070                 ___latbits 0002                _ADCON0bits 001F  
              _ADCON1bits 009F          __size_of_RECEIVE 0010         __CFG_BOR4V$BOR40V 0000  
           __size_of_LOOP 000B             __size_of_main 003E                _OSCCONbits 008F  
              _SSPCONbits 0014  
