

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Feb 20 16:39:04 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.10
    15                           ; Generated 31/07/2019 GMT
    16                           ; 
    17                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F887 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  008F                     	;# 
    93  0090                     	;# 
    94  0091                     	;# 
    95  0092                     	;# 
    96  0093                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0094                     	;# 
   100  0095                     	;# 
   101  0096                     	;# 
   102  0097                     	;# 
   103  0098                     	;# 
   104  0099                     	;# 
   105  009A                     	;# 
   106  009B                     	;# 
   107  009C                     	;# 
   108  009D                     	;# 
   109  009E                     	;# 
   110  009F                     	;# 
   111  0105                     	;# 
   112  0107                     	;# 
   113  0108                     	;# 
   114  0109                     	;# 
   115  010C                     	;# 
   116  010C                     	;# 
   117  010D                     	;# 
   118  010E                     	;# 
   119  010F                     	;# 
   120  0185                     	;# 
   121  0187                     	;# 
   122  0188                     	;# 
   123  0189                     	;# 
   124  018C                     	;# 
   125  018D                     	;# 
   126  0000                     	;# 
   127  0001                     	;# 
   128  0002                     	;# 
   129  0003                     	;# 
   130  0004                     	;# 
   131  0005                     	;# 
   132  0006                     	;# 
   133  0007                     	;# 
   134  0008                     	;# 
   135  0009                     	;# 
   136  000A                     	;# 
   137  000B                     	;# 
   138  000C                     	;# 
   139  000D                     	;# 
   140  000E                     	;# 
   141  000E                     	;# 
   142  000F                     	;# 
   143  0010                     	;# 
   144  0011                     	;# 
   145  0012                     	;# 
   146  0013                     	;# 
   147  0014                     	;# 
   148  0015                     	;# 
   149  0015                     	;# 
   150  0016                     	;# 
   151  0017                     	;# 
   152  0018                     	;# 
   153  0019                     	;# 
   154  001A                     	;# 
   155  001B                     	;# 
   156  001B                     	;# 
   157  001C                     	;# 
   158  001D                     	;# 
   159  001E                     	;# 
   160  001F                     	;# 
   161  0081                     	;# 
   162  0085                     	;# 
   163  0086                     	;# 
   164  0087                     	;# 
   165  0088                     	;# 
   166  0089                     	;# 
   167  008C                     	;# 
   168  008D                     	;# 
   169  008E                     	;# 
   170  008F                     	;# 
   171  0090                     	;# 
   172  0091                     	;# 
   173  0092                     	;# 
   174  0093                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0094                     	;# 
   178  0095                     	;# 
   179  0096                     	;# 
   180  0097                     	;# 
   181  0098                     	;# 
   182  0099                     	;# 
   183  009A                     	;# 
   184  009B                     	;# 
   185  009C                     	;# 
   186  009D                     	;# 
   187  009E                     	;# 
   188  009F                     	;# 
   189  0105                     	;# 
   190  0107                     	;# 
   191  0108                     	;# 
   192  0109                     	;# 
   193  010C                     	;# 
   194  010C                     	;# 
   195  010D                     	;# 
   196  010E                     	;# 
   197  010F                     	;# 
   198  0185                     	;# 
   199  0187                     	;# 
   200  0188                     	;# 
   201  0189                     	;# 
   202  018C                     	;# 
   203  018D                     	;# 
   204  0019                     _TXREG	set	25
   205  001A                     _RCREG	set	26
   206  001E                     _ADRESH	set	30
   207  0018                     _RCSTAbits	set	24
   208  001F                     _ADCON0bits	set	31
   209  0009                     _PORTE	set	9
   210  0008                     _PORTD	set	8
   211  0007                     _PORTC	set	7
   212  0006                     _PORTB	set	6
   213  0005                     _PORTA	set	5
   214  0065                     _RCIF	set	101
   215  0098                     _TXSTAbits	set	152
   216  0099                     _SPBRG	set	153
   217  0089                     _TRISE	set	137
   218  0088                     _TRISD	set	136
   219  0087                     _TRISC	set	135
   220  0086                     _TRISB	set	134
   221  0085                     _TRISA	set	133
   222  008F                     _OSCCONbits	set	143
   223  04C1                     _TRMT	set	1217
   224  0189                     _ANSELH	set	393
   225  0188                     _ANSEL	set	392
   226                           
   227                           ; #config settings
   228  0000                     
   229                           	psect	cinit
   230  07F9                     start_initialization:	
   231  07F9                     __initialization:	
   232                           
   233                           ; Clear objects allocated to COMMON
   234  07F9  01F0               	clrf	__pbssCOMMON& (0+127)
   235  07FA  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   236  07FB  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   237  07FC                     end_of_initialization:	
   238                           ;End of C runtime variable initialization code
   239                           
   240  07FC                     __end_of__initialization:	
   241  07FC  0183               	clrf	3
   242  07FD  120A  118A  2FC2   	ljmp	_main	;jump to C main() function
   243                           
   244                           	psect	bssCOMMON
   245  0070                     __pbssCOMMON:	
   246  0070                     _z:	
   247  0070                     	ds	1
   248  0071                     _x:	
   249  0071                     	ds	1
   250  0072                     _y:	
   251  0072                     	ds	1
   252                           
   253                           	psect	cstackCOMMON
   254  0073                     __pcstackCOMMON:	
   255  0073                     ?_LOOP:	
   256  0073                     ?_ANALOGICO:	
   257                           ; 1 bytes @ 0x0
   258                           
   259  0073                     ??_ANALOGICO:	
   260                           ; 1 bytes @ 0x0
   261                           
   262  0073                     ?_TRANSMIT:	
   263                           ; 1 bytes @ 0x0
   264                           
   265  0073                     ??_TRANSMIT:	
   266                           ; 1 bytes @ 0x0
   267                           
   268  0073                     ?_RECEIVE:	
   269                           ; 1 bytes @ 0x0
   270                           
   271  0073                     ??_RECEIVE:	
   272                           ; 1 bytes @ 0x0
   273                           
   274  0073                     ?_main:	
   275                           ; 1 bytes @ 0x0
   276                           
   277                           
   278                           ; 1 bytes @ 0x0
   279  0073                     	ds	1
   280  0074                     ??_LOOP:	
   281  0074                     ??_main:	
   282                           ; 1 bytes @ 0x1
   283                           
   284                           
   285                           	psect	maintext
   286  07C2                     __pmaintext:	
   287                           ; 1 bytes @ 0x1
   288 ;;
   289 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   290 ;;
   291 ;; *************** function _main *****************
   292 ;; Defined at:
   293 ;;		line 42 in file "EUSARTC.c"
   294 ;; Parameters:    Size  Location     Type
   295 ;;		None
   296 ;; Auto vars:     Size  Location     Type
   297 ;;		None
   298 ;; Return value:  Size  Location     Type
   299 ;;                  1    wreg      void 
   300 ;; Registers used:
   301 ;;		wreg, status,2, status,0, pclath, cstack
   302 ;; Tracked objects:
   303 ;;		On entry : B00/0
   304 ;;		On exit  : 0/0
   305 ;;		Unchanged: 0/0
   306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   307 ;;      Params:         0       0       0       0       0
   308 ;;      Locals:         0       0       0       0       0
   309 ;;      Temps:          0       0       0       0       0
   310 ;;      Totals:         0       0       0       0       0
   311 ;;Total ram usage:        0 bytes
   312 ;; Hardware stack levels required when called:    2
   313 ;; This function calls:
   314 ;;		_LOOP
   315 ;; This function is called by:
   316 ;;		Startup code after reset
   317 ;; This function uses a non-reentrant model
   318 ;;
   319                           
   320                           
   321                           ;psect for function _main
   322  07C2                     _main:	
   323  07C2                     l709:	
   324                           ;incstack = 0
   325                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   326                           
   327                           
   328                           ;EUSARTC.c: 45:     OSCCONbits.IRCF = 0b110;
   329  07C2  1683               	bsf	3,5	;RP0=1, select bank1
   330  07C3  1303               	bcf	3,6	;RP1=0, select bank1
   331  07C4  080F               	movf	15,w	;volatile
   332  07C5  398F               	andlw	-113
   333  07C6  3860               	iorlw	96
   334  07C7  008F               	movwf	15	;volatile
   335  07C8                     l711:	
   336                           
   337                           ;EUSARTC.c: 46:     OSCCONbits.OSTS= 0;
   338  07C8  118F               	bcf	15,3	;volatile
   339  07C9                     l713:	
   340                           
   341                           ;EUSARTC.c: 47:     OSCCONbits.HTS = 0;
   342  07C9  110F               	bcf	15,2	;volatile
   343  07CA                     l715:	
   344                           
   345                           ;EUSARTC.c: 48:     OSCCONbits.LTS = 0;
   346  07CA  108F               	bcf	15,1	;volatile
   347  07CB                     l717:	
   348                           
   349                           ;EUSARTC.c: 49:     OSCCONbits.SCS = 1;
   350  07CB  140F               	bsf	15,0	;volatile
   351  07CC                     l719:	
   352                           
   353                           ;EUSARTC.c: 53:     ANSEL = 0b00100001;
   354  07CC  3021               	movlw	33
   355  07CD  1683               	bsf	3,5	;RP0=1, select bank3
   356  07CE  1703               	bsf	3,6	;RP1=1, select bank3
   357  07CF  0088               	movwf	8	;volatile
   358  07D0                     l721:	
   359                           
   360                           ;EUSARTC.c: 54:     ANSELH = 0b00000000;
   361  07D0  0189               	clrf	9	;volatile
   362  07D1                     l723:	
   363                           
   364                           ;EUSARTC.c: 56:     TRISA = 0b00100001;
   365  07D1  3021               	movlw	33
   366  07D2  1683               	bsf	3,5	;RP0=1, select bank1
   367  07D3  1303               	bcf	3,6	;RP1=0, select bank1
   368  07D4  0085               	movwf	5	;volatile
   369  07D5                     l725:	
   370                           
   371                           ;EUSARTC.c: 57:     TRISB = 0b00000000;
   372  07D5  0186               	clrf	6	;volatile
   373  07D6                     l727:	
   374                           
   375                           ;EUSARTC.c: 58:     TRISC = 0b10011000;
   376  07D6  3098               	movlw	152
   377  07D7  0087               	movwf	7	;volatile
   378  07D8                     l729:	
   379                           
   380                           ;EUSARTC.c: 59:     TRISD = 0b00000000;
   381  07D8  0188               	clrf	8	;volatile
   382  07D9                     l731:	
   383                           
   384                           ;EUSARTC.c: 60:     TRISE = 0b0001;
   385  07D9  3001               	movlw	1
   386  07DA  0089               	movwf	9	;volatile
   387  07DB                     l733:	
   388                           
   389                           ;EUSARTC.c: 62:     PORTA = 0;
   390  07DB  1283               	bcf	3,5	;RP0=0, select bank0
   391  07DC  1303               	bcf	3,6	;RP1=0, select bank0
   392  07DD  0185               	clrf	5	;volatile
   393  07DE                     l735:	
   394                           
   395                           ;EUSARTC.c: 63:     PORTB = 0;
   396  07DE  0186               	clrf	6	;volatile
   397  07DF                     l737:	
   398                           
   399                           ;EUSARTC.c: 64:     PORTC = 0;
   400  07DF  0187               	clrf	7	;volatile
   401  07E0                     l739:	
   402                           
   403                           ;EUSARTC.c: 65:     PORTD = 0;
   404  07E0  0188               	clrf	8	;volatile
   405  07E1                     l741:	
   406                           
   407                           ;EUSARTC.c: 66:     PORTE = 0;
   408  07E1  0189               	clrf	9	;volatile
   409  07E2                     l743:	
   410                           
   411                           ;EUSARTC.c: 69:     ADCON0bits.ADCS0 = 1;
   412  07E2  171F               	bsf	31,6	;volatile
   413  07E3                     l745:	
   414                           
   415                           ;EUSARTC.c: 70:     ADCON0bits.ADCS1 = 0;
   416  07E3  139F               	bcf	31,7	;volatile
   417  07E4                     l747:	
   418                           
   419                           ;EUSARTC.c: 74:  SPBRG = 25;
   420  07E4  3019               	movlw	25
   421  07E5  1683               	bsf	3,5	;RP0=1, select bank1
   422  07E6  1303               	bcf	3,6	;RP1=0, select bank1
   423  07E7  0099               	movwf	25	;volatile
   424  07E8                     l749:	
   425                           
   426                           ;EUSARTC.c: 76:     TXSTAbits.BRGH = 1;
   427  07E8  1518               	bsf	24,2	;volatile
   428  07E9                     l751:	
   429                           
   430                           ;EUSARTC.c: 77:     TXSTAbits.TXEN = 1;
   431  07E9  1698               	bsf	24,5	;volatile
   432  07EA                     l753:	
   433                           
   434                           ;EUSARTC.c: 78:     TXSTAbits.SYNC = 0;
   435  07EA  1218               	bcf	24,4	;volatile
   436  07EB                     l755:	
   437                           
   438                           ;EUSARTC.c: 79:     TXSTAbits.TX9 = 0;
   439  07EB  1318               	bcf	24,6	;volatile
   440  07EC                     l757:	
   441                           
   442                           ;EUSARTC.c: 81:     RCSTAbits.CREN = 1;
   443  07EC  1283               	bcf	3,5	;RP0=0, select bank0
   444  07ED  1303               	bcf	3,6	;RP1=0, select bank0
   445  07EE  1618               	bsf	24,4	;volatile
   446  07EF                     l759:	
   447                           
   448                           ;EUSARTC.c: 82:     RCSTAbits.SPEN = 1;
   449  07EF  1798               	bsf	24,7	;volatile
   450  07F0                     l761:	
   451                           
   452                           ;EUSARTC.c: 83:     RCSTAbits.RX9 = 0;
   453  07F0  1318               	bcf	24,6	;volatile
   454  07F1                     l763:	
   455                           
   456                           ;EUSARTC.c: 85:     LOOP();
   457  07F1  120A  118A  2797  120A  118A  	fcall	_LOOP
   458  07F6                     l65:	
   459  07F6  120A  118A  2800   	ljmp	start
   460  07F9                     __end_of_main:	
   461                           
   462                           	psect	text1
   463  0797                     __ptext1:	
   464 ;; *************** function _LOOP *****************
   465 ;; Defined at:
   466 ;;		line 88 in file "EUSARTC.c"
   467 ;; Parameters:    Size  Location     Type
   468 ;;		None
   469 ;; Auto vars:     Size  Location     Type
   470 ;;		None
   471 ;; Return value:  Size  Location     Type
   472 ;;                  1    wreg      void 
   473 ;; Registers used:
   474 ;;		wreg, status,2, status,0, pclath, cstack
   475 ;; Tracked objects:
   476 ;;		On entry : 0/0
   477 ;;		On exit  : 0/0
   478 ;;		Unchanged: 0/0
   479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   480 ;;      Params:         0       0       0       0       0
   481 ;;      Locals:         0       0       0       0       0
   482 ;;      Temps:          0       0       0       0       0
   483 ;;      Totals:         0       0       0       0       0
   484 ;;Total ram usage:        0 bytes
   485 ;; Hardware stack levels used:    1
   486 ;; Hardware stack levels required when called:    1
   487 ;; This function calls:
   488 ;;		_ANALOGICO
   489 ;;		_RECEIVE
   490 ;;		_TRANSMIT
   491 ;; This function is called by:
   492 ;;		_main
   493 ;; This function uses a non-reentrant model
   494 ;;
   495                           
   496                           
   497                           ;psect for function _LOOP
   498  0797                     _LOOP:	
   499  0797                     l68:	
   500                           ;incstack = 0
   501                           ; Regs used in _LOOP: [wreg+status,2+status,0+pclath+cstack]
   502                           ;EUSARTC.c: 89:     while(1){
   503                           
   504  0797                     l705:	
   505                           
   506                           ;EUSARTC.c: 91:         ANALOGICO();
   507  0797  120A  118A  27AC  120A  118A  	fcall	_ANALOGICO
   508                           
   509                           ;EUSARTC.c: 92:         TRANSMIT();
   510  079C  120A  118A  278C  120A  118A  	fcall	_TRANSMIT
   511                           
   512                           ;EUSARTC.c: 93:         RECEIVE();
   513  07A1  120A  118A  2781  120A  118A  	fcall	_RECEIVE
   514  07A6                     l707:	
   515                           
   516                           ;EUSARTC.c: 94:         PORTB = x;
   517  07A6  0871               	movf	_x,w
   518  07A7  1283               	bcf	3,5	;RP0=0, select bank0
   519  07A8  1303               	bcf	3,6	;RP1=0, select bank0
   520  07A9  0086               	movwf	6	;volatile
   521  07AA  2F97               	goto	l68
   522  07AB  0008               	return
   523  07AC                     __end_of_LOOP:	
   524                           
   525                           	psect	text2
   526  078C                     __ptext2:	
   527 ;; *************** function _TRANSMIT *****************
   528 ;; Defined at:
   529 ;;		line 119 in file "EUSARTC.c"
   530 ;; Parameters:    Size  Location     Type
   531 ;;		None
   532 ;; Auto vars:     Size  Location     Type
   533 ;;		None
   534 ;; Return value:  Size  Location     Type
   535 ;;                  1    wreg      void 
   536 ;; Registers used:
   537 ;;		wreg
   538 ;; Tracked objects:
   539 ;;		On entry : 0/0
   540 ;;		On exit  : 0/0
   541 ;;		Unchanged: 0/0
   542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   543 ;;      Params:         0       0       0       0       0
   544 ;;      Locals:         0       0       0       0       0
   545 ;;      Temps:          0       0       0       0       0
   546 ;;      Totals:         0       0       0       0       0
   547 ;;Total ram usage:        0 bytes
   548 ;; Hardware stack levels used:    1
   549 ;; This function calls:
   550 ;;		Nothing
   551 ;; This function is called by:
   552 ;;		_LOOP
   553 ;; This function uses a non-reentrant model
   554 ;;
   555                           
   556                           
   557                           ;psect for function _TRANSMIT
   558  078C                     _TRANSMIT:	
   559  078C                     l693:	
   560                           ;incstack = 0
   561                           ; Regs used in _TRANSMIT: [wreg]
   562                           
   563  078C                     l86:	
   564                           ;EUSARTC.c: 120:      while(!TRMT);
   565                           
   566  078C  1683               	bsf	3,5	;RP0=1, select bank1
   567  078D  1303               	bcf	3,6	;RP1=0, select bank1
   568  078E  1C98               	btfss	24,1	;volatile
   569  078F  2F91               	goto	u21
   570  0790  2F92               	goto	u20
   571  0791                     u21:	
   572  0791  2F8C               	goto	l86
   573  0792                     u20:	
   574  0792                     l695:	
   575                           
   576                           ;EUSARTC.c: 121:   TXREG = y;
   577  0792  0872               	movf	_y,w
   578  0793  1283               	bcf	3,5	;RP0=0, select bank0
   579  0794  1303               	bcf	3,6	;RP1=0, select bank0
   580  0795  0099               	movwf	25	;volatile
   581  0796                     l89:	
   582  0796  0008               	return
   583  0797                     __end_of_TRANSMIT:	
   584                           
   585                           	psect	text3
   586  0781                     __ptext3:	
   587 ;; *************** function _RECEIVE *****************
   588 ;; Defined at:
   589 ;;		line 112 in file "EUSARTC.c"
   590 ;; Parameters:    Size  Location     Type
   591 ;;		None
   592 ;; Auto vars:     Size  Location     Type
   593 ;;		None
   594 ;; Return value:  Size  Location     Type
   595 ;;                  1    wreg      void 
   596 ;; Registers used:
   597 ;;		wreg
   598 ;; Tracked objects:
   599 ;;		On entry : 0/0
   600 ;;		On exit  : 0/0
   601 ;;		Unchanged: 0/0
   602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   603 ;;      Params:         0       0       0       0       0
   604 ;;      Locals:         0       0       0       0       0
   605 ;;      Temps:          1       0       0       0       0
   606 ;;      Totals:         1       0       0       0       0
   607 ;;Total ram usage:        1 bytes
   608 ;; Hardware stack levels used:    1
   609 ;; This function calls:
   610 ;;		Nothing
   611 ;; This function is called by:
   612 ;;		_LOOP
   613 ;; This function uses a non-reentrant model
   614 ;;
   615                           
   616                           
   617                           ;psect for function _RECEIVE
   618  0781                     _RECEIVE:	
   619  0781                     l699:	
   620                           ;incstack = 0
   621                           ; Regs used in _RECEIVE: [wreg]
   622                           
   623  0781                     l80:	
   624                           ;EUSARTC.c: 113:     while(!RCIF);
   625                           
   626  0781  1283               	bcf	3,5	;RP0=0, select bank0
   627  0782  1303               	bcf	3,6	;RP1=0, select bank0
   628  0783  1E8C               	btfss	12,5	;volatile
   629  0784  2F86               	goto	u31
   630  0785  2F87               	goto	u30
   631  0786                     u31:	
   632  0786  2F81               	goto	l80
   633  0787                     u30:	
   634  0787                     l701:	
   635                           
   636                           ;EUSARTC.c: 114:     x = RCREG;
   637  0787  081A               	movf	26,w	;volatile
   638  0788  00F3               	movwf	??_RECEIVE
   639  0789  0873               	movf	??_RECEIVE,w
   640  078A  00F1               	movwf	_x
   641  078B                     l83:	
   642  078B  0008               	return
   643  078C                     __end_of_RECEIVE:	
   644                           
   645                           	psect	text4
   646  07AC                     __ptext4:	
   647 ;; *************** function _ANALOGICO *****************
   648 ;; Defined at:
   649 ;;		line 100 in file "EUSARTC.c"
   650 ;; Parameters:    Size  Location     Type
   651 ;;		None
   652 ;; Auto vars:     Size  Location     Type
   653 ;;		None
   654 ;; Return value:  Size  Location     Type
   655 ;;                  1    wreg      void 
   656 ;; Registers used:
   657 ;;		wreg, status,2, status,0
   658 ;; Tracked objects:
   659 ;;		On entry : 0/0
   660 ;;		On exit  : 0/0
   661 ;;		Unchanged: 0/0
   662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   663 ;;      Params:         0       0       0       0       0
   664 ;;      Locals:         0       0       0       0       0
   665 ;;      Temps:          1       0       0       0       0
   666 ;;      Totals:         1       0       0       0       0
   667 ;;Total ram usage:        1 bytes
   668 ;; Hardware stack levels used:    1
   669 ;; This function calls:
   670 ;;		Nothing
   671 ;; This function is called by:
   672 ;;		_LOOP
   673 ;; This function uses a non-reentrant model
   674 ;;
   675                           
   676                           
   677                           ;psect for function _ANALOGICO
   678  07AC                     _ANALOGICO:	
   679  07AC                     l681:	
   680                           ;incstack = 0
   681                           ; Regs used in _ANALOGICO: [wreg+status,2+status,0]
   682                           
   683                           
   684                           ;EUSARTC.c: 101:     _delay((unsigned long)((1)*(4000000/4000.0)));
   685  07AC  30C7               	movlw	199
   686  07AD  00F3               	movwf	??_ANALOGICO
   687  07AE                     u47:	
   688  07AE  2FAF               	nop2
   689  07AF  0BF3               	decfsz	??_ANALOGICO,f
   690  07B0  2FAE               	goto	u47
   691  07B1  2FB2               	nop2
   692  07B2  2FB3               	nop2
   693  07B3                     l683:	
   694                           
   695                           ;EUSARTC.c: 102:         ADCON0bits.CHS = 0000;
   696  07B3  30C3               	movlw	-61
   697  07B4  1283               	bcf	3,5	;RP0=0, select bank0
   698  07B5  1303               	bcf	3,6	;RP1=0, select bank0
   699  07B6  059F               	andwf	31,f	;volatile
   700  07B7                     l685:	
   701                           
   702                           ;EUSARTC.c: 103:         ADCON0bits.ADON = 1;
   703  07B7  141F               	bsf	31,0	;volatile
   704  07B8                     l687:	
   705                           
   706                           ;EUSARTC.c: 104:         ADCON0bits.GO = 1;
   707  07B8  149F               	bsf	31,1	;volatile
   708  07B9                     l74:	
   709                           ;EUSARTC.c: 105:         while(ADCON0bits.GO);
   710                           
   711  07B9  189F               	btfsc	31,1	;volatile
   712  07BA  2FBC               	goto	u11
   713  07BB  2FBD               	goto	u10
   714  07BC                     u11:	
   715  07BC  2FB9               	goto	l74
   716  07BD                     u10:	
   717  07BD                     l689:	
   718                           
   719                           ;EUSARTC.c: 107:             y = ADRESH;
   720  07BD  081E               	movf	30,w	;volatile
   721  07BE  00F3               	movwf	??_ANALOGICO
   722  07BF  0873               	movf	??_ANALOGICO,w
   723  07C0  00F2               	movwf	_y
   724  07C1                     l77:	
   725  07C1  0008               	return
   726  07C2                     __end_of_ANALOGICO:	
   727  007E                     btemp	set	126	;btemp
   728  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      1       4
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _LOOP->_ANALOGICO
    _LOOP->_RECEIVE

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                               _LOOP
 ---------------------------------------------------------------------------------
 (1) _LOOP                                                 0     0      0       0
                          _ANALOGICO
                            _RECEIVE
                           _TRANSMIT
 ---------------------------------------------------------------------------------
 (2) _TRANSMIT                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _RECEIVE                                              1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ANALOGICO                                            1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LOOP
     _ANALOGICO
     _RECEIVE
     _TRANSMIT

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      1       4       1       28.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       4       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       4      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Feb 20 16:39:04 2020

                       _x 0071                         _y 0072                         _z 0070  
             __CFG_CP$OFF 0000                        l80 0781                        l65 07F6  
                      l74 07B9                        l83 078B                        l68 0797  
                      l77 07C1                        l86 078C                        l89 0796  
                      u10 07BD                        u11 07BC                        u20 0792  
                      u21 0791                        u30 0787                        u31 0786  
                      u47 07AE        __size_of_ANALOGICO 0016                       l701 0787  
                     l711 07C8                       l705 0797                       l721 07D0  
                     l713 07C9                       l707 07A6                       l731 07D9  
                     l723 07D1                       l715 07CA                       l741 07E1  
                     l733 07DB                       l725 07D5                       l717 07CB  
                     l709 07C2                       l751 07E9                       l743 07E2  
                     l735 07DE                       l727 07D6                       l719 07CC  
                     l681 07AC                       l761 07F0                       l753 07EA  
                     l745 07E3                       l737 07DF                       l729 07D8  
                     l683 07B3                       l763 07F1                       l755 07EB  
                     l747 07E4                       l739 07E0                       l685 07B7  
                     l693 078C                       l757 07EC                       l749 07E8  
                     l687 07B8                       l695 0792                       l759 07EF  
                     l689 07BD                       l699 0781              __CFG_CPD$OFF 0000  
            __CFG_LVP$OFF 0000           __end_of_RECEIVE 078C                      _RCIF 0065  
                    _LOOP 0797                      _TRMT 04C1              __CFG_WRT$OFF 0000  
                    _main 07C2                      btemp 007E                      start 0000  
           __CFG_IESO$OFF 0000                     ?_LOOP 0073                     ?_main 0073  
           __CFG_WDTE$OFF 0000                     _ANSEL 0188                     _RCREG 001A  
                   _SPBRG 0099                     _PORTA 0005                     _PORTB 0006  
                   _PORTC 0007                     _PORTD 0008                     _PORTE 0009  
                   _TRISA 0085                     _TRISB 0086                     _TRISC 0087  
                   _TRISD 0088                     _TRISE 0089                     _TXREG 0019  
          __CFG_FCMEN$OFF 0000          __end_of_TRANSMIT 0797            __CFG_BOREN$OFF 0000  
       __end_of_ANALOGICO 07C2                     status 0003                     wtemp0 007E  
            __end_of_LOOP 07AC            __CFG_MCLRE$OFF 0000           __initialization 07F9  
            __end_of_main 07F9                    ??_LOOP 0074                    ??_main 0074  
               ??_RECEIVE 0073                    _ADRESH 001E                    _ANSELH 0189  
          __CFG_PWRTE$OFF 0000   __end_of__initialization 07FC            __pcstackCOMMON 0073  
               ?_TRANSMIT 0073                __pmaintext 07C2                ??_TRANSMIT 0073  
                 _RECEIVE 0781                 _ANALOGICO 07AC                   __ptext1 0797  
                 __ptext2 078C                   __ptext3 0781                   __ptext4 07AC  
    end_of_initialization 07FC                ?_ANALOGICO 0073                 _RCSTAbits 0018  
               _TXSTAbits 0098         __size_of_TRANSMIT 000B       start_initialization 07F9  
__CFG_FOSC$INTRC_NOCLKOUT 0000               ??_ANALOGICO 0073                  ?_RECEIVE 0073  
             __pbssCOMMON 0070                 ___latbits 0002                  _TRANSMIT 078C  
              _ADCON0bits 001F          __size_of_RECEIVE 000B         __CFG_BOR4V$BOR40V 0000  
           __size_of_LOOP 0015             __size_of_main 0037                _OSCCONbits 008F  
