

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Feb 21 13:48:54 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.10
    17                           ; Generated 31/07/2019 GMT
    18                           ; 
    19                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F887 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  0088                     	;# 
    90  0089                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  008F                     	;# 
    95  0090                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0097                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  0105                     	;# 
   114  0107                     	;# 
   115  0108                     	;# 
   116  0109                     	;# 
   117  010C                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  010F                     	;# 
   122  0185                     	;# 
   123  0187                     	;# 
   124  0188                     	;# 
   125  0189                     	;# 
   126  018C                     	;# 
   127  018D                     	;# 
   128  0000                     	;# 
   129  0001                     	;# 
   130  0002                     	;# 
   131  0003                     	;# 
   132  0004                     	;# 
   133  0005                     	;# 
   134  0006                     	;# 
   135  0007                     	;# 
   136  0008                     	;# 
   137  0009                     	;# 
   138  000A                     	;# 
   139  000B                     	;# 
   140  000C                     	;# 
   141  000D                     	;# 
   142  000E                     	;# 
   143  000E                     	;# 
   144  000F                     	;# 
   145  0010                     	;# 
   146  0011                     	;# 
   147  0012                     	;# 
   148  0013                     	;# 
   149  0014                     	;# 
   150  0015                     	;# 
   151  0015                     	;# 
   152  0016                     	;# 
   153  0017                     	;# 
   154  0018                     	;# 
   155  0019                     	;# 
   156  001A                     	;# 
   157  001B                     	;# 
   158  001B                     	;# 
   159  001C                     	;# 
   160  001D                     	;# 
   161  001E                     	;# 
   162  001F                     	;# 
   163  0081                     	;# 
   164  0085                     	;# 
   165  0086                     	;# 
   166  0087                     	;# 
   167  0088                     	;# 
   168  0089                     	;# 
   169  008C                     	;# 
   170  008D                     	;# 
   171  008E                     	;# 
   172  008F                     	;# 
   173  0090                     	;# 
   174  0091                     	;# 
   175  0092                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0094                     	;# 
   180  0095                     	;# 
   181  0096                     	;# 
   182  0097                     	;# 
   183  0098                     	;# 
   184  0099                     	;# 
   185  009A                     	;# 
   186  009B                     	;# 
   187  009C                     	;# 
   188  009D                     	;# 
   189  009E                     	;# 
   190  009F                     	;# 
   191  0105                     	;# 
   192  0107                     	;# 
   193  0108                     	;# 
   194  0109                     	;# 
   195  010C                     	;# 
   196  010C                     	;# 
   197  010D                     	;# 
   198  010E                     	;# 
   199  010F                     	;# 
   200  0185                     	;# 
   201  0187                     	;# 
   202  0188                     	;# 
   203  0189                     	;# 
   204  018C                     	;# 
   205  018D                     	;# 
   206  001A                     _RCREG	set	26
   207  001E                     _ADRESH	set	30
   208  0008                     _PORTDbits	set	8
   209  0018                     _RCSTAbits	set	24
   210  000B                     _INTCONbits	set	11
   211  0014                     _SSPCONbits	set	20
   212  001F                     _ADCON0bits	set	31
   213  0008                     _PORTD	set	8
   214  0007                     _PORTC	set	7
   215  0006                     _PORTB	set	6
   216  0005                     _PORTA	set	5
   217  0009                     _PORTE	set	9
   218  0013                     _SSPBUF	set	19
   219  000C                     _PIR1bits	set	12
   220  0065                     _RCIF	set	101
   221  0098                     _TXSTAbits	set	152
   222  0099                     _SPBRG	set	153
   223  008C                     _PIE1bits	set	140
   224  009F                     _ADCON1bits	set	159
   225  0089                     _TRISE	set	137
   226  0088                     _TRISD	set	136
   227  0087                     _TRISC	set	135
   228  0086                     _TRISB	set	134
   229  0085                     _TRISA	set	133
   230  008F                     _OSCCONbits	set	143
   231  0094                     _SSPSTATbits	set	148
   232  04A0                     _BF	set	1184
   233  0189                     _ANSELH	set	393
   234  0188                     _ANSEL	set	392
   235                           
   236                           ; #config settings
   237  0000                     
   238                           	psect	cinit
   239  000F                     start_initialization:	
   240  000F                     __initialization:	
   241                           
   242                           ; Clear objects allocated to COMMON
   243  000F  01F0               	clrf	__pbssCOMMON& (0+127)
   244  0010  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   245  0011  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   246  0012  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   247  0013  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   248  0014  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   249  0015  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
   250  0016  01F7               	clrf	(__pbssCOMMON+7)& (0+127)
   251  0017  01F8               	clrf	(__pbssCOMMON+8)& (0+127)
   252  0018  01F9               	clrf	(__pbssCOMMON+9)& (0+127)
   253  0019                     end_of_initialization:	
   254                           ;End of C runtime variable initialization code
   255                           
   256  0019                     __end_of__initialization:	
   257  0019  0183               	clrf	3
   258  001A  120A  118A  281D   	ljmp	_main	;jump to C main() function
   259                           
   260                           	psect	bssCOMMON
   261  0070                     __pbssCOMMON:	
   262  0070                     _ORDENADOR:	
   263  0070                     	ds	1
   264  0071                     _DATASPIsi:	
   265  0071                     	ds	1
   266  0072                     _DATASPIso:	
   267  0072                     	ds	1
   268  0073                     _DATARX:	
   269  0073                     	ds	1
   270  0074                     _DATATX:	
   271  0074                     	ds	1
   272  0075                     _y:	
   273  0075                     	ds	1
   274  0076                     _DATA:	
   275  0076                     	ds	1
   276  0077                     _BANDERA:	
   277  0077                     	ds	1
   278  0078                     _z:	
   279  0078                     	ds	1
   280  0079                     _x:	
   281  0079                     	ds	1
   282                           
   283                           	psect	cstackCOMMON
   284  007A                     __pcstackCOMMON:	
   285  007A                     ?_LOOP:	
   286  007A                     ?_ANALOGICO:	
   287                           ; 1 bytes @ 0x0
   288                           
   289  007A                     ?_MESSAGE:	
   290                           ; 1 bytes @ 0x0
   291                           
   292  007A                     ?_RECEIVERX:	
   293                           ; 1 bytes @ 0x0
   294                           
   295  007A                     ?_ISR:	
   296                           ; 1 bytes @ 0x0
   297                           
   298  007A                     ??_ISR:	
   299                           ; 1 bytes @ 0x0
   300                           
   301  007A                     ?_main:	
   302                           ; 1 bytes @ 0x0
   303                           
   304                           
   305                           ; 1 bytes @ 0x0
   306  007A                     	ds	3
   307  007D                     ??_ANALOGICO:	
   308  007D                     ??_MESSAGE:	
   309                           ; 1 bytes @ 0x3
   310                           
   311  007D                     ??_RECEIVERX:	
   312                           ; 1 bytes @ 0x3
   313                           
   314                           
   315                           ; 1 bytes @ 0x3
   316  007D                     	ds	1
   317  007E                     ??_LOOP:	
   318  007E                     ??_main:	
   319                           ; 1 bytes @ 0x4
   320                           
   321                           
   322                           	psect	maintext
   323  001D                     __pmaintext:	
   324                           ; 1 bytes @ 0x4
   325 ;;
   326 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   327 ;;
   328 ;; *************** function _main *****************
   329 ;; Defined at:
   330 ;;		line 80 in file "MAESTRO.c"
   331 ;; Parameters:    Size  Location     Type
   332 ;;		None
   333 ;; Auto vars:     Size  Location     Type
   334 ;;		None
   335 ;; Return value:  Size  Location     Type
   336 ;;                  1    wreg      void 
   337 ;; Registers used:
   338 ;;		wreg, status,2, status,0, pclath, cstack
   339 ;; Tracked objects:
   340 ;;		On entry : B00/0
   341 ;;		On exit  : 0/0
   342 ;;		Unchanged: 0/0
   343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   344 ;;      Params:         0       0       0       0       0
   345 ;;      Locals:         0       0       0       0       0
   346 ;;      Temps:          0       0       0       0       0
   347 ;;      Totals:         0       0       0       0       0
   348 ;;Total ram usage:        0 bytes
   349 ;; Hardware stack levels required when called:    3
   350 ;; This function calls:
   351 ;;		_LOOP
   352 ;; This function is called by:
   353 ;;		Startup code after reset
   354 ;; This function uses a non-reentrant model
   355 ;;
   356                           
   357                           
   358                           ;psect for function _main
   359  001D                     _main:	
   360  001D                     l768:	
   361                           ;incstack = 0
   362                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   363                           
   364                           
   365                           ;MAESTRO.c: 83:     OSCCONbits.IRCF = 0b110;
   366  001D  1683               	bsf	3,5	;RP0=1, select bank1
   367  001E  1303               	bcf	3,6	;RP1=0, select bank1
   368  001F  080F               	movf	15,w	;volatile
   369  0020  398F               	andlw	-113
   370  0021  3860               	iorlw	96
   371  0022  008F               	movwf	15	;volatile
   372  0023                     l770:	
   373                           
   374                           ;MAESTRO.c: 84:     OSCCONbits.OSTS= 0;
   375  0023  118F               	bcf	15,3	;volatile
   376  0024                     l772:	
   377                           
   378                           ;MAESTRO.c: 85:     OSCCONbits.HTS = 0;
   379  0024  110F               	bcf	15,2	;volatile
   380  0025                     l774:	
   381                           
   382                           ;MAESTRO.c: 86:     OSCCONbits.LTS = 0;
   383  0025  108F               	bcf	15,1	;volatile
   384  0026                     l776:	
   385                           
   386                           ;MAESTRO.c: 87:     OSCCONbits.SCS = 1;
   387  0026  140F               	bsf	15,0	;volatile
   388  0027                     l778:	
   389                           
   390                           ;MAESTRO.c: 91:     ANSEL = 0b000000001;
   391  0027  3001               	movlw	1
   392  0028  1683               	bsf	3,5	;RP0=1, select bank3
   393  0029  1703               	bsf	3,6	;RP1=1, select bank3
   394  002A  0088               	movwf	8	;volatile
   395  002B                     l780:	
   396                           
   397                           ;MAESTRO.c: 92:     ANSELH = 0b00000000;
   398  002B  0189               	clrf	9	;volatile
   399  002C                     l782:	
   400                           
   401                           ;MAESTRO.c: 94:     TRISA = 0b00000001;
   402  002C  3001               	movlw	1
   403  002D  1683               	bsf	3,5	;RP0=1, select bank1
   404  002E  1303               	bcf	3,6	;RP1=0, select bank1
   405  002F  0085               	movwf	5	;volatile
   406  0030                     l784:	
   407                           
   408                           ;MAESTRO.c: 95:     TRISB = 0b00000000;
   409  0030  0186               	clrf	6	;volatile
   410  0031                     l786:	
   411                           
   412                           ;MAESTRO.c: 96:     TRISC = 0b00010000;
   413  0031  3010               	movlw	16
   414  0032  0087               	movwf	7	;volatile
   415  0033                     l788:	
   416                           
   417                           ;MAESTRO.c: 97:     TRISD = 0b00000000;
   418  0033  0188               	clrf	8	;volatile
   419  0034                     l790:	
   420                           
   421                           ;MAESTRO.c: 98:     TRISE = 0000;
   422  0034  0189               	clrf	9	;volatile
   423  0035                     l792:	
   424                           
   425                           ;MAESTRO.c: 100:     PORTA = 0;
   426  0035  1283               	bcf	3,5	;RP0=0, select bank0
   427  0036  1303               	bcf	3,6	;RP1=0, select bank0
   428  0037  0185               	clrf	5	;volatile
   429  0038                     l794:	
   430                           
   431                           ;MAESTRO.c: 101:     PORTB = 0;
   432  0038  0186               	clrf	6	;volatile
   433  0039                     l796:	
   434                           
   435                           ;MAESTRO.c: 102:     PORTC = 0;
   436  0039  0187               	clrf	7	;volatile
   437  003A                     l798:	
   438                           
   439                           ;MAESTRO.c: 103:     PORTD = 0;
   440  003A  0188               	clrf	8	;volatile
   441  003B                     l800:	
   442                           
   443                           ;MAESTRO.c: 104:     PORTE = 0;
   444  003B  0189               	clrf	9	;volatile
   445  003C                     l802:	
   446                           
   447                           ;MAESTRO.c: 107:     ADCON0bits.ADCS0 = 1;
   448  003C  171F               	bsf	31,6	;volatile
   449  003D                     l804:	
   450                           
   451                           ;MAESTRO.c: 108:     ADCON0bits.ADCS1 = 0;
   452  003D  139F               	bcf	31,7	;volatile
   453  003E                     l806:	
   454                           
   455                           ;MAESTRO.c: 109:     ADCON0bits.CHS0 = 0;
   456  003E  111F               	bcf	31,2	;volatile
   457  003F                     l808:	
   458                           
   459                           ;MAESTRO.c: 110:     ADCON0bits.CHS1 = 0;
   460  003F  119F               	bcf	31,3	;volatile
   461  0040                     l810:	
   462                           
   463                           ;MAESTRO.c: 111:     ADCON0bits.CHS2 = 0;
   464  0040  121F               	bcf	31,4	;volatile
   465  0041                     l812:	
   466                           
   467                           ;MAESTRO.c: 112:     ADCON0bits.CHS3 = 0;
   468  0041  129F               	bcf	31,5	;volatile
   469  0042                     l814:	
   470                           
   471                           ;MAESTRO.c: 113:     ADCON0bits.ADON = 1;
   472  0042  141F               	bsf	31,0	;volatile
   473  0043                     l816:	
   474                           
   475                           ;MAESTRO.c: 114:     ADCON1bits.ADFM = 0;
   476  0043  1683               	bsf	3,5	;RP0=1, select bank1
   477  0044  1303               	bcf	3,6	;RP1=0, select bank1
   478  0045  139F               	bcf	31,7	;volatile
   479  0046                     l818:	
   480                           
   481                           ;MAESTRO.c: 115:     ADCON1bits.VCFG0 = 0;
   482  0046  121F               	bcf	31,4	;volatile
   483  0047                     l820:	
   484                           
   485                           ;MAESTRO.c: 116:     ADCON1bits.VCFG1 = 0;
   486  0047  129F               	bcf	31,5	;volatile
   487  0048                     l822:	
   488                           
   489                           ;MAESTRO.c: 120:     SSPSTATbits.SMP = 0;
   490  0048  1394               	bcf	20,7	;volatile
   491  0049                     l824:	
   492                           
   493                           ;MAESTRO.c: 121:     SSPSTATbits.CKE = 0;
   494  0049  1314               	bcf	20,6	;volatile
   495  004A                     l826:	
   496                           
   497                           ;MAESTRO.c: 122:     SSPCONbits.SSPEN = 1;
   498  004A  1283               	bcf	3,5	;RP0=0, select bank0
   499  004B  1303               	bcf	3,6	;RP1=0, select bank0
   500  004C  1694               	bsf	20,5	;volatile
   501  004D                     l828:	
   502                           
   503                           ;MAESTRO.c: 123:     SSPCONbits.CKP = 1;
   504  004D  1614               	bsf	20,4	;volatile
   505  004E                     l830:	
   506                           
   507                           ;MAESTRO.c: 124:     SSPCONbits.SSPM = 0b0010;
   508  004E  0814               	movf	20,w	;volatile
   509  004F  39F0               	andlw	-16
   510  0050  3802               	iorlw	2
   511  0051  0094               	movwf	20	;volatile
   512  0052                     l832:	
   513                           
   514                           ;MAESTRO.c: 127:     PIE1bits.SSPIE = 1;
   515  0052  1683               	bsf	3,5	;RP0=1, select bank1
   516  0053  1303               	bcf	3,6	;RP1=0, select bank1
   517  0054  158C               	bsf	12,3	;volatile
   518  0055                     l834:	
   519                           
   520                           ;MAESTRO.c: 128:     INTCONbits.PEIE = 1;
   521  0055  170B               	bsf	11,6	;volatile
   522  0056                     l836:	
   523                           
   524                           ;MAESTRO.c: 129:     INTCONbits.GIE = 1;
   525  0056  178B               	bsf	11,7	;volatile
   526  0057                     l838:	
   527                           
   528                           ;MAESTRO.c: 133:  SPBRG = 25;
   529  0057  3019               	movlw	25
   530  0058  0099               	movwf	25	;volatile
   531  0059                     l840:	
   532                           
   533                           ;MAESTRO.c: 135:     TXSTAbits.BRGH = 1;
   534  0059  1518               	bsf	24,2	;volatile
   535  005A                     l842:	
   536                           
   537                           ;MAESTRO.c: 136:     TXSTAbits.TXEN = 1;
   538  005A  1698               	bsf	24,5	;volatile
   539  005B                     l844:	
   540                           
   541                           ;MAESTRO.c: 137:     TXSTAbits.SYNC = 0;
   542  005B  1218               	bcf	24,4	;volatile
   543  005C                     l846:	
   544                           
   545                           ;MAESTRO.c: 138:     TXSTAbits.TX9 = 0;
   546  005C  1318               	bcf	24,6	;volatile
   547  005D                     l848:	
   548                           
   549                           ;MAESTRO.c: 140:     RCSTAbits.CREN = 1;
   550  005D  1283               	bcf	3,5	;RP0=0, select bank0
   551  005E  1303               	bcf	3,6	;RP1=0, select bank0
   552  005F  1618               	bsf	24,4	;volatile
   553  0060                     l850:	
   554                           
   555                           ;MAESTRO.c: 141:     RCSTAbits.SPEN = 1;
   556  0060  1798               	bsf	24,7	;volatile
   557  0061                     l852:	
   558                           
   559                           ;MAESTRO.c: 142:     RCSTAbits.RX9 = 0;
   560  0061  1318               	bcf	24,6	;volatile
   561                           
   562                           ;MAESTRO.c: 144:     x= 0;
   563  0062  01F9               	clrf	_x
   564                           
   565                           ;MAESTRO.c: 145:     y=0;
   566  0063  01F5               	clrf	_y
   567  0064                     l854:	
   568                           
   569                           ;MAESTRO.c: 146:     LOOP();
   570  0064  120A  118A  20B7  120A  118A  	fcall	_LOOP
   571  0069                     l100:	
   572  0069  120A  118A  280C   	ljmp	start
   573  006C                     __end_of_main:	
   574                           
   575                           	psect	text1
   576  00B7                     __ptext1:	
   577 ;; *************** function _LOOP *****************
   578 ;; Defined at:
   579 ;;		line 150 in file "MAESTRO.c"
   580 ;; Parameters:    Size  Location     Type
   581 ;;		None
   582 ;; Auto vars:     Size  Location     Type
   583 ;;		None
   584 ;; Return value:  Size  Location     Type
   585 ;;                  1    wreg      void 
   586 ;; Registers used:
   587 ;;		wreg, status,2, status,0, pclath, cstack
   588 ;; Tracked objects:
   589 ;;		On entry : 0/0
   590 ;;		On exit  : 0/0
   591 ;;		Unchanged: 0/0
   592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   593 ;;      Params:         0       0       0       0       0
   594 ;;      Locals:         0       0       0       0       0
   595 ;;      Temps:          0       0       0       0       0
   596 ;;      Totals:         0       0       0       0       0
   597 ;;Total ram usage:        0 bytes
   598 ;; Hardware stack levels used:    1
   599 ;; Hardware stack levels required when called:    2
   600 ;; This function calls:
   601 ;;		_ANALOGICO
   602 ;;		_MESSAGE
   603 ;;		_RECEIVERX
   604 ;; This function is called by:
   605 ;;		_main
   606 ;; This function uses a non-reentrant model
   607 ;;
   608                           
   609                           
   610                           ;psect for function _LOOP
   611  00B7                     _LOOP:	
   612  00B7                     l103:	
   613                           ;incstack = 0
   614                           ; Regs used in _LOOP: [wreg+status,2+status,0+pclath+cstack]
   615                           ;MAESTRO.c: 151:     while(1){
   616                           
   617  00B7                     l740:	
   618                           
   619                           ;MAESTRO.c: 152:         ANALOGICO();
   620  00B7  120A  118A  20A1  120A  118A  	fcall	_ANALOGICO
   621                           
   622                           ;MAESTRO.c: 153:         MESSAGE();
   623  00BC  120A  118A  20D5  120A  118A  	fcall	_MESSAGE
   624                           
   625                           ;MAESTRO.c: 156:         RECEIVERX();
   626  00C1  120A  118A  20C8  120A  118A  	fcall	_RECEIVERX
   627  00C6  28B7               	goto	l103
   628  00C7  0008               	return
   629  00C8                     __end_of_LOOP:	
   630                           
   631                           	psect	text2
   632  00C8                     __ptext2:	
   633 ;; *************** function _RECEIVERX *****************
   634 ;; Defined at:
   635 ;;		line 190 in file "MAESTRO.c"
   636 ;; Parameters:    Size  Location     Type
   637 ;;		None
   638 ;; Auto vars:     Size  Location     Type
   639 ;;		None
   640 ;; Return value:  Size  Location     Type
   641 ;;                  1    wreg      void 
   642 ;; Registers used:
   643 ;;		wreg
   644 ;; Tracked objects:
   645 ;;		On entry : 0/0
   646 ;;		On exit  : 0/0
   647 ;;		Unchanged: 0/0
   648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   649 ;;      Params:         0       0       0       0       0
   650 ;;      Locals:         0       0       0       0       0
   651 ;;      Temps:          1       0       0       0       0
   652 ;;      Totals:         1       0       0       0       0
   653 ;;Total ram usage:        1 bytes
   654 ;; Hardware stack levels used:    1
   655 ;; Hardware stack levels required when called:    1
   656 ;; This function calls:
   657 ;;		Nothing
   658 ;; This function is called by:
   659 ;;		_LOOP
   660 ;; This function uses a non-reentrant model
   661 ;;
   662                           
   663                           
   664                           ;psect for function _RECEIVERX
   665  00C8                     _RECEIVERX:	
   666  00C8                     l734:	
   667                           ;incstack = 0
   668                           ; Regs used in _RECEIVERX: [wreg]
   669                           
   670  00C8                     l121:	
   671                           ;MAESTRO.c: 191:     while(!RCIF);
   672                           
   673  00C8  1283               	bcf	3,5	;RP0=0, select bank0
   674  00C9  1303               	bcf	3,6	;RP1=0, select bank0
   675  00CA  1E8C               	btfss	12,5	;volatile
   676  00CB  28CD               	goto	u31
   677  00CC  28CE               	goto	u30
   678  00CD                     u31:	
   679  00CD  28C8               	goto	l121
   680  00CE                     u30:	
   681  00CE                     l736:	
   682                           
   683                           ;MAESTRO.c: 192:     DATARX = RCREG;
   684  00CE  081A               	movf	26,w	;volatile
   685  00CF  00FD               	movwf	??_RECEIVERX
   686  00D0  087D               	movf	??_RECEIVERX,w
   687  00D1  00F3               	movwf	_DATARX
   688                           
   689                           ;MAESTRO.c: 193:     PORTB = DATARX;
   690  00D2  0873               	movf	_DATARX,w
   691  00D3  0086               	movwf	6	;volatile
   692  00D4                     l124:	
   693  00D4  0008               	return
   694  00D5                     __end_of_RECEIVERX:	
   695                           
   696                           	psect	text3
   697  00D5                     __ptext3:	
   698 ;; *************** function _MESSAGE *****************
   699 ;; Defined at:
   700 ;;		line 165 in file "MAESTRO.c"
   701 ;; Parameters:    Size  Location     Type
   702 ;;		None
   703 ;; Auto vars:     Size  Location     Type
   704 ;;		None
   705 ;; Return value:  Size  Location     Type
   706 ;;                  1    wreg      void 
   707 ;; Registers used:
   708 ;;		wreg
   709 ;; Tracked objects:
   710 ;;		On entry : 0/0
   711 ;;		On exit  : 0/0
   712 ;;		Unchanged: 0/0
   713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   714 ;;      Params:         0       0       0       0       0
   715 ;;      Locals:         0       0       0       0       0
   716 ;;      Temps:          0       0       0       0       0
   717 ;;      Totals:         0       0       0       0       0
   718 ;;Total ram usage:        0 bytes
   719 ;; Hardware stack levels used:    1
   720 ;; Hardware stack levels required when called:    1
   721 ;; This function calls:
   722 ;;		Nothing
   723 ;; This function is called by:
   724 ;;		_LOOP
   725 ;; This function uses a non-reentrant model
   726 ;;
   727                           
   728                           
   729                           ;psect for function _MESSAGE
   730  00D5                     _MESSAGE:	
   731  00D5                     l726:	
   732                           ;incstack = 0
   733                           ; Regs used in _MESSAGE: [wreg]
   734                           
   735  00D5                     l109:	
   736                           ;MAESTRO.c: 167:     while(BF==1);
   737                           
   738  00D5  1683               	bsf	3,5	;RP0=1, select bank1
   739  00D6  1303               	bcf	3,6	;RP1=0, select bank1
   740  00D7  1814               	btfsc	20,0	;volatile
   741  00D8  28DA               	goto	u21
   742  00D9  28DB               	goto	u20
   743  00DA                     u21:	
   744  00DA  28D5               	goto	l109
   745  00DB                     u20:	
   746  00DB                     l111:	
   747                           
   748                           ;MAESTRO.c: 168:     PORTDbits.RD1 = 1;
   749  00DB  1283               	bcf	3,5	;RP0=0, select bank0
   750  00DC  1303               	bcf	3,6	;RP1=0, select bank0
   751  00DD  1488               	bsf	8,1	;volatile
   752  00DE                     l728:	
   753                           
   754                           ;MAESTRO.c: 169:     SSPBUF = y;
   755  00DE  0875               	movf	_y,w
   756  00DF  0093               	movwf	19	;volatile
   757  00E0                     l730:	
   758                           
   759                           ;MAESTRO.c: 170:     PORTDbits.RD1 = 0;
   760  00E0  1088               	bcf	8,1	;volatile
   761  00E1                     l112:	
   762  00E1  0008               	return
   763  00E2                     __end_of_MESSAGE:	
   764                           
   765                           	psect	text4
   766  00A1                     __ptext4:	
   767 ;; *************** function _ANALOGICO *****************
   768 ;; Defined at:
   769 ;;		line 179 in file "MAESTRO.c"
   770 ;; Parameters:    Size  Location     Type
   771 ;;		None
   772 ;; Auto vars:     Size  Location     Type
   773 ;;		None
   774 ;; Return value:  Size  Location     Type
   775 ;;                  1    wreg      void 
   776 ;; Registers used:
   777 ;;		wreg
   778 ;; Tracked objects:
   779 ;;		On entry : 0/0
   780 ;;		On exit  : 0/0
   781 ;;		Unchanged: 0/0
   782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   783 ;;      Params:         0       0       0       0       0
   784 ;;      Locals:         0       0       0       0       0
   785 ;;      Temps:          1       0       0       0       0
   786 ;;      Totals:         1       0       0       0       0
   787 ;;Total ram usage:        1 bytes
   788 ;; Hardware stack levels used:    1
   789 ;; Hardware stack levels required when called:    1
   790 ;; This function calls:
   791 ;;		Nothing
   792 ;; This function is called by:
   793 ;;		_LOOP
   794 ;; This function uses a non-reentrant model
   795 ;;
   796                           
   797                           
   798                           ;psect for function _ANALOGICO
   799  00A1                     _ANALOGICO:	
   800  00A1                     l716:	
   801                           ;incstack = 0
   802                           ; Regs used in _ANALOGICO: [wreg]
   803                           
   804                           
   805                           ;MAESTRO.c: 180:     ADCON0bits.ADON = 1;
   806  00A1  1283               	bcf	3,5	;RP0=0, select bank0
   807  00A2  1303               	bcf	3,6	;RP1=0, select bank0
   808  00A3  141F               	bsf	31,0	;volatile
   809  00A4                     l718:	
   810                           
   811                           ;MAESTRO.c: 181:     _delay((unsigned long)((1)*(4000000/4000.0)));
   812  00A4  30C7               	movlw	199
   813  00A5  00FD               	movwf	??_ANALOGICO
   814  00A6                     u87:	
   815  00A6  28A7               	nop2
   816  00A7  0BFD               	decfsz	??_ANALOGICO,f
   817  00A8  28A6               	goto	u87
   818  00A9  28AA               	nop2
   819  00AA  28AB               	nop2
   820  00AB                     l720:	
   821                           
   822                           ;MAESTRO.c: 182:         ADCON0bits.GO = 1;
   823  00AB  1283               	bcf	3,5	;RP0=0, select bank0
   824  00AC  1303               	bcf	3,6	;RP1=0, select bank0
   825  00AD  149F               	bsf	31,1	;volatile
   826  00AE                     l115:	
   827                           ;MAESTRO.c: 183:         while(ADCON0bits.GO);
   828                           
   829  00AE  189F               	btfsc	31,1	;volatile
   830  00AF  28B1               	goto	u11
   831  00B0  28B2               	goto	u10
   832  00B1                     u11:	
   833  00B1  28AE               	goto	l115
   834  00B2                     u10:	
   835  00B2                     l722:	
   836                           
   837                           ;MAESTRO.c: 185:             y = ADRESH;
   838  00B2  081E               	movf	30,w	;volatile
   839  00B3  00FD               	movwf	??_ANALOGICO
   840  00B4  087D               	movf	??_ANALOGICO,w
   841  00B5  00F5               	movwf	_y
   842  00B6                     l118:	
   843  00B6  0008               	return
   844  00B7                     __end_of_ANALOGICO:	
   845                           
   846                           	psect	text5
   847  006C                     __ptext5:	
   848 ;; *************** function _ISR *****************
   849 ;; Defined at:
   850 ;;		line 51 in file "MAESTRO.c"
   851 ;; Parameters:    Size  Location     Type
   852 ;;		None
   853 ;; Auto vars:     Size  Location     Type
   854 ;;		None
   855 ;; Return value:  Size  Location     Type
   856 ;;                  1    wreg      void 
   857 ;; Registers used:
   858 ;;		wreg, status,2, status,0
   859 ;; Tracked objects:
   860 ;;		On entry : 0/0
   861 ;;		On exit  : 0/0
   862 ;;		Unchanged: 0/0
   863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   864 ;;      Params:         0       0       0       0       0
   865 ;;      Locals:         0       0       0       0       0
   866 ;;      Temps:          3       0       0       0       0
   867 ;;      Totals:         3       0       0       0       0
   868 ;;Total ram usage:        3 bytes
   869 ;; Hardware stack levels used:    1
   870 ;; This function calls:
   871 ;;		Nothing
   872 ;; This function is called by:
   873 ;;		Interrupt level 1
   874 ;; This function uses a non-reentrant model
   875 ;;
   876                           
   877                           
   878                           ;psect for function _ISR
   879  006C                     _ISR:	
   880  006C                     i1l742:	
   881                           
   882                           ;MAESTRO.c: 53:    if(PIR1bits.SSPIF==1 & BANDERA == 1 ){
   883  006C  1283               	bcf	3,5	;RP0=0, select bank0
   884  006D  1303               	bcf	3,6	;RP1=0, select bank0
   885  006E  1D8C               	btfss	12,3	;volatile
   886  006F  2871               	goto	u4_21
   887  0070  2872               	goto	u4_20
   888  0071                     u4_21:	
   889  0071  2885               	goto	i1l93
   890  0072                     u4_20:	
   891  0072                     i1l744:	
   892  0072  0377               	decf	_BANDERA,w
   893  0073  1D03               	btfss	3,2
   894  0074  2876               	goto	u5_21
   895  0075  2877               	goto	u5_20
   896  0076                     u5_21:	
   897  0076  2885               	goto	i1l93
   898  0077                     u5_20:	
   899  0077                     i1l746:	
   900                           
   901                           ;MAESTRO.c: 54:         z = SSPBUF;
   902  0077  0813               	movf	19,w	;volatile
   903  0078  00FA               	movwf	??_ISR
   904  0079  087A               	movf	??_ISR,w
   905  007A  00F8               	movwf	_z
   906                           
   907                           ;MAESTRO.c: 55:         PORTE = z;
   908  007B  0878               	movf	_z,w
   909  007C  0089               	movwf	9	;volatile
   910  007D                     i1l748:	
   911                           
   912                           ;MAESTRO.c: 56:         BANDERA = 0;
   913  007D  01F7               	clrf	_BANDERA
   914  007E                     i1l750:	
   915                           
   916                           ;MAESTRO.c: 57:           SSPSTATbits.BF= 0;
   917  007E  1683               	bsf	3,5	;RP0=1, select bank1
   918  007F  1303               	bcf	3,6	;RP1=0, select bank1
   919  0080  1014               	bcf	20,0	;volatile
   920  0081                     i1l752:	
   921                           
   922                           ;MAESTRO.c: 58:           PIR1bits.SSPIF = 0;
   923  0081  1283               	bcf	3,5	;RP0=0, select bank0
   924  0082  1303               	bcf	3,6	;RP1=0, select bank0
   925  0083  118C               	bcf	12,3	;volatile
   926  0084  289A               	goto	i1l94
   927  0085                     i1l93:	
   928                           ;MAESTRO.c: 62:     }
   929                           
   930                           
   931                           ;MAESTRO.c: 64:    if(PIR1bits.SSPIF==1 & BANDERA == 0 ){
   932  0085  1D8C               	btfss	12,3	;volatile
   933  0086  2888               	goto	u6_21
   934  0087  2889               	goto	u6_20
   935  0088                     u6_21:	
   936  0088  289A               	goto	i1l94
   937  0089                     u6_20:	
   938  0089                     i1l756:	
   939  0089  0877               	movf	_BANDERA,w
   940  008A  1D03               	btfss	3,2
   941  008B  288D               	goto	u7_21
   942  008C  288E               	goto	u7_20
   943  008D                     u7_21:	
   944  008D  289A               	goto	i1l94
   945  008E                     u7_20:	
   946  008E                     i1l758:	
   947                           
   948                           ;MAESTRO.c: 65:         x = SSPBUF;
   949  008E  0813               	movf	19,w	;volatile
   950  008F  00FA               	movwf	??_ISR
   951  0090  087A               	movf	??_ISR,w
   952  0091  00F9               	movwf	_x
   953  0092                     i1l760:	
   954                           
   955                           ;MAESTRO.c: 67:         BANDERA = 1;
   956  0092  01F7               	clrf	_BANDERA
   957  0093  0AF7               	incf	_BANDERA,f
   958  0094                     i1l762:	
   959                           
   960                           ;MAESTRO.c: 68:           SSPSTATbits.BF= 0;
   961  0094  1683               	bsf	3,5	;RP0=1, select bank1
   962  0095  1303               	bcf	3,6	;RP1=0, select bank1
   963  0096  1014               	bcf	20,0	;volatile
   964  0097                     i1l764:	
   965                           
   966                           ;MAESTRO.c: 69:           PIR1bits.SSPIF = 0;
   967  0097  1283               	bcf	3,5	;RP0=0, select bank0
   968  0098  1303               	bcf	3,6	;RP1=0, select bank0
   969  0099  118C               	bcf	12,3	;volatile
   970  009A                     i1l94:	
   971  009A  087C               	movf	??_ISR+2,w
   972  009B  008A               	movwf	10
   973  009C  0E7B               	swapf	(??_ISR+1)^(0+4294967168),w
   974  009D  0083               	movwf	3
   975  009E  0EFE               	swapf	btemp,f
   976  009F  0E7E               	swapf	btemp,w
   977  00A0  0009               	retfie
   978  00A1                     __end_of_ISR:	
   979  007E                     btemp	set	126	;btemp
   980  007E                     wtemp0	set	126
   981                           
   982                           	psect	intentry
   983  0004                     __pintentry:	
   984                           ;incstack = 0
   985                           ; Regs used in _ISR: [wreg+status,2+status,0]
   986                           
   987  0004                     interrupt_function:	
   988  007E                     saved_w	set	btemp
   989  0004  00FE               	movwf	btemp
   990  0005  0E03               	swapf	3,w
   991  0006  00FB               	movwf	??_ISR+1
   992  0007  080A               	movf	10,w
   993  0008  00FC               	movwf	??_ISR+2
   994  0009  120A  118A  286C   	ljmp	_ISR


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4      14
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _LOOP->_ANALOGICO
    _LOOP->_RECEIVERX

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                               _LOOP
 ---------------------------------------------------------------------------------
 (1) _LOOP                                                 0     0      0       0
                          _ANALOGICO
                            _MESSAGE
                          _RECEIVERX
 ---------------------------------------------------------------------------------
 (2) _RECEIVERX                                            1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _MESSAGE                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ANALOGICO                                            1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LOOP
     _ANALOGICO
     _MESSAGE
     _RECEIVERX

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      4       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       E       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       E      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Feb 21 13:48:54 2020

                       _x 0079                         _y 0075                         _z 0078  
             __CFG_CP$OFF 0000               _SSPSTATbits 0094                        _BF 04A0  
                      u10 00B2                        u11 00B1                        u20 00DB  
                      u21 00DA                        u30 00CE                        u31 00CD  
                      u87 00A6        __size_of_ANALOGICO 0016                       l100 0069  
                     l111 00DB                       l103 00B7                       l112 00E1  
                     l121 00C8                       l115 00AE                       l124 00D4  
                     l109 00D5                       l118 00B6                       l720 00AB  
                     l800 003B                       l722 00B2                       l730 00E0  
                     l810 0040                       l802 003C                       l716 00A1  
                     l740 00B7                       l820 0047                       l812 0041  
                     l804 003D                       l718 00A4                       l726 00D5  
                     l734 00C8                       l830 004E                       l822 0048  
                     l814 0042                       l806 003E                       l728 00DE  
                     l736 00CE                       l840 0059                       l832 0052  
                     l824 0049                       l816 0043                       l808 003F  
                     l850 0060                       l842 005A                       l834 0055  
                     l826 004A                       l818 0046                       l770 0023  
                     l852 0061                       l844 005B                       l836 0056  
                     l828 004D                       l780 002B                       l772 0024  
                     l854 0064                       l846 005C                       l838 0057  
                     l790 0034                       l782 002C                       l774 0025  
                     l848 005D                       l792 0035                       l784 0030  
                     l776 0026                       l768 001D                       l794 0038  
                     l786 0031                       l778 0027                       l796 0039  
                     l788 0033                       l798 003A              __CFG_CPD$OFF 0000  
                     _ISR 006C              __CFG_LVP$OFF 0000                      ?_ISR 007A  
         __end_of_MESSAGE 00E2                      _DATA 0076                      _RCIF 0065  
                    i1l93 0085                      i1l94 009A                      _LOOP 00B7  
                    u4_20 0072                      u4_21 0071                      u5_20 0077  
                    u5_21 0076                      u6_20 0089                      u6_21 0088  
                    u7_20 008E                      u7_21 008D              __CFG_WRT$OFF 0000  
                    _main 001D                      btemp 007E                      start 000C  
           __CFG_IESO$OFF 0000        __size_of_RECEIVERX 000D                     ??_ISR 007A  
                   ?_LOOP 007A                     ?_main 007A             __CFG_WDTE$OFF 0000  
                   _ANSEL 0188                     i1l750 007E                     i1l742 006C  
                   i1l760 0092                     i1l752 0081                     i1l744 0072  
                   i1l762 0094                     i1l746 0077                     i1l764 0097  
                   i1l756 0089                     i1l748 007D                     i1l758 008E  
                   _RCREG 001A                     _SPBRG 0099                     _PORTA 0005  
                   _PORTB 0006                     _PORTC 0007                     _PORTD 0008  
                   _PORTE 0009                     _TRISA 0085                     _TRISB 0086  
                   _TRISC 0087                     _TRISD 0088                     _TRISE 0089  
          __CFG_FCMEN$OFF 0000            __CFG_BOREN$OFF 0000                     pclath 000A  
       __end_of_ANALOGICO 00B7                     status 0003                     wtemp0 007E  
            __end_of_LOOP 00C8            __CFG_MCLRE$OFF 0000           __initialization 000F  
            __end_of_main 006C                    ??_LOOP 007E                    ??_main 007E  
               ??_MESSAGE 007D         __end_of_RECEIVERX 00D5                    _ADRESH 001E  
                  _DATARX 0073                    _DATATX 0074                    _ANSELH 0189  
                  _SSPBUF 0013            __CFG_PWRTE$OFF 0000                    saved_w 007E  
 __end_of__initialization 0019            __pcstackCOMMON 007A                __pmaintext 001D  
              __pintentry 0004                   _BANDERA 0077                   _MESSAGE 00D5  
               _ANALOGICO 00A1                 _DATASPIsi 0071                 _DATASPIso 0072  
                 __ptext1 00B7                   __ptext2 00C8                   __ptext3 00D5  
                 __ptext4 00A1                   __ptext5 006C              __size_of_ISR 0035  
    end_of_initialization 0019                 _RECEIVERX 00C8                 _ORDENADOR 0070  
              ?_ANALOGICO 007A                 _RCSTAbits 0018                 _PORTDbits 0008  
              ?_RECEIVERX 007A                 _TXSTAbits 0098       start_initialization 000F  
             __end_of_ISR 00A1  __CFG_FOSC$INTRC_NOCLKOUT 0000               ??_ANALOGICO 007D  
                ?_MESSAGE 007A               __pbssCOMMON 0070                 ___latbits 0002  
             ??_RECEIVERX 007D         interrupt_function 0004                  _PIE1bits 008C  
                _PIR1bits 000C                _ADCON0bits 001F                _ADCON1bits 009F  
        __size_of_MESSAGE 000D         __CFG_BOR4V$BOR40V 0000             __size_of_LOOP 0011  
           __size_of_main 004F                _INTCONbits 000B                  intlevel1 0000  
              _OSCCONbits 008F                _SSPCONbits 0014  
