

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Feb 19 20:39:39 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.10
    17                           ; Generated 31/07/2019 GMT
    18                           ; 
    19                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F887 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  0088                     	;# 
    90  0089                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  008F                     	;# 
    95  0090                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0097                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  0105                     	;# 
   114  0107                     	;# 
   115  0108                     	;# 
   116  0109                     	;# 
   117  010C                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  010F                     	;# 
   122  0185                     	;# 
   123  0187                     	;# 
   124  0188                     	;# 
   125  0189                     	;# 
   126  018C                     	;# 
   127  018D                     	;# 
   128  0000                     	;# 
   129  0001                     	;# 
   130  0002                     	;# 
   131  0003                     	;# 
   132  0004                     	;# 
   133  0005                     	;# 
   134  0006                     	;# 
   135  0007                     	;# 
   136  0008                     	;# 
   137  0009                     	;# 
   138  000A                     	;# 
   139  000B                     	;# 
   140  000C                     	;# 
   141  000D                     	;# 
   142  000E                     	;# 
   143  000E                     	;# 
   144  000F                     	;# 
   145  0010                     	;# 
   146  0011                     	;# 
   147  0012                     	;# 
   148  0013                     	;# 
   149  0014                     	;# 
   150  0015                     	;# 
   151  0015                     	;# 
   152  0016                     	;# 
   153  0017                     	;# 
   154  0018                     	;# 
   155  0019                     	;# 
   156  001A                     	;# 
   157  001B                     	;# 
   158  001B                     	;# 
   159  001C                     	;# 
   160  001D                     	;# 
   161  001E                     	;# 
   162  001F                     	;# 
   163  0081                     	;# 
   164  0085                     	;# 
   165  0086                     	;# 
   166  0087                     	;# 
   167  0088                     	;# 
   168  0089                     	;# 
   169  008C                     	;# 
   170  008D                     	;# 
   171  008E                     	;# 
   172  008F                     	;# 
   173  0090                     	;# 
   174  0091                     	;# 
   175  0092                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0094                     	;# 
   180  0095                     	;# 
   181  0096                     	;# 
   182  0097                     	;# 
   183  0098                     	;# 
   184  0099                     	;# 
   185  009A                     	;# 
   186  009B                     	;# 
   187  009C                     	;# 
   188  009D                     	;# 
   189  009E                     	;# 
   190  009F                     	;# 
   191  0105                     	;# 
   192  0107                     	;# 
   193  0108                     	;# 
   194  0109                     	;# 
   195  010C                     	;# 
   196  010C                     	;# 
   197  010D                     	;# 
   198  010E                     	;# 
   199  010F                     	;# 
   200  0185                     	;# 
   201  0187                     	;# 
   202  0188                     	;# 
   203  0189                     	;# 
   204  018C                     	;# 
   205  018D                     	;# 
   206                           
   207                           	psect	nvCOMMON
   208  0077                     __pnvCOMMON:	
   209  0077                     _BANDERA:	
   210  0077                     	ds	1
   211  001E                     _ADRESH	set	30
   212  0008                     _PORTDbits	set	8
   213  000B                     _INTCONbits	set	11
   214  0014                     _SSPCONbits	set	20
   215  001F                     _ADCON0bits	set	31
   216  0009                     _PORTE	set	9
   217  0008                     _PORTD	set	8
   218  0007                     _PORTC	set	7
   219  0005                     _PORTA	set	5
   220  0006                     _PORTB	set	6
   221  0013                     _SSPBUF	set	19
   222  000C                     _PIR1bits	set	12
   223  008C                     _PIE1bits	set	140
   224  009F                     _ADCON1bits	set	159
   225  0089                     _TRISE	set	137
   226  0088                     _TRISD	set	136
   227  0087                     _TRISC	set	135
   228  0086                     _TRISB	set	134
   229  0085                     _TRISA	set	133
   230  008F                     _OSCCONbits	set	143
   231  0094                     _SSPSTATbits	set	148
   232  04A0                     _BF	set	1184
   233  0189                     _ANSELH	set	393
   234  0188                     _ANSEL	set	392
   235                           
   236                           ; #config settings
   237  0000                     
   238                           	psect	cinit
   239  000F                     start_initialization:	
   240  000F                     __initialization:	
   241                           
   242                           ; Clear objects allocated to COMMON
   243  000F  01F4               	clrf	__pbssCOMMON& (0+127)
   244  0010  01F5               	clrf	(__pbssCOMMON+1)& (0+127)
   245  0011  01F6               	clrf	(__pbssCOMMON+2)& (0+127)
   246  0012                     end_of_initialization:	
   247                           ;End of C runtime variable initialization code
   248                           
   249  0012                     __end_of__initialization:	
   250  0012  0183               	clrf	3
   251  0013  120A  118A  2816   	ljmp	_main	;jump to C main() function
   252                           
   253                           	psect	bssCOMMON
   254  0074                     __pbssCOMMON:	
   255  0074                     _y:	
   256  0074                     	ds	1
   257  0075                     _DATA:	
   258  0075                     	ds	1
   259  0076                     _x:	
   260  0076                     	ds	1
   261                           
   262                           	psect	cstackCOMMON
   263  0070                     __pcstackCOMMON:	
   264  0070                     ?_LOOP:	
   265  0070                     ?_ANALOGICO:	
   266                           ; 1 bytes @ 0x0
   267                           
   268  0070                     ?_MESSAGE:	
   269                           ; 1 bytes @ 0x0
   270                           
   271  0070                     ?_ISR:	
   272                           ; 1 bytes @ 0x0
   273                           
   274  0070                     ??_ISR:	
   275                           ; 1 bytes @ 0x0
   276                           
   277  0070                     ?_main:	
   278                           ; 1 bytes @ 0x0
   279                           
   280                           
   281                           ; 1 bytes @ 0x0
   282  0070                     	ds	3
   283  0073                     ??_ANALOGICO:	
   284  0073                     ??_MESSAGE:	
   285                           ; 1 bytes @ 0x3
   286                           
   287                           
   288                           ; 1 bytes @ 0x3
   289  0073                     	ds	1
   290  0074                     ??_LOOP:	
   291  0074                     ??_main:	
   292                           ; 1 bytes @ 0x4
   293                           
   294                           
   295                           	psect	maintext
   296  0016                     __pmaintext:	
   297                           ; 1 bytes @ 0x4
   298 ;;
   299 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   300 ;;
   301 ;; *************** function _main *****************
   302 ;; Defined at:
   303 ;;		line 57 in file "MAESTRO.c"
   304 ;; Parameters:    Size  Location     Type
   305 ;;		None
   306 ;; Auto vars:     Size  Location     Type
   307 ;;		None
   308 ;; Return value:  Size  Location     Type
   309 ;;                  1    wreg      void 
   310 ;; Registers used:
   311 ;;		wreg, status,2, status,0, pclath, cstack
   312 ;; Tracked objects:
   313 ;;		On entry : B00/0
   314 ;;		On exit  : 0/0
   315 ;;		Unchanged: 0/0
   316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   317 ;;      Params:         0       0       0       0       0
   318 ;;      Locals:         0       0       0       0       0
   319 ;;      Temps:          0       0       0       0       0
   320 ;;      Totals:         0       0       0       0       0
   321 ;;Total ram usage:        0 bytes
   322 ;; Hardware stack levels required when called:    3
   323 ;; This function calls:
   324 ;;		_LOOP
   325 ;; This function is called by:
   326 ;;		Startup code after reset
   327 ;; This function uses a non-reentrant model
   328 ;;
   329                           
   330                           
   331                           ;psect for function _main
   332  0016                     _main:	
   333  0016                     l715:	
   334                           ;incstack = 0
   335                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   336                           
   337                           
   338                           ;MAESTRO.c: 60:     OSCCONbits.IRCF = 0b111;
   339  0016  3070               	movlw	112
   340  0017  1683               	bsf	3,5	;RP0=1, select bank1
   341  0018  1303               	bcf	3,6	;RP1=0, select bank1
   342  0019  048F               	iorwf	15,f	;volatile
   343  001A                     l717:	
   344                           
   345                           ;MAESTRO.c: 61:     OSCCONbits.OSTS= 0;
   346  001A  118F               	bcf	15,3	;volatile
   347  001B                     l719:	
   348                           
   349                           ;MAESTRO.c: 62:     OSCCONbits.HTS = 0;
   350  001B  110F               	bcf	15,2	;volatile
   351  001C                     l721:	
   352                           
   353                           ;MAESTRO.c: 63:     OSCCONbits.LTS = 0;
   354  001C  108F               	bcf	15,1	;volatile
   355  001D                     l723:	
   356                           
   357                           ;MAESTRO.c: 64:     OSCCONbits.SCS = 1;
   358  001D  140F               	bsf	15,0	;volatile
   359  001E                     l725:	
   360                           
   361                           ;MAESTRO.c: 68:     ANSEL = 0b000100001;
   362  001E  3021               	movlw	33
   363  001F  1683               	bsf	3,5	;RP0=1, select bank3
   364  0020  1703               	bsf	3,6	;RP1=1, select bank3
   365  0021  0088               	movwf	8	;volatile
   366  0022                     l727:	
   367                           
   368                           ;MAESTRO.c: 69:     ANSELH = 0b00000000;
   369  0022  0189               	clrf	9	;volatile
   370  0023                     l729:	
   371                           
   372                           ;MAESTRO.c: 71:     TRISA = 0b00000001;
   373  0023  3001               	movlw	1
   374  0024  1683               	bsf	3,5	;RP0=1, select bank1
   375  0025  1303               	bcf	3,6	;RP1=0, select bank1
   376  0026  0085               	movwf	5	;volatile
   377  0027                     l731:	
   378                           
   379                           ;MAESTRO.c: 72:     TRISB = 0b00000000;
   380  0027  0186               	clrf	6	;volatile
   381  0028                     l733:	
   382                           
   383                           ;MAESTRO.c: 73:     TRISC = 0b00010000;
   384  0028  3010               	movlw	16
   385  0029  0087               	movwf	7	;volatile
   386  002A                     l735:	
   387                           
   388                           ;MAESTRO.c: 74:     TRISD = 0b00000000;
   389  002A  0188               	clrf	8	;volatile
   390  002B                     l737:	
   391                           
   392                           ;MAESTRO.c: 75:     TRISE = 0001;
   393  002B  3001               	movlw	1
   394  002C  0089               	movwf	9	;volatile
   395  002D                     l739:	
   396                           
   397                           ;MAESTRO.c: 77:     PORTA = 0;
   398  002D  1283               	bcf	3,5	;RP0=0, select bank0
   399  002E  1303               	bcf	3,6	;RP1=0, select bank0
   400  002F  0185               	clrf	5	;volatile
   401  0030                     l741:	
   402                           
   403                           ;MAESTRO.c: 78:     PORTB = 0;
   404  0030  0186               	clrf	6	;volatile
   405  0031                     l743:	
   406                           
   407                           ;MAESTRO.c: 79:     PORTC = 0;
   408  0031  0187               	clrf	7	;volatile
   409  0032                     l745:	
   410                           
   411                           ;MAESTRO.c: 80:     PORTD = 0;
   412  0032  0188               	clrf	8	;volatile
   413  0033                     l747:	
   414                           
   415                           ;MAESTRO.c: 81:     PORTE = 0;
   416  0033  0189               	clrf	9	;volatile
   417  0034                     l749:	
   418                           
   419                           ;MAESTRO.c: 84:     ADCON0bits.ADCS0 = 1;
   420  0034  171F               	bsf	31,6	;volatile
   421  0035                     l751:	
   422                           
   423                           ;MAESTRO.c: 85:     ADCON0bits.ADCS1 = 0;
   424  0035  139F               	bcf	31,7	;volatile
   425  0036                     l753:	
   426                           
   427                           ;MAESTRO.c: 86:     ADCON0bits.CHS0 = 0;
   428  0036  111F               	bcf	31,2	;volatile
   429  0037                     l755:	
   430                           
   431                           ;MAESTRO.c: 87:     ADCON0bits.CHS1 = 0;
   432  0037  119F               	bcf	31,3	;volatile
   433  0038                     l757:	
   434                           
   435                           ;MAESTRO.c: 88:     ADCON0bits.CHS2 = 0;
   436  0038  121F               	bcf	31,4	;volatile
   437  0039                     l759:	
   438                           
   439                           ;MAESTRO.c: 89:     ADCON0bits.CHS3 = 0;
   440  0039  129F               	bcf	31,5	;volatile
   441  003A                     l761:	
   442                           
   443                           ;MAESTRO.c: 90:     ADCON0bits.ADON = 1;
   444  003A  141F               	bsf	31,0	;volatile
   445  003B                     l763:	
   446                           
   447                           ;MAESTRO.c: 91:     ADCON1bits.ADFM = 0;
   448  003B  1683               	bsf	3,5	;RP0=1, select bank1
   449  003C  1303               	bcf	3,6	;RP1=0, select bank1
   450  003D  139F               	bcf	31,7	;volatile
   451  003E                     l765:	
   452                           
   453                           ;MAESTRO.c: 92:     ADCON1bits.VCFG0 = 0;
   454  003E  121F               	bcf	31,4	;volatile
   455  003F                     l767:	
   456                           
   457                           ;MAESTRO.c: 93:     ADCON1bits.VCFG1 = 0;
   458  003F  129F               	bcf	31,5	;volatile
   459  0040                     l769:	
   460                           
   461                           ;MAESTRO.c: 97:     SSPSTATbits.SMP = 0;
   462  0040  1394               	bcf	20,7	;volatile
   463  0041                     l771:	
   464                           
   465                           ;MAESTRO.c: 98:     SSPSTATbits.CKE = 0;
   466  0041  1314               	bcf	20,6	;volatile
   467  0042                     l773:	
   468                           
   469                           ;MAESTRO.c: 99:     SSPCONbits.SSPEN = 1;
   470  0042  1283               	bcf	3,5	;RP0=0, select bank0
   471  0043  1303               	bcf	3,6	;RP1=0, select bank0
   472  0044  1694               	bsf	20,5	;volatile
   473  0045                     l775:	
   474                           
   475                           ;MAESTRO.c: 100:     SSPCONbits.CKP = 1;
   476  0045  1614               	bsf	20,4	;volatile
   477                           
   478                           ;MAESTRO.c: 101:     SSPCONbits.SSPM = 0b0010;
   479  0046  0814               	movf	20,w	;volatile
   480  0047  39F0               	andlw	-16
   481  0048  3802               	iorlw	2
   482  0049  0094               	movwf	20	;volatile
   483  004A                     l777:	
   484                           
   485                           ;MAESTRO.c: 104:     PIE1bits.SSPIE = 1;
   486  004A  1683               	bsf	3,5	;RP0=1, select bank1
   487  004B  1303               	bcf	3,6	;RP1=0, select bank1
   488  004C  158C               	bsf	12,3	;volatile
   489  004D                     l779:	
   490                           
   491                           ;MAESTRO.c: 105:     INTCONbits.PEIE = 1;
   492  004D  170B               	bsf	11,6	;volatile
   493  004E                     l781:	
   494                           
   495                           ;MAESTRO.c: 106:     INTCONbits.GIE = 1;
   496  004E  178B               	bsf	11,7	;volatile
   497  004F                     l783:	
   498                           
   499                           ;MAESTRO.c: 107:     BANDERA = 1;
   500  004F  01F7               	clrf	_BANDERA
   501  0050  0AF7               	incf	_BANDERA,f
   502  0051                     l785:	
   503                           
   504                           ;MAESTRO.c: 108:     LOOP();
   505  0051  120A  118A  2095  120A  118A  	fcall	_LOOP
   506  0056                     l75:	
   507  0056  120A  118A  280C   	ljmp	start
   508  0059                     __end_of_main:	
   509                           
   510                           	psect	text1
   511  0095                     __ptext1:	
   512 ;; *************** function _LOOP *****************
   513 ;; Defined at:
   514 ;;		line 112 in file "MAESTRO.c"
   515 ;; Parameters:    Size  Location     Type
   516 ;;		None
   517 ;; Auto vars:     Size  Location     Type
   518 ;;		None
   519 ;; Return value:  Size  Location     Type
   520 ;;                  1    wreg      void 
   521 ;; Registers used:
   522 ;;		wreg, status,2, status,0, pclath, cstack
   523 ;; Tracked objects:
   524 ;;		On entry : 0/0
   525 ;;		On exit  : 0/0
   526 ;;		Unchanged: 0/0
   527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   528 ;;      Params:         0       0       0       0       0
   529 ;;      Locals:         0       0       0       0       0
   530 ;;      Temps:          0       0       0       0       0
   531 ;;      Totals:         0       0       0       0       0
   532 ;;Total ram usage:        0 bytes
   533 ;; Hardware stack levels used:    1
   534 ;; Hardware stack levels required when called:    2
   535 ;; This function calls:
   536 ;;		_ANALOGICO
   537 ;;		_MESSAGE
   538 ;; This function is called by:
   539 ;;		_main
   540 ;; This function uses a non-reentrant model
   541 ;;
   542                           
   543                           
   544                           ;psect for function _LOOP
   545  0095                     _LOOP:	
   546  0095                     l78:	
   547                           ;incstack = 0
   548                           ; Regs used in _LOOP: [wreg+status,2+status,0+pclath+cstack]
   549                           ;MAESTRO.c: 113:     while(1){
   550                           
   551  0095                     l703:	
   552                           
   553                           ;MAESTRO.c: 114:         ANALOGICO();
   554  0095  120A  118A  2072  120A  118A  	fcall	_ANALOGICO
   555                           
   556                           ;MAESTRO.c: 115:         MESSAGE();
   557  009A  120A  118A  2088  120A  118A  	fcall	_MESSAGE
   558  009F  2895               	goto	l78
   559  00A0  0008               	return
   560  00A1                     __end_of_LOOP:	
   561                           
   562                           	psect	text2
   563  0088                     __ptext2:	
   564 ;; *************** function _MESSAGE *****************
   565 ;; Defined at:
   566 ;;		line 122 in file "MAESTRO.c"
   567 ;; Parameters:    Size  Location     Type
   568 ;;		None
   569 ;; Auto vars:     Size  Location     Type
   570 ;;		None
   571 ;; Return value:  Size  Location     Type
   572 ;;                  1    wreg      void 
   573 ;; Registers used:
   574 ;;		wreg
   575 ;; Tracked objects:
   576 ;;		On entry : 0/0
   577 ;;		On exit  : 0/0
   578 ;;		Unchanged: 0/0
   579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   580 ;;      Params:         0       0       0       0       0
   581 ;;      Locals:         0       0       0       0       0
   582 ;;      Temps:          0       0       0       0       0
   583 ;;      Totals:         0       0       0       0       0
   584 ;;Total ram usage:        0 bytes
   585 ;; Hardware stack levels used:    1
   586 ;; Hardware stack levels required when called:    1
   587 ;; This function calls:
   588 ;;		Nothing
   589 ;; This function is called by:
   590 ;;		_LOOP
   591 ;; This function uses a non-reentrant model
   592 ;;
   593                           
   594                           
   595                           ;psect for function _MESSAGE
   596  0088                     _MESSAGE:	
   597  0088                     l695:	
   598                           ;incstack = 0
   599                           ; Regs used in _MESSAGE: [wreg]
   600                           
   601  0088                     l84:	
   602                           ;MAESTRO.c: 124:     while(BF==1);
   603                           
   604  0088  1683               	bsf	3,5	;RP0=1, select bank1
   605  0089  1303               	bcf	3,6	;RP1=0, select bank1
   606  008A  1814               	btfsc	20,0	;volatile
   607  008B  288D               	goto	u21
   608  008C  288E               	goto	u20
   609  008D                     u21:	
   610  008D  2888               	goto	l84
   611  008E                     u20:	
   612  008E                     l86:	
   613                           
   614                           ;MAESTRO.c: 125:     PORTDbits.RD1 = 1;
   615  008E  1283               	bcf	3,5	;RP0=0, select bank0
   616  008F  1303               	bcf	3,6	;RP1=0, select bank0
   617  0090  1488               	bsf	8,1	;volatile
   618  0091                     l697:	
   619                           
   620                           ;MAESTRO.c: 126:     SSPBUF = y;
   621  0091  0874               	movf	_y,w
   622  0092  0093               	movwf	19	;volatile
   623  0093                     l699:	
   624                           
   625                           ;MAESTRO.c: 127:     PORTDbits.RD1 = 0;
   626  0093  1088               	bcf	8,1	;volatile
   627  0094                     l87:	
   628  0094  0008               	return
   629  0095                     __end_of_MESSAGE:	
   630                           
   631                           	psect	text3
   632  0072                     __ptext3:	
   633 ;; *************** function _ANALOGICO *****************
   634 ;; Defined at:
   635 ;;		line 135 in file "MAESTRO.c"
   636 ;; Parameters:    Size  Location     Type
   637 ;;		None
   638 ;; Auto vars:     Size  Location     Type
   639 ;;		None
   640 ;; Return value:  Size  Location     Type
   641 ;;                  1    wreg      void 
   642 ;; Registers used:
   643 ;;		wreg
   644 ;; Tracked objects:
   645 ;;		On entry : 0/0
   646 ;;		On exit  : 0/0
   647 ;;		Unchanged: 0/0
   648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   649 ;;      Params:         0       0       0       0       0
   650 ;;      Locals:         0       0       0       0       0
   651 ;;      Temps:          1       0       0       0       0
   652 ;;      Totals:         1       0       0       0       0
   653 ;;Total ram usage:        1 bytes
   654 ;; Hardware stack levels used:    1
   655 ;; Hardware stack levels required when called:    1
   656 ;; This function calls:
   657 ;;		Nothing
   658 ;; This function is called by:
   659 ;;		_LOOP
   660 ;; This function uses a non-reentrant model
   661 ;;
   662                           
   663                           
   664                           ;psect for function _ANALOGICO
   665  0072                     _ANALOGICO:	
   666  0072                     l685:	
   667                           ;incstack = 0
   668                           ; Regs used in _ANALOGICO: [wreg]
   669                           
   670                           
   671                           ;MAESTRO.c: 136:     ADCON0bits.ADON = 1;
   672  0072  1283               	bcf	3,5	;RP0=0, select bank0
   673  0073  1303               	bcf	3,6	;RP1=0, select bank0
   674  0074  141F               	bsf	31,0	;volatile
   675  0075                     l687:	
   676                           
   677                           ;MAESTRO.c: 137:     _delay((unsigned long)((1)*(4000000/4000.0)));
   678  0075  30C7               	movlw	199
   679  0076  00F3               	movwf	??_ANALOGICO
   680  0077                     u47:	
   681  0077  2878               	nop2
   682  0078  0BF3               	decfsz	??_ANALOGICO,f
   683  0079  2877               	goto	u47
   684  007A  287B               	nop2
   685  007B  287C               	nop2
   686  007C                     l689:	
   687                           
   688                           ;MAESTRO.c: 138:         ADCON0bits.GO = 1;
   689  007C  1283               	bcf	3,5	;RP0=0, select bank0
   690  007D  1303               	bcf	3,6	;RP1=0, select bank0
   691  007E  149F               	bsf	31,1	;volatile
   692  007F                     l90:	
   693                           ;MAESTRO.c: 139:         while(ADCON0bits.GO);
   694                           
   695  007F  189F               	btfsc	31,1	;volatile
   696  0080  2882               	goto	u11
   697  0081  2883               	goto	u10
   698  0082                     u11:	
   699  0082  287F               	goto	l90
   700  0083                     u10:	
   701  0083                     l691:	
   702                           
   703                           ;MAESTRO.c: 141:             y = ADRESH;
   704  0083  081E               	movf	30,w	;volatile
   705  0084  00F3               	movwf	??_ANALOGICO
   706  0085  0873               	movf	??_ANALOGICO,w
   707  0086  00F4               	movwf	_y
   708  0087                     l93:	
   709  0087  0008               	return
   710  0088                     __end_of_ANALOGICO:	
   711                           
   712                           	psect	text4
   713  0059                     __ptext4:	
   714 ;; *************** function _ISR *****************
   715 ;; Defined at:
   716 ;;		line 42 in file "MAESTRO.c"
   717 ;; Parameters:    Size  Location     Type
   718 ;;		None
   719 ;; Auto vars:     Size  Location     Type
   720 ;;		None
   721 ;; Return value:  Size  Location     Type
   722 ;;                  1    wreg      void 
   723 ;; Registers used:
   724 ;;		wreg
   725 ;; Tracked objects:
   726 ;;		On entry : 0/0
   727 ;;		On exit  : 0/0
   728 ;;		Unchanged: 0/0
   729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   730 ;;      Params:         0       0       0       0       0
   731 ;;      Locals:         0       0       0       0       0
   732 ;;      Temps:          3       0       0       0       0
   733 ;;      Totals:         3       0       0       0       0
   734 ;;Total ram usage:        3 bytes
   735 ;; Hardware stack levels used:    1
   736 ;; This function calls:
   737 ;;		Nothing
   738 ;; This function is called by:
   739 ;;		Interrupt level 1
   740 ;; This function uses a non-reentrant model
   741 ;;
   742                           
   743                           
   744                           ;psect for function _ISR
   745  0059                     _ISR:	
   746  0059                     i1l705:	
   747                           
   748                           ;MAESTRO.c: 44:    if(PIR1bits.SSPIF==1 ){
   749  0059  1283               	bcf	3,5	;RP0=0, select bank0
   750  005A  1303               	bcf	3,6	;RP1=0, select bank0
   751  005B  1D8C               	btfss	12,3	;volatile
   752  005C  285E               	goto	u3_21
   753  005D  285F               	goto	u3_20
   754  005E                     u3_21:	
   755  005E  286B               	goto	i1l70
   756  005F                     u3_20:	
   757  005F                     i1l707:	
   758                           
   759                           ;MAESTRO.c: 45:         x= SSPBUF;
   760  005F  0813               	movf	19,w	;volatile
   761  0060  00F0               	movwf	??_ISR
   762  0061  0870               	movf	??_ISR,w
   763  0062  00F6               	movwf	_x
   764                           
   765                           ;MAESTRO.c: 46:         PORTB = x;
   766  0063  0876               	movf	_x,w
   767  0064  0086               	movwf	6	;volatile
   768  0065                     i1l709:	
   769                           
   770                           ;MAESTRO.c: 47:           SSPSTATbits.BF= 0;
   771  0065  1683               	bsf	3,5	;RP0=1, select bank1
   772  0066  1303               	bcf	3,6	;RP1=0, select bank1
   773  0067  1014               	bcf	20,0	;volatile
   774  0068                     i1l711:	
   775                           
   776                           ;MAESTRO.c: 48:           PIR1bits.SSPIF = 0;
   777  0068  1283               	bcf	3,5	;RP0=0, select bank0
   778  0069  1303               	bcf	3,6	;RP1=0, select bank0
   779  006A  118C               	bcf	12,3	;volatile
   780  006B                     i1l70:	
   781  006B  0872               	movf	??_ISR+2,w
   782  006C  008A               	movwf	10
   783  006D  0E71               	swapf	(??_ISR+1)^(0+4294967168),w
   784  006E  0083               	movwf	3
   785  006F  0EFE               	swapf	btemp,f
   786  0070  0E7E               	swapf	btemp,w
   787  0071  0009               	retfie
   788  0072                     __end_of_ISR:	
   789  007E                     btemp	set	126	;btemp
   790  007E                     wtemp0	set	126
   791                           
   792                           	psect	intentry
   793  0004                     __pintentry:	
   794                           ;incstack = 0
   795                           ; Regs used in _ISR: [wreg]
   796                           
   797  0004                     interrupt_function:	
   798  007E                     saved_w	set	btemp
   799  0004  00FE               	movwf	btemp
   800  0005  0E03               	swapf	3,w
   801  0006  00F1               	movwf	??_ISR+1
   802  0007  080A               	movf	10,w
   803  0008  00F2               	movwf	??_ISR+2
   804  0009  120A  118A  2859   	ljmp	_ISR


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _LOOP->_ANALOGICO

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                               _LOOP
 ---------------------------------------------------------------------------------
 (1) _LOOP                                                 0     0      0       0
                          _ANALOGICO
                            _MESSAGE
 ---------------------------------------------------------------------------------
 (2) _MESSAGE                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ANALOGICO                                            1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LOOP
     _ANALOGICO
     _MESSAGE

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      4       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       8       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       8      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Feb 19 20:39:39 2020

                       _x 0076                         _y 0074               __CFG_CP$OFF 0000  
             _SSPSTATbits 0094                        _BF 04A0                        l90 007F  
                      l75 0056                        l84 0088                        l93 0087  
                      l86 008E                        l78 0095                        l87 0094  
                      u10 0083                        u11 0082                        u20 008E  
                      u21 008D                        u47 0077        __size_of_ANALOGICO 0016  
                     l703 0095                       l721 001C                       l731 0027  
                     l723 001D                       l715 0016                       l741 0030  
                     l733 0028                       l725 001E                       l717 001A  
                     l751 0035                       l743 0031                       l735 002A  
                     l727 0022                       l719 001B                       l761 003A  
                     l753 0036                       l745 0032                       l737 002B  
                     l729 0023                       l691 0083                       l771 0041  
                     l763 003B                       l755 0037                       l747 0033  
                     l739 002D                       l685 0072                       l781 004E  
                     l773 0042                       l765 003E                       l757 0038  
                     l749 0034                       l687 0075                       l695 0088  
                     l783 004F                       l775 0045                       l767 003F  
                     l759 0039                       l689 007C                       l697 0091  
                     l785 0051                       l777 004A                       l769 0040  
                     l699 0093                       l779 004D              __CFG_CPD$OFF 0000  
                     _ISR 0059              __CFG_LVP$OFF 0000                      ?_ISR 0070  
         __end_of_MESSAGE 0095                      _DATA 0075                      i1l70 006B  
                    _LOOP 0095                      u3_20 005F                      u3_21 005E  
            __CFG_WRT$OFF 0000                      _main 0016                      btemp 007E  
                    start 000C             __CFG_IESO$OFF 0000                     ??_ISR 0070  
                   ?_LOOP 0070                     ?_main 0070             __CFG_WDTE$OFF 0000  
                   _ANSEL 0188                     i1l711 0068                     i1l705 0059  
                   i1l707 005F                     i1l709 0065                     _PORTA 0005  
                   _PORTB 0006                     _PORTC 0007                     _PORTD 0008  
                   _PORTE 0009                     _TRISA 0085                     _TRISB 0086  
                   _TRISC 0087                     _TRISD 0088                     _TRISE 0089  
          __CFG_FCMEN$OFF 0000            __CFG_BOREN$OFF 0000                     pclath 000A  
       __end_of_ANALOGICO 0088                     status 0003                     wtemp0 007E  
            __end_of_LOOP 00A1            __CFG_MCLRE$OFF 0000           __initialization 000F  
            __end_of_main 0059                    ??_LOOP 0074                    ??_main 0074  
               ??_MESSAGE 0073                    _ADRESH 001E                    _ANSELH 0189  
                  _SSPBUF 0013            __CFG_PWRTE$OFF 0000                    saved_w 007E  
 __end_of__initialization 0012            __pcstackCOMMON 0070                __pnvCOMMON 0077  
              __pmaintext 0016                __pintentry 0004                   _BANDERA 0077  
                 _MESSAGE 0088                 _ANALOGICO 0072                   __ptext1 0095  
                 __ptext2 0088                   __ptext3 0072                   __ptext4 0059  
            __size_of_ISR 0019      end_of_initialization 0012                ?_ANALOGICO 0070  
               _PORTDbits 0008       start_initialization 000F               __end_of_ISR 0072  
__CFG_FOSC$INTRC_NOCLKOUT 0000               ??_ANALOGICO 0073                  ?_MESSAGE 0070  
             __pbssCOMMON 0074                 ___latbits 0002         interrupt_function 0004  
                _PIE1bits 008C                  _PIR1bits 000C                _ADCON0bits 001F  
              _ADCON1bits 009F          __size_of_MESSAGE 000D         __CFG_BOR4V$BOR40V 0000  
           __size_of_LOOP 000C             __size_of_main 0043                _INTCONbits 000B  
                intlevel1 0000                _OSCCONbits 008F                _SSPCONbits 0014  
